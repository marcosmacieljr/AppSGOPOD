{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleInterpolator from \"./StackViewStyleInterpolator\";\nimport { supportsImprovedSpringAnimation } from \"../../utils/ReactNativeFeatures\";\nvar IOSTransitionSpec;\n\nif (supportsImprovedSpringAnimation()) {\n  IOSTransitionSpec = {\n    timing: Animated.spring,\n    stiffness: 1000,\n    damping: 500,\n    mass: 3,\n    overshootClamping: true,\n    restDisplacementThreshold: 0.01,\n    restSpeedThreshold: 0.01\n  };\n} else {\n  IOSTransitionSpec = {\n    duration: 500,\n    easing: Easing.bezier(0.2833, 0.99, 0.31833, 0.99),\n    timing: Animated.timing\n  };\n}\n\nvar SlideFromRightIOS = {\n  transitionSpec: IOSTransitionSpec,\n  screenInterpolator: StyleInterpolator.forHorizontal,\n  containerStyleLight: {\n    backgroundColor: '#eee'\n  },\n  containerStyleDark: {\n    backgroundColor: '#000'\n  }\n};\nvar ModalSlideFromBottomIOS = {\n  transitionSpec: IOSTransitionSpec,\n  screenInterpolator: StyleInterpolator.forVertical,\n  containerStyleLight: {\n    backgroundColor: '#eee'\n  },\n  containerStyleDark: {\n    backgroundColor: '#000'\n  }\n};\nvar FadeInFromBottomAndroid = {\n  transitionSpec: {\n    duration: 350,\n    easing: Easing.out(Easing.poly(5)),\n    timing: Animated.timing\n  },\n  screenInterpolator: StyleInterpolator.forFadeFromBottomAndroid\n};\nvar FadeOutToBottomAndroid = {\n  transitionSpec: {\n    duration: 150,\n    easing: Easing.in(Easing.linear),\n    timing: Animated.timing\n  },\n  screenInterpolator: StyleInterpolator.forFadeToBottomAndroid\n};\nvar NoAnimation = {\n  transitionSpec: {\n    duration: 0,\n    timing: Animated.timing\n  },\n  screenInterpolator: StyleInterpolator.forNoAnimation,\n  containerStyleLight: {\n    backgroundColor: '#eee'\n  },\n  containerStyleDark: {\n    backgroundColor: '#000'\n  }\n};\n\nfunction defaultTransitionConfig(transitionProps, prevTransitionProps, isModal) {\n  if (Platform.OS !== 'ios') {\n    if (prevTransitionProps && transitionProps.index < prevTransitionProps.index) {\n      return FadeOutToBottomAndroid;\n    }\n\n    return FadeInFromBottomAndroid;\n  }\n\n  if (isModal) {\n    return ModalSlideFromBottomIOS;\n  }\n\n  return SlideFromRightIOS;\n}\n\nfunction getTransitionConfig(transitionConfigurer, transitionProps, prevTransitionProps, isModal) {\n  var defaultConfig = defaultTransitionConfig(transitionProps, prevTransitionProps, isModal);\n\n  if (transitionConfigurer) {\n    return _objectSpread({}, defaultConfig, transitionConfigurer(transitionProps, prevTransitionProps, isModal));\n  }\n\n  return defaultConfig;\n}\n\nexport default {\n  defaultTransitionConfig: defaultTransitionConfig,\n  getTransitionConfig: getTransitionConfig,\n  SlideFromRightIOS: SlideFromRightIOS,\n  ModalSlideFromBottomIOS: ModalSlideFromBottomIOS,\n  FadeInFromBottomAndroid: FadeInFromBottomAndroid,\n  FadeOutToBottomAndroid: FadeOutToBottomAndroid,\n  NoAnimation: NoAnimation\n};","map":{"version":3,"mappings":"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","names":["StyleInterpolator","supportsImprovedSpringAnimation","IOSTransitionSpec","timing","Animated","spring","stiffness","damping","mass","overshootClamping","restDisplacementThreshold","restSpeedThreshold","duration","easing","Easing","bezier","SlideFromRightIOS","transitionSpec","screenInterpolator","forHorizontal","containerStyleLight","backgroundColor","containerStyleDark","ModalSlideFromBottomIOS","forVertical","FadeInFromBottomAndroid","out","poly","forFadeFromBottomAndroid","FadeOutToBottomAndroid","in","linear","forFadeToBottomAndroid","NoAnimation","forNoAnimation","defaultTransitionConfig","transitionProps","prevTransitionProps","isModal","Platform","OS","index","getTransitionConfig","transitionConfigurer","defaultConfig"],"sources":["StackViewTransitionConfigs.tsx"],"sourcesContent":["import { Animated, Easing, Platform } from 'react-native';\nimport StyleInterpolator from './StackViewStyleInterpolator';\nimport { supportsImprovedSpringAnimation } from '../../utils/ReactNativeFeatures';\nimport { TransitionProps, TransitionConfig } from '../../types';\n\nlet IOSTransitionSpec;\nif (supportsImprovedSpringAnimation()) {\n  // These are the exact values from UINavigationController's animation configuration\n  IOSTransitionSpec = {\n    timing: Animated.spring,\n    stiffness: 1000,\n    damping: 500,\n    mass: 3,\n    overshootClamping: true,\n    restDisplacementThreshold: 0.01,\n    restSpeedThreshold: 0.01,\n  };\n} else {\n  // This is an approximation of the IOS spring animation using a derived bezier curve\n  IOSTransitionSpec = {\n    duration: 500,\n    easing: Easing.bezier(0.2833, 0.99, 0.31833, 0.99),\n    timing: Animated.timing,\n  };\n}\n\n// Standard iOS navigation transition\nconst SlideFromRightIOS = {\n  transitionSpec: IOSTransitionSpec,\n  screenInterpolator: StyleInterpolator.forHorizontal,\n  containerStyleLight: {\n    backgroundColor: '#eee',\n  },\n  containerStyleDark: {\n    backgroundColor: '#000',\n  },\n};\n\n// Standard iOS navigation transition for modals\nconst ModalSlideFromBottomIOS = {\n  transitionSpec: IOSTransitionSpec,\n  screenInterpolator: StyleInterpolator.forVertical,\n  containerStyleLight: {\n    backgroundColor: '#eee',\n  },\n  containerStyleDark: {\n    backgroundColor: '#000',\n  },\n};\n\n// Standard Android navigation transition when opening an Activity\nconst FadeInFromBottomAndroid = {\n  // See http://androidxref.com/7.1.1_r6/xref/frameworks/base/core/res/res/anim/activity_open_enter.xml\n  transitionSpec: {\n    duration: 350,\n    easing: Easing.out(Easing.poly(5)), // decelerate\n    timing: Animated.timing,\n  },\n  screenInterpolator: StyleInterpolator.forFadeFromBottomAndroid,\n};\n\n// Standard Android navigation transition when closing an Activity\nconst FadeOutToBottomAndroid = {\n  // See http://androidxref.com/7.1.1_r6/xref/frameworks/base/core/res/res/anim/activity_close_exit.xml\n  transitionSpec: {\n    duration: 150,\n    easing: Easing.in(Easing.linear), // accelerate\n    timing: Animated.timing,\n  },\n  screenInterpolator: StyleInterpolator.forFadeToBottomAndroid,\n};\n\nconst NoAnimation = {\n  transitionSpec: {\n    duration: 0,\n    timing: Animated.timing,\n  },\n  screenInterpolator: StyleInterpolator.forNoAnimation,\n  containerStyleLight: {\n    backgroundColor: '#eee',\n  },\n  containerStyleDark: {\n    backgroundColor: '#000',\n  },\n};\n\nfunction defaultTransitionConfig(\n  transitionProps: TransitionProps,\n  prevTransitionProps?: TransitionProps,\n  isModal?: boolean\n): TransitionConfig {\n  if (Platform.OS !== 'ios') {\n    // Use the default Android animation no matter if the screen is a modal.\n    // Android doesn't have full-screen modals like iOS does, it has dialogs.\n    if (\n      prevTransitionProps &&\n      transitionProps.index < prevTransitionProps.index\n    ) {\n      // Navigating back to the previous screen\n      return FadeOutToBottomAndroid;\n    }\n    return FadeInFromBottomAndroid;\n  }\n  // iOS and other platforms\n  if (isModal) {\n    return ModalSlideFromBottomIOS;\n  }\n  return SlideFromRightIOS;\n}\n\nfunction getTransitionConfig<T = {}>(\n  transitionConfigurer:\n    | undefined\n    | ((\n        transitionProps: TransitionProps,\n        prevTransitionProps?: TransitionProps,\n        isModal?: boolean\n      ) => T),\n  transitionProps: TransitionProps,\n  prevTransitionProps?: TransitionProps,\n  isModal?: boolean\n): TransitionConfig & T {\n  const defaultConfig = defaultTransitionConfig(\n    transitionProps,\n    prevTransitionProps,\n    isModal\n  );\n  if (transitionConfigurer) {\n    return {\n      ...defaultConfig,\n      ...transitionConfigurer(transitionProps, prevTransitionProps, isModal),\n    };\n  }\n\n  return defaultConfig as any;\n}\n\nexport default {\n  defaultTransitionConfig,\n  getTransitionConfig,\n  SlideFromRightIOS,\n  ModalSlideFromBottomIOS,\n  FadeInFromBottomAndroid,\n  FadeOutToBottomAndroid,\n  NoAnimation,\n};\n"]},"metadata":{},"sourceType":"module"}