{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\RepositorioAPPSGO\\\\APP-main\\\\node_modules\\\\react-native-material-textfield\\\\src\\\\components\\\\field\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { ViewPropTypes } from \"react-native-web/dist/index\";\nimport Line from \"../line\";\nimport Label from \"../label\";\nimport Affix from \"../affix\";\nimport Helper from \"../helper\";\nimport Counter from \"../counter\";\nimport styles from \"./styles\";\n\nfunction startAnimation(animation, options, callback) {\n  Animated.timing(animation, options).start(callback);\n}\n\nfunction labelStateFromProps(props, state) {\n  var placeholder = props.placeholder,\n      defaultValue = props.defaultValue;\n  var text = state.text,\n      receivedFocus = state.receivedFocus;\n  return !!(placeholder || text || !receivedFocus && defaultValue);\n}\n\nfunction errorStateFromProps(props, state) {\n  var error = props.error;\n  return !!error;\n}\n\nvar TextField = function (_PureComponent) {\n  _inherits(TextField, _PureComponent);\n\n  var _super = _createSuper(TextField);\n\n  _createClass(TextField, null, [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(_ref, state) {\n      var error = _ref.error;\n\n      if (error && error !== state.error) {\n        return {\n          error: error\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  function TextField(props) {\n    var _this;\n\n    _classCallCheck(this, TextField);\n\n    _this = _super.call(this, props);\n    _this.onBlur = _this.onBlur.bind(_assertThisInitialized(_this));\n    _this.onFocus = _this.onFocus.bind(_assertThisInitialized(_this));\n    _this.onPress = _this.focus.bind(_assertThisInitialized(_this));\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_this));\n    _this.onChangeText = _this.onChangeText.bind(_assertThisInitialized(_this));\n    _this.onContentSizeChange = _this.onContentSizeChange.bind(_assertThisInitialized(_this));\n    _this.onFocusAnimationEnd = _this.onFocusAnimationEnd.bind(_assertThisInitialized(_this));\n\n    _this.createGetter('contentInset');\n\n    _this.createGetter('labelOffset');\n\n    _this.inputRef = React.createRef();\n    _this.mounted = false;\n    _this.focused = false;\n    var _this$props = _this.props,\n        text = _this$props.value,\n        error = _this$props.error,\n        fontSize = _this$props.fontSize;\n    var labelState = labelStateFromProps(_this.props, {\n      text: text\n    }) ? 1 : 0;\n    var focusState = errorStateFromProps(_this.props) ? -1 : 0;\n    _this.state = {\n      text: text,\n      error: error,\n      focusAnimation: new Animated.Value(focusState),\n      labelAnimation: new Animated.Value(labelState),\n      receivedFocus: false,\n      height: fontSize * 1.5\n    };\n    return _this;\n  }\n\n  _createClass(TextField, [{\n    key: \"createGetter\",\n    value: function createGetter(name) {\n      var _this2 = this;\n\n      this[name] = function () {\n        var value = _this2.props[name];\n        var defaultValue = _this2.constructor[name];\n        return _objectSpread(_objectSpread({}, defaultValue), value);\n      };\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.mounted = true;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.mounted = false;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var errorState = errorStateFromProps(this.props);\n      var prevErrorState = errorStateFromProps(prevProps);\n\n      if (errorState ^ prevErrorState) {\n        this.startFocusAnimation();\n      }\n\n      var labelState = labelStateFromProps(this.props, this.state);\n      var prevLabelState = labelStateFromProps(prevProps, prevState);\n\n      if (labelState ^ prevLabelState) {\n        this.startLabelAnimation();\n      }\n    }\n  }, {\n    key: \"startFocusAnimation\",\n    value: function startFocusAnimation() {\n      var focusAnimation = this.state.focusAnimation;\n      var duration = this.props.animationDuration;\n      var options = {\n        toValue: this.focusState(),\n        duration: duration\n      };\n      startAnimation(focusAnimation, options, this.onFocusAnimationEnd);\n    }\n  }, {\n    key: \"startLabelAnimation\",\n    value: function startLabelAnimation() {\n      var labelAnimation = this.state.labelAnimation;\n      var duration = this.props.animationDuration;\n      var options = {\n        toValue: this.labelState(),\n        useNativeDriver: true,\n        duration: duration\n      };\n      startAnimation(labelAnimation, options);\n    }\n  }, {\n    key: \"setNativeProps\",\n    value: function setNativeProps(props) {\n      var input = this.inputRef.current;\n      input.setNativeProps(props);\n    }\n  }, {\n    key: \"focusState\",\n    value: function focusState() {\n      if (errorStateFromProps(this.props)) {\n        return -1;\n      }\n\n      return this.focused ? 1 : 0;\n    }\n  }, {\n    key: \"labelState\",\n    value: function labelState() {\n      if (labelStateFromProps(this.props, this.state)) {\n        return 1;\n      }\n\n      return this.focused ? 1 : 0;\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      var _this$props2 = this.props,\n          disabled = _this$props2.disabled,\n          editable = _this$props2.editable;\n      var input = this.inputRef.current;\n\n      if (!disabled && editable) {\n        input.focus();\n      }\n    }\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      var input = this.inputRef.current;\n      input.blur();\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      var input = this.inputRef.current;\n      input.clear();\n      this.onChangeText('');\n    }\n  }, {\n    key: \"value\",\n    value: function value() {\n      var text = this.state.text;\n      var defaultValue = this.props.defaultValue;\n      var value = this.isDefaultVisible() ? defaultValue : text;\n\n      if (null == value) {\n        return '';\n      }\n\n      return 'string' === typeof value ? value : String(value);\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(text) {\n      this.setState({\n        text: text\n      });\n    }\n  }, {\n    key: \"isFocused\",\n    value: function isFocused() {\n      var input = this.inputRef.current;\n      return input.isFocused();\n    }\n  }, {\n    key: \"isRestricted\",\n    value: function isRestricted() {\n      var limit = this.props.characterRestriction;\n\n      var _this$value = this.value(),\n          count = _this$value.length;\n\n      return limit < count;\n    }\n  }, {\n    key: \"isErrored\",\n    value: function isErrored() {\n      return errorStateFromProps(this.props);\n    }\n  }, {\n    key: \"isDefaultVisible\",\n    value: function isDefaultVisible() {\n      var _this$state = this.state,\n          text = _this$state.text,\n          receivedFocus = _this$state.receivedFocus;\n      var defaultValue = this.props.defaultValue;\n      return !receivedFocus && null == text && null != defaultValue;\n    }\n  }, {\n    key: \"isPlaceholderVisible\",\n    value: function isPlaceholderVisible() {\n      var placeholder = this.props.placeholder;\n      return placeholder && !this.focused && !this.value();\n    }\n  }, {\n    key: \"isLabelActive\",\n    value: function isLabelActive() {\n      return 1 === this.labelState();\n    }\n  }, {\n    key: \"onFocus\",\n    value: function onFocus(event) {\n      var _this$props3 = this.props,\n          onFocus = _this$props3.onFocus,\n          clearTextOnFocus = _this$props3.clearTextOnFocus;\n      var receivedFocus = this.state.receivedFocus;\n\n      if ('function' === typeof onFocus) {\n        onFocus(event);\n      }\n\n      if (clearTextOnFocus) {\n        this.clear();\n      }\n\n      this.focused = true;\n      this.startFocusAnimation();\n      this.startLabelAnimation();\n\n      if (!receivedFocus) {\n        this.setState({\n          receivedFocus: true,\n          text: this.value()\n        });\n      }\n    }\n  }, {\n    key: \"onBlur\",\n    value: function onBlur(event) {\n      var onBlur = this.props.onBlur;\n\n      if ('function' === typeof onBlur) {\n        onBlur(event);\n      }\n\n      this.focused = false;\n      this.startFocusAnimation();\n      this.startLabelAnimation();\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(event) {\n      var onChange = this.props.onChange;\n\n      if ('function' === typeof onChange) {\n        onChange(event);\n      }\n    }\n  }, {\n    key: \"onChangeText\",\n    value: function onChangeText(text) {\n      var _this$props4 = this.props,\n          onChangeText = _this$props4.onChangeText,\n          formatText = _this$props4.formatText;\n\n      if ('function' === typeof formatText) {\n        text = formatText(text);\n      }\n\n      this.setState({\n        text: text\n      });\n\n      if ('function' === typeof onChangeText) {\n        onChangeText(text);\n      }\n    }\n  }, {\n    key: \"onContentSizeChange\",\n    value: function onContentSizeChange(event) {\n      var _this$props5 = this.props,\n          onContentSizeChange = _this$props5.onContentSizeChange,\n          fontSize = _this$props5.fontSize;\n      var height = event.nativeEvent.contentSize.height;\n\n      if ('function' === typeof onContentSizeChange) {\n        onContentSizeChange(event);\n      }\n\n      this.setState({\n        height: Math.max(fontSize * 1.5, Math.ceil(height) + Platform.select({\n          ios: 4,\n          android: 1\n        }))\n      });\n    }\n  }, {\n    key: \"onFocusAnimationEnd\",\n    value: function onFocusAnimationEnd() {\n      var error = this.props.error;\n      var retainedError = this.state.error;\n\n      if (this.mounted && !error && retainedError) {\n        this.setState({\n          error: null\n        });\n      }\n    }\n  }, {\n    key: \"inputHeight\",\n    value: function inputHeight() {\n      var computedHeight = this.state.height;\n      var _this$props6 = this.props,\n          multiline = _this$props6.multiline,\n          fontSize = _this$props6.fontSize,\n          _this$props6$height = _this$props6.height,\n          height = _this$props6$height === void 0 ? computedHeight : _this$props6$height;\n      return multiline ? height : fontSize * 1.5;\n    }\n  }, {\n    key: \"inputContainerHeight\",\n    value: function inputContainerHeight() {\n      var _this$props7 = this.props,\n          labelFontSize = _this$props7.labelFontSize,\n          multiline = _this$props7.multiline;\n      var contentInset = this.contentInset();\n\n      if ('web' === Platform.OS && multiline) {\n        return 'auto';\n      }\n\n      return contentInset.top + labelFontSize + contentInset.label + this.inputHeight() + contentInset.input;\n    }\n  }, {\n    key: \"inputProps\",\n    value: function inputProps() {\n      var store = {};\n\n      for (var key in TextInput.propTypes) {\n        if ('defaultValue' === key) {\n          continue;\n        }\n\n        if (key in this.props) {\n          store[key] = this.props[key];\n        }\n      }\n\n      return store;\n    }\n  }, {\n    key: \"inputStyle\",\n    value: function inputStyle() {\n      var _this$props8 = this.props,\n          fontSize = _this$props8.fontSize,\n          baseColor = _this$props8.baseColor,\n          textColor = _this$props8.textColor,\n          disabled = _this$props8.disabled,\n          multiline = _this$props8.multiline;\n      var color = disabled || this.isDefaultVisible() ? baseColor : textColor;\n      var style = {\n        fontSize: fontSize,\n        color: color,\n        height: this.inputHeight()\n      };\n\n      if (multiline) {\n        var lineHeight = fontSize * 1.5;\n        var offset = 'ios' === Platform.OS ? 2 : 0;\n        style.height += lineHeight;\n        style.transform = [{\n          translateY: lineHeight + offset\n        }];\n      }\n\n      return style;\n    }\n  }, {\n    key: \"renderLabel\",\n    value: function renderLabel(props) {\n      var offset = this.labelOffset();\n      var _this$props9 = this.props,\n          label = _this$props9.label,\n          fontSize = _this$props9.fontSize,\n          labelFontSize = _this$props9.labelFontSize,\n          labelTextStyle = _this$props9.labelTextStyle;\n      return React.createElement(Label, _extends({}, props, {\n        fontSize: fontSize,\n        activeFontSize: labelFontSize,\n        offset: offset,\n        label: label,\n        style: labelTextStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 7\n        }\n      }));\n    }\n  }, {\n    key: \"renderLine\",\n    value: function renderLine(props) {\n      return React.createElement(Line, _extends({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 7\n        }\n      }));\n    }\n  }, {\n    key: \"renderAccessory\",\n    value: function renderAccessory(prop) {\n      var renderAccessory = this.props[prop];\n      return 'function' === typeof renderAccessory ? renderAccessory() : null;\n    }\n  }, {\n    key: \"renderAffix\",\n    value: function renderAffix(type) {\n      var labelAnimation = this.state.labelAnimation;\n      var _this$props10 = this.props,\n          affix = _this$props10[type],\n          fontSize = _this$props10.fontSize,\n          color = _this$props10.baseColor,\n          style = _this$props10.affixTextStyle;\n\n      if (null == affix) {\n        return null;\n      }\n\n      var props = {\n        type: type,\n        style: style,\n        color: color,\n        fontSize: fontSize,\n        labelAnimation: labelAnimation\n      };\n      return React.createElement(Affix, _extends({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 7\n        }\n      }), affix);\n    }\n  }, {\n    key: \"renderHelper\",\n    value: function renderHelper() {\n      var _this$state2 = this.state,\n          focusAnimation = _this$state2.focusAnimation,\n          error = _this$state2.error;\n      var _this$props11 = this.props,\n          title = _this$props11.title,\n          disabled = _this$props11.disabled,\n          baseColor = _this$props11.baseColor,\n          errorColor = _this$props11.errorColor,\n          style = _this$props11.titleTextStyle,\n          limit = _this$props11.characterRestriction;\n\n      var _this$value2 = this.value(),\n          count = _this$value2.length;\n\n      var contentInset = this.contentInset();\n      var containerStyle = {\n        paddingLeft: contentInset.left,\n        paddingRight: contentInset.right,\n        minHeight: contentInset.bottom\n      };\n      var styleProps = {\n        style: style,\n        baseColor: baseColor,\n        errorColor: errorColor\n      };\n\n      var counterProps = _objectSpread(_objectSpread({}, styleProps), {}, {\n        limit: limit,\n        count: count\n      });\n\n      var helperProps = _objectSpread(_objectSpread({}, styleProps), {}, {\n        title: title,\n        error: error,\n        disabled: disabled,\n        focusAnimation: focusAnimation\n      });\n\n      return React.createElement(View, {\n        style: [styles.helperContainer, containerStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 7\n        }\n      }, React.createElement(Helper, _extends({}, helperProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 9\n        }\n      })), React.createElement(Counter, _extends({}, counterProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 9\n        }\n      })));\n    }\n  }, {\n    key: \"renderInput\",\n    value: function renderInput() {\n      var _this$props12 = this.props,\n          disabled = _this$props12.disabled,\n          editable = _this$props12.editable,\n          tintColor = _this$props12.tintColor,\n          inputStyleOverrides = _this$props12.style;\n      var props = this.inputProps();\n      var inputStyle = this.inputStyle();\n      return React.createElement(TextInput, _extends({\n        selectionColor: tintColor\n      }, props, {\n        style: [styles.input, inputStyle, inputStyleOverrides],\n        editable: !disabled && editable,\n        onChange: this.onChange,\n        onChangeText: this.onChangeText,\n        onContentSizeChange: this.onContentSizeChange,\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n        value: this.value(),\n        ref: this.inputRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 7\n        }\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state3 = this.state,\n          labelAnimation = _this$state3.labelAnimation,\n          focusAnimation = _this$state3.focusAnimation;\n      var _this$props13 = this.props,\n          editable = _this$props13.editable,\n          disabled = _this$props13.disabled,\n          lineType = _this$props13.lineType,\n          disabledLineType = _this$props13.disabledLineType,\n          lineWidth = _this$props13.lineWidth,\n          activeLineWidth = _this$props13.activeLineWidth,\n          disabledLineWidth = _this$props13.disabledLineWidth,\n          tintColor = _this$props13.tintColor,\n          baseColor = _this$props13.baseColor,\n          errorColor = _this$props13.errorColor,\n          containerStyle = _this$props13.containerStyle,\n          inputContainerStyleOverrides = _this$props13.inputContainerStyle;\n      var restricted = this.isRestricted();\n      var contentInset = this.contentInset();\n      var inputContainerStyle = {\n        paddingTop: contentInset.top,\n        paddingRight: contentInset.right,\n        paddingBottom: contentInset.input,\n        paddingLeft: contentInset.left,\n        height: this.inputContainerHeight()\n      };\n      var containerProps = {\n        style: containerStyle,\n        onStartShouldSetResponder: function onStartShouldSetResponder() {\n          return true;\n        },\n        onResponderRelease: this.onPress,\n        pointerEvents: !disabled && editable ? 'auto' : 'none'\n      };\n      var inputContainerProps = {\n        style: [this.constructor.inputContainerStyle, inputContainerStyle, inputContainerStyleOverrides]\n      };\n      var styleProps = {\n        disabled: disabled,\n        restricted: restricted,\n        baseColor: baseColor,\n        tintColor: tintColor,\n        errorColor: errorColor,\n        contentInset: contentInset,\n        focusAnimation: focusAnimation,\n        labelAnimation: labelAnimation\n      };\n\n      var lineProps = _objectSpread(_objectSpread({}, styleProps), {}, {\n        lineWidth: lineWidth,\n        activeLineWidth: activeLineWidth,\n        disabledLineWidth: disabledLineWidth,\n        lineType: lineType,\n        disabledLineType: disabledLineType\n      });\n\n      return React.createElement(View, _extends({}, containerProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 706,\n          columnNumber: 7\n        }\n      }), React.createElement(Animated.View, _extends({}, inputContainerProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 707,\n          columnNumber: 9\n        }\n      }), this.renderLine(lineProps), this.renderAccessory('renderLeftAccessory'), React.createElement(View, {\n        style: styles.stack,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 711,\n          columnNumber: 11\n        }\n      }, this.renderLabel(styleProps), React.createElement(View, {\n        style: styles.row,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 714,\n          columnNumber: 13\n        }\n      }, this.renderAffix('prefix'), this.renderInput(), this.renderAffix('suffix'))), this.renderAccessory('renderRightAccessory')), this.renderHelper());\n    }\n  }]);\n\n  return TextField;\n}(PureComponent);\n\nTextField.defaultProps = {\n  underlineColorAndroid: 'transparent',\n  disableFullscreenUI: true,\n  autoCapitalize: 'sentences',\n  editable: true,\n  animationDuration: 225,\n  fontSize: 16,\n  labelFontSize: 12,\n  tintColor: 'rgb(0, 145, 234)',\n  textColor: 'rgba(0, 0, 0, .87)',\n  baseColor: 'rgba(0, 0, 0, .38)',\n  errorColor: 'rgb(213, 0, 0)',\n  lineWidth: StyleSheet.hairlineWidth,\n  activeLineWidth: 2,\n  disabledLineWidth: 1,\n  lineType: 'solid',\n  disabledLineType: 'dotted',\n  disabled: false\n};\nTextField.propTypes = _objectSpread(_objectSpread({}, TextInput.propTypes), {}, {\n  animationDuration: PropTypes.number,\n  fontSize: PropTypes.number,\n  labelFontSize: PropTypes.number,\n  contentInset: PropTypes.shape({\n    top: PropTypes.number,\n    label: PropTypes.number,\n    input: PropTypes.number,\n    left: PropTypes.number,\n    right: PropTypes.number,\n    bottom: PropTypes.number\n  }),\n  labelOffset: Label.propTypes.offset,\n  labelTextStyle: Text.propTypes.style,\n  titleTextStyle: Text.propTypes.style,\n  affixTextStyle: Text.propTypes.style,\n  tintColor: PropTypes.string,\n  textColor: PropTypes.string,\n  baseColor: PropTypes.string,\n  label: PropTypes.string,\n  title: PropTypes.string,\n  characterRestriction: PropTypes.number,\n  error: PropTypes.string,\n  errorColor: PropTypes.string,\n  lineWidth: PropTypes.number,\n  activeLineWidth: PropTypes.number,\n  disabledLineWidth: PropTypes.number,\n  lineType: Line.propTypes.lineType,\n  disabledLineType: Line.propTypes.lineType,\n  disabled: PropTypes.bool,\n  formatText: PropTypes.func,\n  renderLeftAccessory: PropTypes.func,\n  renderRightAccessory: PropTypes.func,\n  prefix: PropTypes.string,\n  suffix: PropTypes.string,\n  containerStyle: (ViewPropTypes || View.propTypes).style,\n  inputContainerStyle: (ViewPropTypes || View.propTypes).style\n});\nTextField.inputContainerStyle = styles.inputContainer;\nTextField.contentInset = {\n  top: 16,\n  label: 4,\n  input: 8,\n  left: 0,\n  right: 0,\n  bottom: 8\n};\nTextField.labelOffset = {\n  x0: 0,\n  y0: 0,\n  x1: 0,\n  y1: 0\n};\nexport { TextField as default };","map":{"version":3,"sources":["C:/RepositorioAPPSGO/APP-main/node_modules/react-native-material-textfield/src/components/field/index.js"],"names":["PropTypes","React","PureComponent","ViewPropTypes","Line","Label","Affix","Helper","Counter","styles","startAnimation","animation","options","callback","Animated","timing","start","labelStateFromProps","props","state","placeholder","defaultValue","text","receivedFocus","errorStateFromProps","error","TextField","onBlur","bind","onFocus","onPress","focus","onChange","onChangeText","onContentSizeChange","onFocusAnimationEnd","createGetter","inputRef","createRef","mounted","focused","value","fontSize","labelState","focusState","focusAnimation","Value","labelAnimation","height","name","constructor","prevProps","prevState","errorState","prevErrorState","startFocusAnimation","prevLabelState","startLabelAnimation","duration","animationDuration","toValue","useNativeDriver","input","current","setNativeProps","disabled","editable","blur","clear","isDefaultVisible","String","setState","isFocused","limit","characterRestriction","count","length","event","clearTextOnFocus","formatText","nativeEvent","contentSize","Math","max","ceil","Platform","select","ios","android","retainedError","computedHeight","multiline","labelFontSize","contentInset","OS","top","label","inputHeight","store","key","TextInput","propTypes","baseColor","textColor","color","style","lineHeight","offset","transform","translateY","labelOffset","labelTextStyle","prop","renderAccessory","type","affix","affixTextStyle","title","errorColor","titleTextStyle","containerStyle","paddingLeft","left","paddingRight","right","minHeight","bottom","styleProps","counterProps","helperProps","helperContainer","tintColor","inputStyleOverrides","inputProps","inputStyle","lineType","disabledLineType","lineWidth","activeLineWidth","disabledLineWidth","inputContainerStyleOverrides","inputContainerStyle","restricted","isRestricted","paddingTop","paddingBottom","inputContainerHeight","containerProps","onStartShouldSetResponder","onResponderRelease","pointerEvents","inputContainerProps","lineProps","renderLine","stack","renderLabel","row","renderAffix","renderInput","renderHelper","defaultProps","underlineColorAndroid","disableFullscreenUI","autoCapitalize","StyleSheet","hairlineWidth","number","shape","Text","string","bool","func","renderLeftAccessory","renderRightAccessory","prefix","suffix","View","inputContainer","x0","y0","x1","y1"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport {\n  View,\n  Text,\n  TextInput,\n  Animated,\n  StyleSheet,\n  Platform,\n  ViewPropTypes,\n} from 'react-native';\n\nimport Line from '../line';\nimport Label from '../label';\nimport Affix from '../affix';\nimport Helper from '../helper';\nimport Counter from '../counter';\n\nimport styles from './styles';\n\nfunction startAnimation(animation, options, callback) {\n  Animated\n    .timing(animation, options)\n    .start(callback);\n}\n\nfunction labelStateFromProps(props, state) {\n  let { placeholder, defaultValue } = props;\n  let { text, receivedFocus } = state;\n\n  return !!(placeholder || text || (!receivedFocus && defaultValue));\n}\n\nfunction errorStateFromProps(props, state) {\n  let { error } = props;\n\n  return !!error;\n}\n\nexport default class TextField extends PureComponent {\n  static defaultProps = {\n    underlineColorAndroid: 'transparent',\n    disableFullscreenUI: true,\n    autoCapitalize: 'sentences',\n    editable: true,\n\n    animationDuration: 225,\n\n    fontSize: 16,\n    labelFontSize: 12,\n\n    tintColor: 'rgb(0, 145, 234)',\n    textColor: 'rgba(0, 0, 0, .87)',\n    baseColor: 'rgba(0, 0, 0, .38)',\n\n    errorColor: 'rgb(213, 0, 0)',\n\n    lineWidth: StyleSheet.hairlineWidth,\n    activeLineWidth: 2,\n    disabledLineWidth: 1,\n\n    lineType: 'solid',\n    disabledLineType: 'dotted',\n\n    disabled: false,\n  };\n\n  static propTypes = {\n    ...TextInput.propTypes,\n\n    animationDuration: PropTypes.number,\n\n    fontSize: PropTypes.number,\n    labelFontSize: PropTypes.number,\n\n    contentInset: PropTypes.shape({\n      top: PropTypes.number,\n      label: PropTypes.number,\n      input: PropTypes.number,\n      left: PropTypes.number,\n      right: PropTypes.number,\n      bottom: PropTypes.number,\n    }),\n\n    labelOffset: Label.propTypes.offset,\n\n    labelTextStyle: Text.propTypes.style,\n    titleTextStyle: Text.propTypes.style,\n    affixTextStyle: Text.propTypes.style,\n\n    tintColor: PropTypes.string,\n    textColor: PropTypes.string,\n    baseColor: PropTypes.string,\n\n    label: PropTypes.string,\n    title: PropTypes.string,\n\n    characterRestriction: PropTypes.number,\n\n    error: PropTypes.string,\n    errorColor: PropTypes.string,\n\n    lineWidth: PropTypes.number,\n    activeLineWidth: PropTypes.number,\n    disabledLineWidth: PropTypes.number,\n\n    lineType: Line.propTypes.lineType,\n    disabledLineType: Line.propTypes.lineType,\n\n    disabled: PropTypes.bool,\n\n    formatText: PropTypes.func,\n\n    renderLeftAccessory: PropTypes.func,\n    renderRightAccessory: PropTypes.func,\n\n    prefix: PropTypes.string,\n    suffix: PropTypes.string,\n\n    containerStyle: (ViewPropTypes || View.propTypes).style,\n    inputContainerStyle: (ViewPropTypes || View.propTypes).style,\n  };\n\n  static inputContainerStyle = styles.inputContainer;\n\n  static contentInset = {\n    top: 16,\n    label: 4,\n    input: 8,\n    left: 0,\n    right: 0,\n    bottom: 8,\n  };\n\n  static labelOffset = {\n    x0: 0,\n    y0: 0,\n    x1: 0,\n    y1: 0,\n  };\n\n  static getDerivedStateFromProps({ error }, state) {\n    /* Keep last received error in state */\n    if (error && error !== state.error) {\n      return { error };\n    }\n\n    return null;\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.onBlur = this.onBlur.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.onPress = this.focus.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.onChangeText = this.onChangeText.bind(this);\n    this.onContentSizeChange = this.onContentSizeChange.bind(this);\n    this.onFocusAnimationEnd = this.onFocusAnimationEnd.bind(this);\n\n    this.createGetter('contentInset');\n    this.createGetter('labelOffset');\n\n    this.inputRef = React.createRef();\n    this.mounted = false;\n    this.focused = false;\n\n    let { value: text, error, fontSize } = this.props;\n\n    let labelState = labelStateFromProps(this.props, { text })? 1 : 0;\n    let focusState = errorStateFromProps(this.props)? -1 : 0;\n\n    this.state = {\n      text,\n      error,\n\n      focusAnimation: new Animated.Value(focusState),\n      labelAnimation: new Animated.Value(labelState),\n\n      receivedFocus: false,\n\n      height: fontSize * 1.5,\n    };\n  }\n\n  createGetter(name) {\n    this[name] = () => {\n      let { [name]: value } = this.props;\n      let { [name]: defaultValue } = this.constructor;\n\n      return { ...defaultValue, ...value };\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    let errorState = errorStateFromProps(this.props);\n    let prevErrorState = errorStateFromProps(prevProps);\n\n    if (errorState ^ prevErrorState) {\n      this.startFocusAnimation();\n    }\n\n    let labelState = labelStateFromProps(this.props, this.state);\n    let prevLabelState = labelStateFromProps(prevProps, prevState);\n\n    if (labelState ^ prevLabelState) {\n      this.startLabelAnimation();\n    }\n  }\n\n  startFocusAnimation() {\n    let { focusAnimation } = this.state;\n    let { animationDuration: duration } = this.props;\n\n    let options = {\n      toValue: this.focusState(),\n      duration,\n    };\n\n    startAnimation(focusAnimation, options, this.onFocusAnimationEnd);\n  }\n\n  startLabelAnimation() {\n    let { labelAnimation } = this.state;\n    let { animationDuration: duration } = this.props;\n\n    let options = {\n      toValue: this.labelState(),\n      useNativeDriver: true,\n      duration,\n    };\n\n    startAnimation(labelAnimation, options);\n  }\n\n  setNativeProps(props) {\n    let { current: input } = this.inputRef;\n\n    input.setNativeProps(props);\n  }\n\n  focusState() {\n    if (errorStateFromProps(this.props)) {\n      return -1;\n    }\n\n    return this.focused? 1 : 0;\n  }\n\n  labelState() {\n    if (labelStateFromProps(this.props, this.state)) {\n      return 1;\n    }\n\n    return this.focused? 1 : 0;\n  }\n\n  focus() {\n    let { disabled, editable } = this.props;\n    let { current: input } = this.inputRef;\n\n    if (!disabled && editable) {\n      input.focus();\n    }\n  }\n\n  blur() {\n    let { current: input } = this.inputRef;\n\n    input.blur();\n  }\n\n  clear() {\n    let { current: input } = this.inputRef;\n\n    input.clear();\n\n    /* onChangeText is not triggered by .clear() */\n    this.onChangeText('');\n  }\n\n  value() {\n    let { text } = this.state;\n    let { defaultValue } = this.props;\n\n    let value = this.isDefaultVisible()?\n      defaultValue:\n      text;\n\n    if (null == value) {\n      return '';\n    }\n\n    return 'string' === typeof value?\n      value:\n      String(value);\n  }\n\n  setValue(text) {\n    this.setState({ text });\n  }\n\n  isFocused() {\n    let { current: input } = this.inputRef;\n\n    return input.isFocused();\n  }\n\n  isRestricted() {\n    let { characterRestriction: limit } = this.props;\n    let { length: count } = this.value();\n\n    return limit < count;\n  }\n\n  isErrored() {\n    return errorStateFromProps(this.props);\n  }\n\n  isDefaultVisible() {\n    let { text, receivedFocus } = this.state;\n    let { defaultValue } = this.props;\n\n    return !receivedFocus && null == text && null != defaultValue;\n  }\n\n  isPlaceholderVisible() {\n    let { placeholder } = this.props;\n\n    return placeholder && !this.focused && !this.value();\n  }\n\n  isLabelActive() {\n    return 1 === this.labelState();\n  }\n\n  onFocus(event) {\n    let { onFocus, clearTextOnFocus } = this.props;\n    let { receivedFocus } = this.state;\n\n    if ('function' === typeof onFocus) {\n      onFocus(event);\n    }\n\n    if (clearTextOnFocus) {\n      this.clear();\n    }\n\n    this.focused = true;\n\n    this.startFocusAnimation();\n    this.startLabelAnimation();\n\n    if (!receivedFocus) {\n      this.setState({ receivedFocus: true, text: this.value() });\n    }\n  }\n\n  onBlur(event) {\n    let { onBlur } = this.props;\n\n    if ('function' === typeof onBlur) {\n      onBlur(event);\n    }\n\n    this.focused = false;\n\n    this.startFocusAnimation();\n    this.startLabelAnimation();\n  }\n\n  onChange(event) {\n    let { onChange } = this.props;\n\n    if ('function' === typeof onChange) {\n      onChange(event);\n    }\n  }\n\n  onChangeText(text) {\n    let { onChangeText, formatText } = this.props;\n\n    if ('function' === typeof formatText) {\n      text = formatText(text);\n    }\n\n    this.setState({ text });\n\n    if ('function' === typeof onChangeText) {\n      onChangeText(text);\n    }\n  }\n\n  onContentSizeChange(event) {\n    let { onContentSizeChange, fontSize } = this.props;\n    let { height } = event.nativeEvent.contentSize;\n\n    if ('function' === typeof onContentSizeChange) {\n      onContentSizeChange(event);\n    }\n\n    this.setState({\n      height: Math.max(\n        fontSize * 1.5,\n        Math.ceil(height) + Platform.select({ ios: 4, android: 1 })\n      ),\n    });\n  }\n\n  onFocusAnimationEnd() {\n    let { error } = this.props;\n    let { error: retainedError } = this.state;\n\n    if (this.mounted && !error && retainedError) {\n      this.setState({ error: null });\n    }\n  }\n\n  inputHeight() {\n    let { height: computedHeight } = this.state;\n    let { multiline, fontSize, height = computedHeight } = this.props;\n\n    return multiline?\n      height:\n      fontSize * 1.5;\n  }\n\n  inputContainerHeight() {\n    let { labelFontSize, multiline } = this.props;\n    let contentInset = this.contentInset();\n\n    if ('web' === Platform.OS && multiline) {\n      return 'auto';\n    }\n\n    return contentInset.top\n      + labelFontSize\n      + contentInset.label\n      + this.inputHeight()\n      + contentInset.input;\n  }\n\n  inputProps() {\n    let store = {};\n\n    for (let key in TextInput.propTypes) {\n      if ('defaultValue' === key) {\n        continue;\n      }\n\n      if (key in this.props) {\n        store[key] = this.props[key];\n      }\n    }\n\n    return store;\n  }\n\n  inputStyle() {\n    let { fontSize, baseColor, textColor, disabled, multiline } = this.props;\n\n    let color = disabled || this.isDefaultVisible()?\n      baseColor:\n      textColor;\n\n    let style = {\n      fontSize,\n      color,\n\n      height: this.inputHeight(),\n    };\n\n    if (multiline) {\n      let lineHeight = fontSize * 1.5;\n      let offset = 'ios' === Platform.OS? 2 : 0;\n\n      style.height += lineHeight;\n      style.transform = [{\n        translateY: lineHeight + offset,\n      }];\n    }\n\n    return style;\n  }\n\n  renderLabel(props) {\n    let offset = this.labelOffset();\n\n    let {\n      label,\n      fontSize,\n      labelFontSize,\n      labelTextStyle,\n    } = this.props;\n\n    return (\n      <Label\n        {...props}\n        fontSize={fontSize}\n        activeFontSize={labelFontSize}\n        offset={offset}\n        label={label}\n        style={labelTextStyle}\n      />\n    );\n  }\n\n  renderLine(props) {\n    return (\n      <Line {...props} />\n    );\n  }\n\n  renderAccessory(prop) {\n    let { [prop]: renderAccessory } = this.props;\n\n    return 'function' === typeof renderAccessory?\n      renderAccessory():\n      null;\n  }\n\n  renderAffix(type) {\n    let { labelAnimation } = this.state;\n    let {\n      [type]: affix,\n      fontSize,\n      baseColor: color,\n      affixTextStyle: style,\n    } = this.props;\n\n    if (null == affix) {\n      return null;\n    }\n\n    let props = {\n      type,\n      style,\n      color,\n      fontSize,\n      labelAnimation,\n    };\n\n    return (\n      <Affix {...props}>{affix}</Affix>\n    );\n  }\n\n  renderHelper() {\n    let { focusAnimation, error } = this.state;\n\n    let {\n      title,\n      disabled,\n      baseColor,\n      errorColor,\n      titleTextStyle: style,\n      characterRestriction: limit,\n    } = this.props;\n\n    let { length: count } = this.value();\n    let contentInset = this.contentInset();\n\n    let containerStyle =  {\n      paddingLeft: contentInset.left,\n      paddingRight: contentInset.right,\n      minHeight: contentInset.bottom,\n    };\n\n    let styleProps = {\n      style,\n      baseColor,\n      errorColor,\n    };\n\n    let counterProps = {\n      ...styleProps,\n      limit,\n      count,\n    };\n\n    let helperProps = {\n      ...styleProps,\n      title,\n      error,\n      disabled,\n      focusAnimation,\n    };\n\n    return (\n      <View style={[styles.helperContainer, containerStyle]}>\n        <Helper {...helperProps} />\n        <Counter {...counterProps} />\n      </View>\n    );\n  }\n\n  renderInput() {\n    let {\n      disabled,\n      editable,\n      tintColor,\n      style: inputStyleOverrides,\n    } = this.props;\n\n    let props = this.inputProps();\n    let inputStyle = this.inputStyle();\n\n    return (\n      <TextInput\n        selectionColor={tintColor}\n\n        {...props}\n\n        style={[styles.input, inputStyle, inputStyleOverrides]}\n        editable={!disabled && editable}\n        onChange={this.onChange}\n        onChangeText={this.onChangeText}\n        onContentSizeChange={this.onContentSizeChange}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n        value={this.value()}\n        ref={this.inputRef}\n      />\n    );\n  }\n\n  render() {\n    let { labelAnimation, focusAnimation } = this.state;\n    let {\n      editable,\n      disabled,\n      lineType,\n      disabledLineType,\n      lineWidth,\n      activeLineWidth,\n      disabledLineWidth,\n      tintColor,\n      baseColor,\n      errorColor,\n      containerStyle,\n      inputContainerStyle: inputContainerStyleOverrides,\n    } = this.props;\n\n    let restricted = this.isRestricted();\n    let contentInset = this.contentInset();\n\n    let inputContainerStyle = {\n      paddingTop: contentInset.top,\n      paddingRight: contentInset.right,\n      paddingBottom: contentInset.input,\n      paddingLeft: contentInset.left,\n      height: this.inputContainerHeight(),\n    };\n\n    let containerProps = {\n      style: containerStyle,\n      onStartShouldSetResponder: () => true,\n      onResponderRelease: this.onPress,\n      pointerEvents: !disabled && editable?\n        'auto':\n        'none',\n    };\n\n    let inputContainerProps = {\n      style: [\n        this.constructor.inputContainerStyle,\n        inputContainerStyle,\n        inputContainerStyleOverrides,\n      ],\n    };\n\n    let styleProps = {\n      disabled,\n      restricted,\n      baseColor,\n      tintColor,\n      errorColor,\n\n      contentInset,\n\n      focusAnimation,\n      labelAnimation,\n    };\n\n    let lineProps = {\n      ...styleProps,\n\n      lineWidth,\n      activeLineWidth,\n      disabledLineWidth,\n\n      lineType,\n      disabledLineType,\n    };\n\n    return (\n      <View {...containerProps}>\n        <Animated.View {...inputContainerProps}>\n          {this.renderLine(lineProps)}\n          {this.renderAccessory('renderLeftAccessory')}\n\n          <View style={styles.stack}>\n            {this.renderLabel(styleProps)}\n\n            <View style={styles.row}>\n              {this.renderAffix('prefix')}\n              {this.renderInput()}\n              {this.renderAffix('suffix')}\n            </View>\n          </View>\n\n          {this.renderAccessory('renderRightAccessory')}\n        </Animated.View>\n\n        {this.renderHelper()}\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}