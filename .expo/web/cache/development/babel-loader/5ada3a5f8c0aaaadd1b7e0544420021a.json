{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { executeQuery } from \"../db/sqliteConnection\";\nimport { routes } from \"../utils/constants\";\nexport var selectForms = function selectForms() {\n  var toReturn;\n  return _regeneratorRuntime.async(function selectForms$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          toReturn = [];\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(executeQuery('select * from Forms;', []).then(function (items) {\n            toReturn = items;\n          }));\n\n        case 3:\n          return _context.abrupt(\"return\", toReturn);\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var newForm = function newForm(stringJSON, route, createdForm) {\n  var toReturn, persist;\n  return _regeneratorRuntime.async(function newForm$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          toReturn = false;\n          _context2.prev = 1;\n\n          if (createdForm) {\n            _context2.next = 5;\n            break;\n          }\n\n          _context2.next = 5;\n          return _regeneratorRuntime.awrap(executeQuery('DELETE FROM Forms WHERE id=(SELECT id FROM Forms WHERE route = ? ORDER BY id DESC LIMIT 1);', [route]));\n\n        case 5:\n          _context2.next = 7;\n          return _regeneratorRuntime.awrap(executeQuery('INSERT INTO Forms (stringJSON, route) VALUES (?,?);', [stringJSON, route]));\n\n        case 7:\n          persist = _context2.sent;\n          toReturn = true;\n          _context2.next = 14;\n          break;\n\n        case 11:\n          _context2.prev = 11;\n          _context2.t0 = _context2[\"catch\"](1);\n          console.log(_context2.t0);\n\n        case 14:\n          return _context2.abrupt(\"return\", toReturn);\n\n        case 15:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[1, 11]], Promise);\n};\nexport var deleteForm = function deleteForm(formId) {\n  return _regeneratorRuntime.async(function deleteForm$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(executeQuery('DELETE FROM Forms WHERE id = ?;', [formId]));\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getFormByRoute = function getFormByRoute(route) {\n  var toReturn;\n  return _regeneratorRuntime.async(function getFormByRoute$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          toReturn = [];\n          _context4.next = 3;\n          return _regeneratorRuntime.awrap(executeQuery('select * from Forms where route = ? order by id desc;', [route]).then(function (items) {\n            toReturn = items;\n          }));\n\n        case 3:\n          return _context4.abrupt(\"return\", toReturn);\n\n        case 4:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var deleteFormByRoute = function deleteFormByRoute(route) {\n  return _regeneratorRuntime.async(function deleteFormByRoute$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n\n          if (!(route == routes.dadosMecanica)) {\n            _context5.next = 6;\n            break;\n          }\n\n          _context5.next = 4;\n          return _regeneratorRuntime.awrap(executeQuery('DELETE FROM Forms WHERE id=(SELECT id FROM Forms WHERE route = ? ORDER BY id DESC LIMIT 1);', [route]));\n\n        case 4:\n          _context5.next = 8;\n          break;\n\n        case 6:\n          _context5.next = 8;\n          return _regeneratorRuntime.awrap(executeQuery('DELETE FROM Forms WHERE route = ? ;', [route]));\n\n        case 8:\n          _context5.next = 13;\n          break;\n\n        case 10:\n          _context5.prev = 10;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.log(_context5.t0);\n\n        case 13:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, [[0, 10]], Promise);\n};\nexport var selectFormUsers = function selectFormUsers(name) {\n  var toReturn, queryName;\n  return _regeneratorRuntime.async(function selectFormUsers$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          toReturn = [];\n          queryName = '%' + name + '%';\n          _context6.next = 4;\n          return _regeneratorRuntime.awrap(executeQuery('select distinct * from FormUsers where name like ? ;', [queryName]).then(function (items) {\n            toReturn = items;\n          }));\n\n        case 4:\n          return _context6.abrupt(\"return\", toReturn);\n\n        case 5:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var selectLastFormUser = function selectLastFormUser() {\n  var toReturn;\n  return _regeneratorRuntime.async(function selectLastFormUser$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          toReturn = 0;\n          _context7.next = 3;\n          return _regeneratorRuntime.awrap(executeQuery('select max(id) from FormUsers;', []).then(function (items) {\n            if (items[0]['max(id)']) {\n              toReturn = items[0]['max(id)'];\n            }\n          }));\n\n        case 3:\n          return _context7.abrupt(\"return\", toReturn);\n\n        case 4:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var newFormUser = function newFormUser(id, name) {\n  var toReturn, persist;\n  return _regeneratorRuntime.async(function newFormUser$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          toReturn = false;\n          _context8.prev = 1;\n          _context8.next = 4;\n          return _regeneratorRuntime.awrap(executeQuery('INSERT INTO FormUsers (id, name) VALUES (?,?);', [id, name]));\n\n        case 4:\n          persist = _context8.sent;\n          toReturn = true;\n          _context8.next = 11;\n          break;\n\n        case 8:\n          _context8.prev = 8;\n          _context8.t0 = _context8[\"catch\"](1);\n          console.log(_context8.t0);\n\n        case 11:\n          return _context8.abrupt(\"return\", toReturn);\n\n        case 12:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, null, null, [[1, 8]], Promise);\n};\nexport var selectWeather = function selectWeather() {\n  var toReturn;\n  return _regeneratorRuntime.async(function selectWeather$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          toReturn = [];\n          _context9.next = 3;\n          return _regeneratorRuntime.awrap(executeQuery('select * from Weather;', []).then(function (items) {\n            toReturn = items;\n          }));\n\n        case 3:\n          return _context9.abrupt(\"return\", toReturn);\n\n        case 4:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var selectLastWeather = function selectLastWeather() {\n  var toReturn;\n  return _regeneratorRuntime.async(function selectLastWeather$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          toReturn = 0;\n          _context10.next = 3;\n          return _regeneratorRuntime.awrap(executeQuery('select max(id) from Weather;', []).then(function (items) {\n            if (items[0]['max(id)']) {\n              toReturn = items[0]['max(id)'];\n            }\n          }));\n\n        case 3:\n          return _context10.abrupt(\"return\", toReturn);\n\n        case 4:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var newWeather = function newWeather(id, name) {\n  var toReturn, persist;\n  return _regeneratorRuntime.async(function newWeather$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          toReturn = false;\n          _context11.prev = 1;\n          _context11.next = 4;\n          return _regeneratorRuntime.awrap(executeQuery('INSERT INTO Weather (id, name) VALUES (?,?);', [id, name]));\n\n        case 4:\n          persist = _context11.sent;\n          toReturn = true;\n          _context11.next = 11;\n          break;\n\n        case 8:\n          _context11.prev = 8;\n          _context11.t0 = _context11[\"catch\"](1);\n          console.log(_context11.t0);\n\n        case 11:\n          return _context11.abrupt(\"return\", toReturn);\n\n        case 12:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, null, null, [[1, 8]], Promise);\n};\nexport var selectRestrictionReason = function selectRestrictionReason() {\n  var toReturn;\n  return _regeneratorRuntime.async(function selectRestrictionReason$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          toReturn = [];\n          _context12.next = 3;\n          return _regeneratorRuntime.awrap(executeQuery('select * from RestrictionReason;', []).then(function (items) {\n            toReturn = items;\n          }));\n\n        case 3:\n          return _context12.abrupt(\"return\", toReturn);\n\n        case 4:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var selectLastRestrictionReason = function selectLastRestrictionReason() {\n  var toReturn;\n  return _regeneratorRuntime.async(function selectLastRestrictionReason$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          toReturn = 0;\n          _context13.next = 3;\n          return _regeneratorRuntime.awrap(executeQuery('select max(id) from RestrictionReason;', []).then(function (items) {\n            if (items[0]['max(id)']) {\n              toReturn = items[0]['max(id)'];\n            }\n          }));\n\n        case 3:\n          return _context13.abrupt(\"return\", toReturn);\n\n        case 4:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var newRestrictionReason = function newRestrictionReason(id, desc) {\n  var toReturn, persist;\n  return _regeneratorRuntime.async(function newRestrictionReason$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          toReturn = false;\n          _context14.prev = 1;\n          _context14.next = 4;\n          return _regeneratorRuntime.awrap(executeQuery('INSERT INTO RestrictionReason (id, desc) VALUES (?,?);', [id, desc]));\n\n        case 4:\n          persist = _context14.sent;\n          toReturn = true;\n          _context14.next = 11;\n          break;\n\n        case 8:\n          _context14.prev = 8;\n          _context14.t0 = _context14[\"catch\"](1);\n          console.log(_context14.t0);\n\n        case 11:\n          return _context14.abrupt(\"return\", toReturn);\n\n        case 12:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, null, null, [[1, 8]], Promise);\n};","map":{"version":3,"sources":["C:/RepositorioAPPSGO/APP-main/db/forms.js"],"names":["executeQuery","routes","selectForms","toReturn","then","items","newForm","stringJSON","route","createdForm","persist","console","log","deleteForm","formId","getFormByRoute","deleteFormByRoute","dadosMecanica","selectFormUsers","name","queryName","selectLastFormUser","newFormUser","id","selectWeather","selectLastWeather","newWeather","selectRestrictionReason","selectLastRestrictionReason","newRestrictionReason","desc"],"mappings":"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","sourcesContent":["import { executeQuery } from '../db/sqliteConnection';\nimport { routes } from '../utils/constants';\n\nexport const selectForms = async () => {\n\tlet toReturn = [];\n\tawait executeQuery('select * from Forms;', []).then(\n\t\titems => {\n\t\t\ttoReturn = items;\n\t\t}\n\t);\n\treturn toReturn;\n}\n\nexport const newForm = async (stringJSON, route, createdForm) => {\n\tlet toReturn = false;\n\ttry {\n\t\tif(!createdForm) {\n\t\t\tawait executeQuery('DELETE FROM Forms WHERE id=(SELECT id FROM Forms WHERE route = ? ORDER BY id DESC LIMIT 1);', [route]);\n\t\t}\n\t\tconst persist = await executeQuery('INSERT INTO Forms (stringJSON, route) VALUES (?,?);', [stringJSON, route]);\n\t\ttoReturn = true;\n\t} catch (error) {\n\t\tconsole.log(error);\n    }\n\treturn toReturn;\n}\n\nexport const deleteForm = async (formId) => {\n\tawait executeQuery('DELETE FROM Forms WHERE id = ?;', [formId]);\n}\n\nexport const getFormByRoute = async (route) => {\n\tlet toReturn = [];\n\tawait executeQuery('select * from Forms where route = ? order by id desc;', [route]).then(\n\t\titems => {\n\t\t\ttoReturn = items;\n\t\t}\n\t);\n\treturn toReturn;\n}\n\nexport const deleteFormByRoute = async (route) => {\n\ttry {\n\t\tif(route == routes.dadosMecanica) {\n\t\t\tawait executeQuery('DELETE FROM Forms WHERE id=(SELECT id FROM Forms WHERE route = ? ORDER BY id DESC LIMIT 1);', [route]);\n\t\t} else {\n\t\t\tawait executeQuery('DELETE FROM Forms WHERE route = ? ;', [route]);\n\t\t}\n\t} catch (error) {\n\t\tconsole.log(error);\n\t}\n}\n\nexport const selectFormUsers = async (name) => {\n\tlet toReturn = [];\n\tconst queryName = '%' + name + '%';\n\n\tawait executeQuery('select distinct * from FormUsers where name like ? ;', [queryName]).then(\n\t\titems => {\n\t\t\ttoReturn = items;\n\t\t}\n\t);\n\treturn toReturn;\n}\n\nexport const selectLastFormUser = async () => {\n\tlet toReturn = 0;\n\tawait executeQuery('select max(id) from FormUsers;', []).then(\n\t\titems => {\n\t\t\tif (items[0]['max(id)']) {\n\t\t\t\ttoReturn = items[0]['max(id)'];\n\t\t\t}\n\t\t}\n\t);\n\treturn toReturn;\n}\n\nexport const newFormUser = async (id, name) => {\n\tlet toReturn = false;\n\ttry {\n\t\tconst persist = await executeQuery('INSERT INTO FormUsers (id, name) VALUES (?,?);', [id, name]);\n\t\ttoReturn = true;\n\t} catch (error) {\n\t\tconsole.log(error);\n    }\n\treturn toReturn;\n}\n\nexport const selectWeather = async () => {\n\tlet toReturn = [];\n\n\tawait executeQuery('select * from Weather;', []).then(\n\t\titems => {\n\t\t\ttoReturn = items;\n\t\t}\n\t);\n\treturn toReturn;\n}\n\nexport const selectLastWeather = async () => {\n\tlet toReturn = 0;\n\tawait executeQuery('select max(id) from Weather;', []).then(\n\t\titems => {\n\t\t\tif (items[0]['max(id)']) {\n\t\t\t\ttoReturn = items[0]['max(id)'];\n\t\t\t}\n\t\t}\n\t);\n\treturn toReturn;\n}\n\nexport const newWeather = async (id, name) => {\n\tlet toReturn = false;\n\ttry {\n\t\tconst persist = await executeQuery('INSERT INTO Weather (id, name) VALUES (?,?);', [id, name]);\n\t\ttoReturn = true;\n\t} catch (error) {\n\t\tconsole.log(error);\n    }\n\treturn toReturn;\n}\n\nexport const selectRestrictionReason = async () => {\n\tlet toReturn = [];\n\n\tawait executeQuery('select * from RestrictionReason;', []).then(\n\t\titems => {\n\t\t\ttoReturn = items;\n\t\t}\n\t);\n\treturn toReturn;\n}\n\nexport const selectLastRestrictionReason = async () => {\n\tlet toReturn = 0;\n\tawait executeQuery('select max(id) from RestrictionReason;', []).then(\n\t\titems => {\n\t\t\tif (items[0]['max(id)']) {\n\t\t\t\ttoReturn = items[0]['max(id)'];\n\t\t\t}\n\t\t}\n\t);\n\treturn toReturn;\n}\n\nexport const newRestrictionReason = async (id, desc) => {\n\tlet toReturn = false;\n\ttry {\n\t\tconst persist = await executeQuery('INSERT INTO RestrictionReason (id, desc) VALUES (?,?);', [id, desc]);\n\t\ttoReturn = true;\n\t} catch (error) {\n\t\tconsole.log(error);\n    }\n\treturn toReturn;\n}"]},"metadata":{},"sourceType":"module"}