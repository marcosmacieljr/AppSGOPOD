{"ast":null,"code":"export default function getEventManager(target) {\n  var listeners = {};\n\n  var removeListener = function removeListener(type, callback) {\n    var callbacks = listeners[type] ? listeners[type][target] : undefined;\n\n    if (!callbacks) {\n      return;\n    }\n\n    var index = callbacks.indexOf(callback);\n    callbacks.splice(index, 1);\n  };\n\n  var addListener = function addListener(type, callback) {\n    listeners[type] = listeners[type] || {};\n    listeners[type][target] = listeners[type][target] || [];\n    listeners[type][target].push(callback);\n    return {\n      remove: function remove() {\n        return removeListener(type, callback);\n      }\n    };\n  };\n\n  return {\n    addListener: addListener,\n    emit: function emit(type, data) {\n      var items = listeners[type] || {};\n      var callbacks = items[target] && items[target].slice();\n      callbacks === null || callbacks === void 0 ? void 0 : callbacks.forEach(function (cb) {\n        return cb(data);\n      });\n    }\n  };\n}","map":{"version":3,"mappings":"AAKA,eAAe,SAASA,eAAT,CAAyBC,MAAzB,EAAiC;AAI9C,MAAMC,SAAS,GAAG,EAAlB;;AAMA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAAOC,QAAP,EAAoB;AACzC,QAAMC,SAAS,GAAGJ,SAAS,CAACE,IAAD,CAATF,GAAkBA,SAAS,CAACE,IAAD,CAATF,CAAgBD,MAAhBC,CAAlBA,GAA4CK,SAA9D;;AAEA,QAAI,CAACD,SAAL,EAAgB;AACd;AACD;;AAED,QAAME,KAAK,GAAGF,SAAS,CAACG,OAAVH,CAAkBD,QAAlBC,CAAd;AAEAA,aAAS,CAACI,MAAVJ,CAAiBE,KAAjBF,EAAwB,CAAxBA;AATF;;AAgBA,MAAMK,WAAW,GAAG,SAAdA,WAAc,CAACP,IAAD,EAAOC,QAAP,EAAoB;AACtCH,aAAS,CAACE,IAAD,CAATF,GAAkBA,SAAS,CAACE,IAAD,CAATF,IAAmB,EAArCA;AACAA,aAAS,CAACE,IAAD,CAATF,CAAgBD,MAAhBC,IAA0BA,SAAS,CAACE,IAAD,CAATF,CAAgBD,MAAhBC,KAA2B,EAArDA;AACAA,aAAS,CAACE,IAAD,CAATF,CAAgBD,MAAhBC,EAAwBU,IAAxBV,CAA6BG,QAA7BH;AAEA,WAAO;AACLW,YAAM,EAAE;AAAA,eAAMV,cAAc,CAACC,IAAD,EAAOC,QAAP,CAApB;AAAA;AADH,KAAP;AALF;;AAUA,SAAO;AACLM,eADK,EACLA,WADK;AAOLG,QAAI,EAAE,cAACV,IAAD,EAAOW,IAAP,EAAgB;AACpB,UAAMC,KAAK,GAAGd,SAAS,CAACE,IAAD,CAATF,IAAmB,EAAjC;AAMA,UAAMI,SAAS,GAAGU,KAAK,CAACf,MAAD,CAALe,IAAiBA,KAAK,CAACf,MAAD,CAALe,CAAcC,KAAdD,EAAnC;AAEAV,eAAS,SAATA,aAAS,WAATA,qBAAS,CAAEY,OAAXZ,CAAoBa,YAAD;AAAA,eAAQA,EAAE,CAACJ,IAAD,CAAV;AAAA,OAAnBT;AACD;AAjBI,GAAP;AAmBD","names":["getEventManager","target","listeners","removeListener","type","callback","callbacks","undefined","index","indexOf","splice","addListener","push","remove","emit","data","items","slice","forEach","cb"],"sources":["getEventManager.js"],"sourcesContent":["// @ts-check\n\n/**\n * @param {string} target\n */\nexport default function getEventManager(target) {\n  /**\n   * @type {Record<string, Record<string, ((e: any) => void)[]>>}\n   */\n  const listeners = {};\n\n  /**\n   * @param {string} type\n   * @param {() => void} callback\n   */\n  const removeListener = (type, callback) => {\n    const callbacks = listeners[type] ? listeners[type][target] : undefined;\n\n    if (!callbacks) {\n      return;\n    }\n\n    const index = callbacks.indexOf(callback);\n\n    callbacks.splice(index, 1);\n  };\n\n  /**\n   * @param {string} type\n   * @param {() => void} callback\n   */\n  const addListener = (type, callback) => {\n    listeners[type] = listeners[type] || {};\n    listeners[type][target] = listeners[type][target] || [];\n    listeners[type][target].push(callback);\n\n    return {\n      remove: () => removeListener(type, callback),\n    };\n  };\n\n  return {\n    addListener,\n\n    /**\n     * @param {string} type\n     * @param {any} [data]\n     */\n    emit: (type, data) => {\n      const items = listeners[type] || {};\n\n      /**\n       * Copy the current list of callbacks in case they are mutated during execution\n       * @type {((data: any) => void)[] | undefined}\n       */\n      const callbacks = items[target] && items[target].slice();\n\n      callbacks?.forEach((cb) => cb(data));\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}