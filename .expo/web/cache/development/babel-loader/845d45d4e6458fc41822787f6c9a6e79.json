{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\RepositorioAPPSGO\\\\APP-main\\\\node_modules\\\\react-native-hide-show-password-input\\\\src\\\\component\\\\passwordInput.js\";\n\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\nimport PropTypes from \"prop-types\";\nimport { TextField } from \"react-native-material-textfield\";\n\nvar PasswordInputText = function PasswordInputText(_ref) {\n  var iconSize = _ref.iconSize,\n      iconColor = _ref.iconColor,\n      label = _ref.label,\n      style = _ref.style,\n      getRef = _ref.getRef,\n      rest = _objectWithoutProperties(_ref, [\"iconSize\", \"iconColor\", \"label\", \"style\", \"getRef\"]);\n\n  var _useState = useState(\"visibility-off\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      eyeIcon = _useState2[0],\n      setEyeIcon = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isPassword = _useState4[0],\n      setIsPassword = _useState4[1];\n\n  var changePwdType = function changePwdType() {\n    setEyeIcon(isPassword ? \"visibility\" : \"visibility-off\");\n    setIsPassword(function (prevState) {\n      return !prevState;\n    });\n  };\n\n  var passReference = function passReference(ref) {\n    if (getRef) getRef(ref);\n  };\n\n  return React.createElement(View, {\n    style: style,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, React.createElement(TextField, _extends({}, rest, {\n    ref: passReference,\n    secureTextEntry: isPassword,\n    label: label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  })), React.createElement(Icon, {\n    style: styles.icon,\n    name: eyeIcon,\n    size: iconSize,\n    color: iconColor,\n    onPress: changePwdType,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  icon: {\n    position: \"absolute\",\n    top: 33,\n    right: 0\n  }\n});\nPasswordInputText.defaultProps = {\n  iconSize: 25,\n  label: \"Password\",\n  iconColor: \"#222222\"\n};\nPasswordInputText.propTypes = {\n  iconSize: PropTypes.number,\n  label: PropTypes.string,\n  iconColor: PropTypes.string\n};\nexport default PasswordInputText;","map":{"version":3,"sources":["C:/RepositorioAPPSGO/APP-main/node_modules/react-native-hide-show-password-input/src/component/passwordInput.js"],"names":["React","useState","Icon","PropTypes","TextField","PasswordInputText","iconSize","iconColor","label","style","getRef","rest","eyeIcon","setEyeIcon","isPassword","setIsPassword","changePwdType","prevState","passReference","ref","styles","icon","StyleSheet","create","position","top","right","defaultProps","propTypes","number","string"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,OAAOC,IAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,iCAA1B;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OAOpB;AAAA,MANJC,QAMI,QANJA,QAMI;AAAA,MALJC,SAKI,QALJA,SAKI;AAAA,MAJJC,KAII,QAJJA,KAII;AAAA,MAHJC,KAGI,QAHJA,KAGI;AAAA,MAFJC,MAEI,QAFJA,MAEI;AAAA,MADDC,IACC;;AAAA,kBAC0BV,QAAQ,CAAC,gBAAD,CADlC;AAAA;AAAA,MACGW,OADH;AAAA,MACYC,UADZ;;AAAA,mBAEgCZ,QAAQ,CAAC,IAAD,CAFxC;AAAA;AAAA,MAEGa,UAFH;AAAA,MAEeC,aAFf;;AAIJ,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1BH,IAAAA,UAAU,CAACC,UAAU,GAAG,YAAH,GAAkB,gBAA7B,CAAV;AACAC,IAAAA,aAAa,CAAC,UAACE,SAAD;AAAA,aAAe,CAACA,SAAhB;AAAA,KAAD,CAAb;AACD,GAHD;;AAKA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,GAAD,EAAS;AAC7B,QAAIT,MAAJ,EAAYA,MAAM,CAACS,GAAD,CAAN;AACb,GAFD;;AAIA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEV,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD,eACME,IADN;AAEE,IAAA,GAAG,EAAEO,aAFP;AAGE,IAAA,eAAe,EAAEJ,UAHnB;AAIE,IAAA,KAAK,EAAEN,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAOE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAEY,MAAM,CAACC,IADhB;AAEE,IAAA,IAAI,EAAET,OAFR;AAGE,IAAA,IAAI,EAAEN,QAHR;AAIE,IAAA,KAAK,EAAEC,SAJT;AAKE,IAAA,OAAO,EAAES,aALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAiBD,CArCD;;AAuCA,IAAMI,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,IAAI,EAAE;AACJG,IAAAA,QAAQ,EAAE,UADN;AAEJC,IAAAA,GAAG,EAAE,EAFD;AAGJC,IAAAA,KAAK,EAAE;AAHH;AADyB,CAAlB,CAAf;AAQArB,iBAAiB,CAACsB,YAAlB,GAAiC;AAC/BrB,EAAAA,QAAQ,EAAE,EADqB;AAE/BE,EAAAA,KAAK,EAAE,UAFwB;AAG/BD,EAAAA,SAAS,EAAE;AAHoB,CAAjC;AAMAF,iBAAiB,CAACuB,SAAlB,GAA8B;AAC5BtB,EAAAA,QAAQ,EAAEH,SAAS,CAAC0B,MADQ;AAE5BrB,EAAAA,KAAK,EAAEL,SAAS,CAAC2B,MAFW;AAG5BvB,EAAAA,SAAS,EAAEJ,SAAS,CAAC2B;AAHO,CAA9B;AAMA,eAAezB,iBAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { View, StyleSheet } from \"react-native\";\nimport Icon from \"react-native-vector-icons/MaterialIcons\";\nimport PropTypes from \"prop-types\";\nimport { TextField } from \"react-native-material-textfield\";\n\nconst PasswordInputText = ({\n  iconSize,\n  iconColor,\n  label,\n  style,\n  getRef,\n  ...rest\n}) => {\n  const [eyeIcon, setEyeIcon] = useState(\"visibility-off\");\n  const [isPassword, setIsPassword] = useState(true);\n\n  const changePwdType = () => {\n    setEyeIcon(isPassword ? \"visibility\" : \"visibility-off\");\n    setIsPassword((prevState) => !prevState);\n  };\n\n  const passReference = (ref) => {\n    if (getRef) getRef(ref);\n  };\n\n  return (\n    <View style={style}>\n      <TextField\n        {...rest}\n        ref={passReference}\n        secureTextEntry={isPassword}\n        label={label}\n      />\n      <Icon\n        style={styles.icon}\n        name={eyeIcon}\n        size={iconSize}\n        color={iconColor}\n        onPress={changePwdType}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  icon: {\n    position: \"absolute\",\n    top: 33,\n    right: 0,\n  },\n});\n\nPasswordInputText.defaultProps = {\n  iconSize: 25,\n  label: \"Password\",\n  iconColor: \"#222222\",\n};\n\nPasswordInputText.propTypes = {\n  iconSize: PropTypes.number,\n  label: PropTypes.string,\n  iconColor: PropTypes.string,\n};\n\nexport default PasswordInputText;\n"]},"metadata":{},"sourceType":"module"}