{"ast":null,"code":"import { isValidElementType } from 'react-is';\nimport invariant from \"../utils/invariant\";\n\nfunction validateRouteConfigMap(routeConfigs) {\n  var routeNames = Object.keys(routeConfigs);\n  invariant(routeNames.length > 0, 'Please specify at least one route when configuring a navigator.');\n  routeNames.forEach(function (routeName) {\n    var routeConfig = routeConfigs[routeName];\n    var screenComponent = getScreenComponent(routeConfig);\n\n    if (!screenComponent || !isValidElementType(screenComponent) && !routeConfig.getScreen) {\n      throw new Error(\"The component for route '\".concat(routeName, \"' must be a React component. For example:\\n\\nimport MyScreen from './MyScreen';\\n...\\n\").concat(routeName, \": MyScreen,\\n}\\n\\nYou can also use a navigator:\\n\\nimport MyNavigator from './MyNavigator';\\n...\\n\").concat(routeName, \": MyNavigator,\\n}\"));\n    }\n\n    if (routeConfig.screen && routeConfig.getScreen) {\n      throw new Error(\"Route '\".concat(routeName, \"' should declare a screen or a getScreen, not both.\"));\n    }\n  });\n}\n\nfunction getScreenComponent(routeConfig) {\n  if (!routeConfig) {\n    return null;\n  }\n\n  return routeConfig.screen ? routeConfig.screen : routeConfig;\n}\n\nexport default validateRouteConfigMap;","map":{"version":3,"mappings":"AAAA,SAASA,kBAAT,QAAmC,UAAnC;AAEA,OAAOC,SAAP;;AAMA,SAASC,sBAAT,CAAgCC,YAAhC,EAA8C;AAC5C,MAAMC,UAAU,GAAGC,MAAM,CAACC,IAAPD,CAAYF,YAAZE,CAAnB;AACAJ,WAAS,CACPG,UAAU,CAACG,MAAXH,GAAoB,CADb,EAEP,iEAFO,CAATH;AAKAG,YAAU,CAACI,OAAXJ,CAAoBK,mBAAD,EAAe;AAChC,QAAMC,WAAW,GAAGP,YAAY,CAACM,SAAD,CAAhC;AACA,QAAME,eAAe,GAAGC,kBAAkB,CAACF,WAAD,CAA1C;;AAEA,QACE,CAACC,eAAD,IACC,CAACX,kBAAkB,CAACW,eAAD,CAAnB,IAAwC,CAACD,WAAW,CAACG,SAFxD,EAGE;AACA,YAAM,IAAIC,KAAJ,oCAAsCL,SAAtC,mGAIVA,SAJU,+GAWVA,SAXU,uBAAN;AAaD;;AAED,QAAIC,WAAW,CAACK,MAAZL,IAAsBA,WAAW,CAACG,SAAtC,EAAiD;AAC/C,YAAM,IAAIC,KAAJ,kBACML,SADN,yDAAN;AAGD;AA3BH;AA6BD;;AAED,SAASG,kBAAT,CAA4BF,WAA5B,EAAyC;AACvC,MAAI,CAACA,WAAL,EAAkB;AAChB,WAAO,IAAP;AACD;;AAED,SAAOA,WAAW,CAACK,MAAZL,GAAqBA,WAAW,CAACK,MAAjCL,GAA0CA,WAAjD;AACD;;AAED,eAAeR,sBAAf","names":["isValidElementType","invariant","validateRouteConfigMap","routeConfigs","routeNames","Object","keys","length","forEach","routeName","routeConfig","screenComponent","getScreenComponent","getScreen","Error","screen"],"sources":["validateRouteConfigMap.js"],"sourcesContent":["import { isValidElementType } from 'react-is';\n\nimport invariant from '../utils/invariant';\n\n/**\n * Make sure the config passed e.g. to StackRouter, TabRouter has\n * the correct format, and throw a clear error if it doesn't.\n */\nfunction validateRouteConfigMap(routeConfigs) {\n  const routeNames = Object.keys(routeConfigs);\n  invariant(\n    routeNames.length > 0,\n    'Please specify at least one route when configuring a navigator.'\n  );\n\n  routeNames.forEach((routeName) => {\n    const routeConfig = routeConfigs[routeName];\n    const screenComponent = getScreenComponent(routeConfig);\n\n    if (\n      !screenComponent ||\n      (!isValidElementType(screenComponent) && !routeConfig.getScreen)\n    ) {\n      throw new Error(`The component for route '${routeName}' must be a React component. For example:\n\nimport MyScreen from './MyScreen';\n...\n${routeName}: MyScreen,\n}\n\nYou can also use a navigator:\n\nimport MyNavigator from './MyNavigator';\n...\n${routeName}: MyNavigator,\n}`);\n    }\n\n    if (routeConfig.screen && routeConfig.getScreen) {\n      throw new Error(\n        `Route '${routeName}' should declare a screen or a getScreen, not both.`\n      );\n    }\n  });\n}\n\nfunction getScreenComponent(routeConfig) {\n  if (!routeConfig) {\n    return null;\n  }\n\n  return routeConfig.screen ? routeConfig.screen : routeConfig;\n}\n\nexport default validateRouteConfigMap;\n"]},"metadata":{},"sourceType":"module"}