{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport { httpRequest } from \"../utils/apiUtils\";\nimport * as constants from \"../utils/constants\";\nimport { newUser, deleteUser, selectUsers } from \"../db/login\";\nexport var UserContext = React.createContext({\n  userId: undefined,\n  userCd: undefined\n});\nexport var checkLogin = function checkLogin() {\n  var response;\n  return _regeneratorRuntime.async(function checkLogin$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(selectUsers());\n\n        case 3:\n          response = _context.sent;\n\n          if (!(response.length > 0)) {\n            _context.next = 6;\n            break;\n          }\n\n          return _context.abrupt(\"return\", response[0]);\n\n        case 6:\n          _context.next = 11;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 8]], Promise);\n};\nexport var userCode = function userCode() {\n  var toReturn, response;\n  return _regeneratorRuntime.async(function userCode$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(selectUsers());\n\n        case 3:\n          response = _context2.sent;\n\n          if (response.length > 0) {\n            toReturn = response[0].userCd;\n          }\n\n          return _context2.abrupt(\"return\", toReturn);\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 8]], Promise);\n};\nexport var logIn = function logIn(username, password) {\n  var requestJSON, response, persistUser;\n  return _regeneratorRuntime.async(function logIn$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          requestJSON = {\n            userApi: username,\n            passwordApi: password,\n            appUUID: constants.appUUID\n          };\n          _context3.prev = 1;\n          console.log(requestJSON);\n          _context3.next = 5;\n          return _regeneratorRuntime.awrap(httpRequest(requestJSON, constants.routes.login));\n\n        case 5:\n          response = _context3.sent;\n\n          if (!response.userId) {\n            _context3.next = 13;\n            break;\n          }\n\n          _context3.next = 9;\n          return _regeneratorRuntime.awrap(newUser(response.userId, response.userCd));\n\n        case 9:\n          persistUser = _context3.sent;\n\n          if (persistUser) {\n            _context3.next = 13;\n            break;\n          }\n\n          console.log(\"ERRO\");\n          return _context3.abrupt(\"return\", {\n            message: constants.errorMessage\n          });\n\n        case 13:\n          return _context3.abrupt(\"return\", response);\n\n        case 16:\n          _context3.prev = 16;\n          _context3.t0 = _context3[\"catch\"](1);\n          console.log(_context3.t0);\n          return _context3.abrupt(\"return\", {\n            message: constants.errorMessage\n          });\n\n        case 20:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[1, 16]], Promise);\n};\nexport var logOut = function logOut() {\n  return _regeneratorRuntime.async(function logOut$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return _regeneratorRuntime.awrap(deleteUser());\n\n        case 2:\n          return _context4.abrupt(\"return\", undefined);\n\n        case 3:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["C:/RepositorioTech/AppSGO-main/businessLayer/login.js"],"names":["React","httpRequest","constants","newUser","deleteUser","selectUsers","UserContext","createContext","userId","undefined","userCd","checkLogin","response","length","console","log","userCode","toReturn","logIn","username","password","requestJSON","userApi","passwordApi","appUUID","routes","login","persistUser","message","errorMessage","logOut"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT;AACA,OAAO,KAAKC,SAAZ;AACA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,WAA9B;AAEA,OAAO,IAAMC,WAAW,GAAGN,KAAK,CAACO,aAAN,CAAoB;AAACC,EAAAA,MAAM,EAAEC,SAAT;AAAoBC,EAAAA,MAAM,EAAED;AAA5B,CAApB,CAApB;AAEP,OAAO,IAAME,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEEN,WAAW,EAFb;;AAAA;AAEfO,UAAAA,QAFe;;AAAA,gBAGlBA,QAAQ,CAACC,MAAT,GAAkB,CAHA;AAAA;AAAA;AAAA;;AAAA,2CAIhBD,QAAQ,CAAC,CAAD,CAJQ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAOxBE,UAAAA,OAAO,CAACC,GAAR;;AAPwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB;AAWP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAGOX,WAAW,EAHlB;;AAAA;AAGVO,UAAAA,QAHU;;AAIhB,cAAGA,QAAQ,CAACC,MAAT,GAAkB,CAArB,EAAwB;AACpBI,YAAAA,QAAQ,GAAGL,QAAQ,CAAC,CAAD,CAAR,CAAYF,MAAvB;AACH;;AANe,4CAOTO,QAPS;;AAAA;AAAA;AAAA;AAShBH,UAAAA,OAAO,CAACC,GAAR;;AATgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB;AAaP,OAAO,IAAMG,KAAK,GAAG,SAARA,KAAQ,CAAOC,QAAP,EAAiBC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACXC,UAAAA,WADW,GACG;AAChBC,YAAAA,OAAO,EAAEH,QADO;AAEhBI,YAAAA,WAAW,EAAEH,QAFG;AAGhBI,YAAAA,OAAO,EAAEtB,SAAS,CAACsB;AAHH,WADH;AAAA;AAOfV,UAAAA,OAAO,CAACC,GAAR,CAAYM,WAAZ;AAPe;AAAA,2CAQUpB,WAAW,CAACoB,WAAD,EAAcnB,SAAS,CAACuB,MAAV,CAAiBC,KAA/B,CARrB;;AAAA;AAQPd,UAAAA,QARO;;AAAA,eASbA,QAAQ,CAACJ,MATI;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAUiBL,OAAO,CAACS,QAAQ,CAACJ,MAAV,EAAkBI,QAAQ,CAACF,MAA3B,CAVxB;;AAAA;AAUHiB,UAAAA,WAVG;;AAAA,cAWNA,WAXM;AAAA;AAAA;AAAA;;AAYLb,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AAZK,4CAaP;AAACa,YAAAA,OAAO,EAAE1B,SAAS,CAAC2B;AAApB,WAbO;;AAAA;AAAA,4CAiBNjB,QAjBM;;AAAA;AAAA;AAAA;AAmBnBE,UAAAA,OAAO,CAACC,GAAR;AAnBmB,4CAoBN;AAACa,YAAAA,OAAO,EAAE1B,SAAS,CAAC2B;AAApB,WApBM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAd;AAyBP,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACZ1B,UAAU,EADE;;AAAA;AAAA,4CAEXK,SAFW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAf","sourcesContent":["import React from 'react';\nimport { httpRequest } from '../utils/apiUtils';\nimport * as constants from '../utils/constants';\nimport { newUser, deleteUser, selectUsers } from '../db/login';\n\nexport const UserContext = React.createContext({userId: undefined, userCd: undefined});\n\nexport const checkLogin = async () => {\n    try {\n    \tconst response = await selectUsers();\n    \tif(response.length > 0) {\n\t\t\treturn response[0];\n\t\t}\n\t} catch (error) {\n\t\tconsole.log(error);\n    }\n}\n\nexport const userCode = async () => {\n    let toReturn;\n    try {\n        const response = await selectUsers();\n        if(response.length > 0) {\n            toReturn = response[0].userCd;\n        }\n        return toReturn;\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const logIn = async (username, password) => {\n    const requestJSON = {\n        userApi: username,\n        passwordApi: password,\n        appUUID: constants.appUUID\n    }\n  try {\n      console.log(requestJSON);\n        const response = await httpRequest(requestJSON, constants.routes.login);\n    \tif(response.userId) {\n            const persistUser = await newUser(response.userId, response.userCd);\n           if(!persistUser) {\n                console.log(\"ERRO\")\n    \t\t\treturn {message: constants.errorMessage};\n    \t\t}\n    \t}\n        \n        return response;\n\t} catch (error) {\n\t\tconsole.log(error);\n        return {message: constants.errorMessage};\n    }\n\n}\n\nexport const logOut = async () => {\n    await deleteUser();\n    return undefined;\n}"]},"metadata":{},"sourceType":"module"}