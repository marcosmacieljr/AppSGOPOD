{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/satya/Workspace/Callstack/react-navigation-stack/src/views/Header/HeaderTitle.tsx\";\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { ThemeContext, ThemeColors } from 'react-navigation';\n\nvar HeaderTitle = function (_React$Component) {\n  _inherits(HeaderTitle, _React$Component);\n\n  function HeaderTitle() {\n    _classCallCheck(this, HeaderTitle);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(HeaderTitle).apply(this, arguments));\n  }\n\n  _createClass(HeaderTitle, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          style = _this$props.style,\n          rest = _objectWithoutProperties(_this$props, [\"style\"]);\n\n      var theme = ThemeColors[this.context];\n      return React.createElement(Animated.Text, _extends({\n        numberOfLines: 1\n      }, rest, {\n        style: [styles.title, {\n          color: theme.label\n        }, style],\n        accessibilityTraits: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return HeaderTitle;\n}(React.Component);\n\nHeaderTitle.contextType = ThemeContext;\nvar styles = StyleSheet.create({\n  title: _objectSpread({}, Platform.select({\n    ios: {\n      fontSize: 17,\n      fontWeight: '600',\n      color: 'rgba(0, 0, 0, .9)',\n      marginHorizontal: 16\n    },\n    android: {\n      fontSize: 20,\n      fontWeight: '500',\n      color: 'rgba(0, 0, 0, .9)',\n      marginHorizontal: 16\n    },\n    default: {\n      fontSize: 18,\n      fontWeight: '400',\n      color: '#3c4043'\n    }\n  }))\n});\nexport default HeaderTitle;","map":{"version":3,"mappings":";;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;AAEA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,kBAA1C;;IAEMC,W;;;;;;;;;;;6BAMK;AAAA,wBACkB,KAAKC,KADvB;AAAA,UACDC,KADC,eACDA,KADC;AAAA,UACSC,IADT;;AAGP,UAAIC,KAAK,GAAGL,WAAW,CAAC,KAAKM,OAAN,CAAvB;AAEA,aACER,oBAACS,QAAD,CAAUC,IAAV;AACEC,qBAAa,EAAE;AADjB,SAEML,IAFN;AAGED,aAAK,EAAE,CAACO,MAAM,CAACC,KAAR,EAAe;AAAEC,eAAK,EAAEP,KAAK,CAACQ;AAAf,SAAf,EAAuCV,KAAvC,CAHT;AAIEW,2BAAmB,EAAC,QAJtB;AAAAC;AAAAC;AAAAC;AAAA;AAAA,SADF;;;;;EAXsBnB,KAAK,CAACoB,S;;AAA1BjB,W,CAGGkB,WAHHlB,GAGiBF,YAHjBE;AAsBN,IAAMS,MAAM,GAAGU,UAAU,CAACC,MAAXD,CAAkB;AAC/BT,OAAK,oBACAW,QAAQ,CAACC,MAATD,CAAgB;AACjBE,OAAG,EAAE;AACHC,cAAQ,EAAE,EADP;AAEHC,gBAAU,EAAE,KAFT;AAGHd,WAAK,EAAE,mBAHJ;AAIHe,sBAAgB,EAAE;AAJf,KADY;AAOjBC,WAAO,EAAE;AACPH,cAAQ,EAAE,EADH;AAEPC,gBAAU,EAAE,KAFL;AAGPd,WAAK,EAAE,mBAHA;AAIPe,sBAAgB,EAAE;AAJX,KAPQ;AAajBE,WAAO,EAAE;AACPJ,cAAQ,EAAE,EADH;AAEPC,gBAAU,EAAE,KAFL;AAGPd,WAAK,EAAE;AAHA;AAbQ,GAAhBU,CADA;AAD0B,CAAlBF,CAAf;AAwBA,eAAenB,WAAf","names":["React","ThemeContext","ThemeColors","HeaderTitle","props","style","rest","theme","context","Animated","Text","numberOfLines","styles","title","color","label","accessibilityTraits","__source","fileName","lineNumber","Component","contextType","StyleSheet","create","Platform","select","ios","fontSize","fontWeight","marginHorizontal","android","default"],"sources":["HeaderTitle.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Platform, StyleSheet, Animated } from 'react-native';\nimport { ThemeContext, ThemeColors } from 'react-navigation';\n\nclass HeaderTitle extends React.Component<\n  React.ComponentProps<typeof Animated.Text>\n> {\n  static contextType = ThemeContext;\n  context!: React.ContextType<typeof ThemeContext>;\n\n  render() {\n    let { style, ...rest } = this.props;\n\n    let theme = ThemeColors[this.context];\n\n    return (\n      <Animated.Text\n        numberOfLines={1}\n        {...rest}\n        style={[styles.title, { color: theme.label }, style]}\n        accessibilityTraits=\"header\"\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  title: {\n    ...Platform.select({\n      ios: {\n        fontSize: 17,\n        fontWeight: '600',\n        color: 'rgba(0, 0, 0, .9)',\n        marginHorizontal: 16,\n      },\n      android: {\n        fontSize: 20,\n        fontWeight: '500',\n        color: 'rgba(0, 0, 0, .9)',\n        marginHorizontal: 16,\n      },\n      default: {\n        fontSize: 18,\n        fontWeight: '400',\n        color: '#3c4043',\n      },\n    }),\n  },\n});\n\nexport default HeaderTitle;\n"]},"metadata":{},"sourceType":"module"}