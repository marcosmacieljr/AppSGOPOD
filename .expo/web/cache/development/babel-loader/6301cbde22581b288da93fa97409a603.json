{"ast":null,"code":"\"use strict\";\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sentryTransport = exports.fileAsyncTransport = exports.consoleTransport = exports.logger = void 0;\n\nvar consoleTransport_1 = require(\"./transports/consoleTransport\");\n\nObject.defineProperty(exports, \"consoleTransport\", {\n  enumerable: true,\n  get: function get() {\n    return consoleTransport_1.consoleTransport;\n  }\n});\n\nvar fileAsyncTransport_1 = require(\"./transports/fileAsyncTransport\");\n\nObject.defineProperty(exports, \"fileAsyncTransport\", {\n  enumerable: true,\n  get: function get() {\n    return fileAsyncTransport_1.fileAsyncTransport;\n  }\n});\n\nvar sentryTransport_1 = require(\"./transports/sentryTransport\");\n\nObject.defineProperty(exports, \"sentryTransport\", {\n  enumerable: true,\n  get: function get() {\n    return sentryTransport_1.sentryTransport;\n  }\n});\nvar asyncFunc;\n\ntry {\n  var InteractionManager = require(\"react-native\").InteractionManager;\n\n  asyncFunc = InteractionManager.runAfterInteractions;\n} catch (e) {\n  asyncFunc = function asyncFunc(cb) {\n    setTimeout(function () {\n      return cb();\n    }, 0);\n  };\n}\n\nvar reservedKey = [\"extend\", \"enable\", \"disable\", \"getExtensions\", \"setSeverity\", \"getSeverity\"];\nvar defaultLogger = {\n  severity: \"debug\",\n  transport: consoleTransport_1.consoleTransport,\n  transportOptions: {},\n  levels: {\n    debug: 0,\n    info: 1,\n    warn: 2,\n    error: 3\n  },\n  async: false,\n  asyncFunc: asyncFunc,\n  dateFormat: \"time\",\n  printLevel: true,\n  printDate: true,\n  enabled: true,\n  enabledExtensions: null\n};\n\nvar logs = _createClass(function logs(config) {\n  var _this2 = this;\n\n  _classCallCheck(this, logs);\n\n  this._enabledExtensions = null;\n  this._extensions = [];\n  this._extendedLogs = {};\n\n  this._log = function (level, extension) {\n    for (var _len = arguments.length, msgs = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      msgs[_key - 2] = arguments[_key];\n    }\n\n    if (_this2._async) {\n      return _this2._asyncFunc(function () {\n        _this2._sendToTransport(level, extension, msgs);\n      });\n    } else {\n      return _this2._sendToTransport(level, extension, msgs);\n    }\n  };\n\n  this._sendToTransport = function (level, extension, msgs) {\n    if (!_this2._enabled) return false;\n\n    if (!_this2._isLevelEnabled(level)) {\n      return false;\n    }\n\n    if (extension && !_this2._isExtensionEnabled(extension)) {\n      return false;\n    }\n\n    var msg = _this2._formatMsg(level, extension, msgs);\n\n    var transportProps = {\n      msg: msg,\n      rawMsg: msgs,\n      level: {\n        severity: _this2._levels[level],\n        text: level\n      },\n      extension: extension,\n      options: _this2._transportOptions\n    };\n\n    _this2._transport(transportProps);\n\n    return true;\n  };\n\n  this._formatMsg = function (level, extension, msgs) {\n    var nameTxt = \"\";\n\n    if (extension) {\n      nameTxt = extension + \" | \";\n    }\n\n    var dateTxt = \"\";\n\n    if (_this2._printDate) {\n      switch (_this2._dateFormat) {\n        case \"time\":\n          dateTxt = new Date().toLocaleTimeString() + \" | \";\n          break;\n\n        case \"local\":\n          dateTxt = new Date().toLocaleString() + \" | \";\n          break;\n\n        case \"utc\":\n          dateTxt = new Date().toUTCString() + \" | \";\n          break;\n\n        case \"iso\":\n          dateTxt = new Date().toISOString() + \" | \";\n          break;\n\n        default:\n          break;\n      }\n    }\n\n    var levelTxt = \"\";\n\n    if (_this2._printLevel) {\n      levelTxt = level.toUpperCase() + \" | \";\n    }\n\n    var stringMsg = dateTxt + nameTxt + levelTxt;\n\n    if (Array.isArray(msgs)) {\n      for (var i = 0; i < msgs.length; ++i) {\n        var msg = msgs[i];\n\n        if (typeof msg === \"string\") {\n          stringMsg += msg;\n        } else if (typeof msg === \"function\") {\n          stringMsg += \"[function]\";\n        } else if (msgs[i] && msgs[i].stack && msgs[i].message) {\n          stringMsg += msgs[i].message;\n        } else {\n          try {\n            stringMsg += JSON.stringify(msg);\n          } catch (error) {\n            stringMsg += \"Undefined Error\";\n          }\n        }\n\n        if (msgs.length > i + 1) {\n          stringMsg += \" \";\n        }\n      }\n    } else if (typeof msgs === \"string\") {\n      stringMsg += msgs;\n    } else if (typeof msgs === \"function\") {\n      stringMsg += \"[function]\";\n    } else if (msgs && msgs.stack && msgs.message) {\n      stringMsg += msgs.message;\n    } else if (msgs) {\n      try {\n        stringMsg += JSON.stringify(msgs);\n      } catch (error) {\n        stringMsg += \"Undefined Error\";\n      }\n    }\n\n    return stringMsg;\n  };\n\n  this._isLevelEnabled = function (level) {\n    if (_this2._levels[level] < _this2._levels[_this2._level]) {\n      return false;\n    }\n\n    return true;\n  };\n\n  this._isExtensionEnabled = function (extension) {\n    if (!_this2._enabledExtensions || !_this2._enabledExtensions[extension]) return false;\n    return true;\n  };\n\n  this.extend = function (extension) {\n    if (_this2._extensions.includes(extension)) {\n      return _this2._extendedLogs[extension];\n    }\n\n    _this2._extendedLogs[extension] = {};\n\n    _this2._extensions.push(extension);\n\n    var extendedLog = _this2._extendedLogs[extension];\n    Object.keys(_this2._levels).forEach(function (level) {\n      extendedLog[level] = function () {\n        for (var _len2 = arguments.length, msgs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          msgs[_key2] = arguments[_key2];\n        }\n\n        _this2._log.apply(_this2, [level, extension].concat(msgs));\n      };\n\n      extendedLog[\"extend\"] = function (extension) {\n        throw Error(\"react-native-logs: you cannot extend a logger from an already extended logger\");\n      };\n\n      extendedLog[\"enable\"] = function (extension) {\n        throw Error(\"react-native-logs: You cannot enable a logger from extended logger\");\n      };\n\n      extendedLog[\"disable\"] = function (extension) {\n        throw Error(\"react-native-logs: You cannot disable a logger from extended logger\");\n      };\n\n      extendedLog[\"getExtensions\"] = function () {\n        throw Error(\"react-native-logs: You cannot get extensions from extended logger\");\n      };\n\n      extendedLog[\"setSeverity\"] = function (level) {\n        throw Error(\"react-native-logs: You cannot set severity from extended logger\");\n      };\n\n      extendedLog[\"getSeverity\"] = function () {\n        throw Error(\"react-native-logs: You cannot get severity from extended logger\");\n      };\n    });\n    return extendedLog;\n  };\n\n  this.enable = function (extension) {\n    if (!extension) {\n      _this2._enabled = true;\n      return true;\n    }\n\n    if (!_this2._enabledExtensions) _this2._enabledExtensions = {};\n    _this2._enabled = true;\n    _this2._enabledExtensions[extension] = true;\n    return true;\n  };\n\n  this.disable = function (extension) {\n    if (!extension) {\n      _this2._enabled = false;\n      return true;\n    }\n\n    if (!_this2._enabledExtensions) return true;\n    _this2._enabledExtensions[extension] = false;\n    return true;\n  };\n\n  this.getExtensions = function () {\n    return _this2._extensions;\n  };\n\n  this.setSeverity = function (level) {\n    if (level in _this2._levels) {\n      _this2._level = level;\n    } else {\n      throw Error(\"react-native-logs: Level [\" + level + \"] not exist\");\n    }\n\n    return _this2._level;\n  };\n\n  this.getSeverity = function () {\n    return _this2._level;\n  };\n\n  this._levels = defaultLogger.levels;\n  this._level = defaultLogger.severity;\n  this._transport = defaultLogger.transport;\n  this._transportOptions = null;\n  this._asyncFunc = defaultLogger.asyncFunc;\n  this._async = defaultLogger.async;\n  this._dateFormat = defaultLogger.dateFormat;\n  this._printLevel = defaultLogger.printLevel;\n  this._printDate = defaultLogger.printDate;\n  this._enabled = defaultLogger.enabled;\n\n  if (config && config.levels && typeof config.levels === \"object\" && Object.keys(config.levels).length > 0) {\n    this._levels = config.levels;\n  }\n\n  if (config && config.severity) {\n    this._level = config.severity;\n  }\n\n  if (!this._levels.hasOwnProperty(this._level)) {\n    this._level = Object.keys(this._levels)[0];\n  }\n\n  if (config && config.transport) {\n    this._transport = config.transport;\n  }\n\n  if (config && config.transportOptions) {\n    this._transportOptions = _extends(_extends({}, defaultLogger.transportOptions), config.transportOptions);\n  }\n\n  if (config && config.asyncFunc) {\n    this._asyncFunc = config.asyncFunc;\n  }\n\n  if (config && typeof config.async !== \"undefined\") {\n    this._async = config.async;\n  }\n\n  if (config && config.dateFormat) {\n    this._dateFormat = config.dateFormat;\n  }\n\n  if (config && typeof config.printLevel !== \"undefined\") {\n    this._printLevel = config.printLevel;\n  }\n\n  if (config && typeof config.printDate !== \"undefined\") {\n    this._printDate = config.printDate;\n  }\n\n  if (config && typeof config.enabled !== \"undefined\") {\n    this._enabled = config.enabled;\n  }\n\n  if (config && config.enabledExtensions) {\n    if (Array.isArray(config.enabledExtensions)) {\n      for (var i = 0; i < config.enabledExtensions.length; ++i) {\n        this.enable(config.enabledExtensions[i]);\n      }\n    } else if (typeof config.enabledExtensions === \"string\") {\n      this.disable(config.enabledExtensions);\n    }\n  }\n\n  var _this = this;\n\n  Object.keys(this._levels).forEach(function (level) {\n    if (typeof level !== \"string\") {\n      throw Error(\"react-native-logs: levels must be strings\");\n    }\n\n    if (level[0] === \"_\") {\n      throw Error(\"react-native-logs: keys with first char \\\"_\\\" is reserved and cannot be used as levels\");\n    }\n\n    if (reservedKey.indexOf(level) !== -1) {\n      throw Error(\"react-native-logs: [\" + level + \"] is a reserved key, you cannot set it as custom level\");\n    }\n\n    if (typeof _this2._levels[level] === \"number\") {\n      _this[level] = _this2._log.bind(_this2, level, null);\n    } else {\n      throw Error(\"react-native-logs: [\" + level + \"] wrong level config\");\n    }\n  }, this);\n});\n\nvar logTyped = function (_logs) {\n  _inherits(logTyped, _logs);\n\n  var _super = _createSuper(logTyped);\n\n  function logTyped() {\n    _classCallCheck(this, logTyped);\n\n    return _super.apply(this, arguments);\n  }\n\n  return _createClass(logTyped);\n}(logs);\n\nvar createLogger = function createLogger(config) {\n  return new logTyped(config);\n};\n\nvar logger = {\n  createLogger: createLogger\n};\nexports.logger = logger;","map":{"version":3,"sources":["C:/RepositorioAPPSGO/APP-main/node_modules/react-native-logs/dist/index.js"],"names":["Object","defineProperty","exports","value","sentryTransport","fileAsyncTransport","consoleTransport","logger","consoleTransport_1","require","enumerable","get","fileAsyncTransport_1","sentryTransport_1","asyncFunc","InteractionManager","runAfterInteractions","e","cb","setTimeout","reservedKey","defaultLogger","severity","transport","transportOptions","levels","debug","info","warn","error","async","dateFormat","printLevel","printDate","enabled","enabledExtensions","logs","config","_enabledExtensions","_extensions","_extendedLogs","_log","level","extension","msgs","_async","_asyncFunc","_sendToTransport","_enabled","_isLevelEnabled","_isExtensionEnabled","msg","_formatMsg","transportProps","rawMsg","_levels","text","options","_transportOptions","_transport","nameTxt","dateTxt","_printDate","_dateFormat","Date","toLocaleTimeString","toLocaleString","toUTCString","toISOString","levelTxt","_printLevel","toUpperCase","stringMsg","Array","isArray","i","length","stack","message","JSON","stringify","_level","extend","includes","push","extendedLog","keys","forEach","Error","enable","disable","getExtensions","setSeverity","getSeverity","hasOwnProperty","_this","indexOf","bind","logTyped","createLogger"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * REACT-NATIVE-LOGS\n * Alessandro Bottamedi - a.bottamedi@me.com\n *\n * Performance-aware simple logger for React-Native with custom levels and transports (colored console, file writing, etc.)\n *\n * MIT license\n *\n * Copyright (c) 2021 Alessandro Bottamedi.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sentryTransport = exports.fileAsyncTransport = exports.consoleTransport = exports.logger = void 0;\n/** Import preset transports */\nconst consoleTransport_1 = require(\"./transports/consoleTransport\");\nObject.defineProperty(exports, \"consoleTransport\", { enumerable: true, get: function () { return consoleTransport_1.consoleTransport; } });\nconst fileAsyncTransport_1 = require(\"./transports/fileAsyncTransport\");\nObject.defineProperty(exports, \"fileAsyncTransport\", { enumerable: true, get: function () { return fileAsyncTransport_1.fileAsyncTransport; } });\nconst sentryTransport_1 = require(\"./transports/sentryTransport\");\nObject.defineProperty(exports, \"sentryTransport\", { enumerable: true, get: function () { return sentryTransport_1.sentryTransport; } });\nlet asyncFunc;\ntry {\n    const InteractionManager = require(\"react-native\").InteractionManager;\n    asyncFunc = InteractionManager.runAfterInteractions;\n}\ncatch (e) {\n    asyncFunc = (cb) => {\n        setTimeout(() => {\n            return cb();\n        }, 0);\n    };\n}\n/** Reserved key log string to avoid overwriting other methods or properties */\nconst reservedKey = [\n    \"extend\",\n    \"enable\",\n    \"disable\",\n    \"getExtensions\",\n    \"setSeverity\",\n    \"getSeverity\",\n];\n/** Default configuration parameters for logger */\nconst defaultLogger = {\n    severity: \"debug\",\n    transport: consoleTransport_1.consoleTransport,\n    transportOptions: {},\n    levels: {\n        debug: 0,\n        info: 1,\n        warn: 2,\n        error: 3,\n    },\n    async: false,\n    asyncFunc: asyncFunc,\n    dateFormat: \"time\",\n    printLevel: true,\n    printDate: true,\n    enabled: true,\n    enabledExtensions: null,\n};\n/** Logger Main Class */\nclass logs {\n    constructor(config) {\n        this._enabledExtensions = null;\n        this._extensions = [];\n        this._extendedLogs = {};\n        /** Log messages methods and level filter */\n        this._log = (level, extension, ...msgs) => {\n            if (this._async) {\n                return this._asyncFunc(() => {\n                    this._sendToTransport(level, extension, msgs);\n                });\n            }\n            else {\n                return this._sendToTransport(level, extension, msgs);\n            }\n        };\n        this._sendToTransport = (level, extension, msgs) => {\n            if (!this._enabled)\n                return false;\n            if (!this._isLevelEnabled(level)) {\n                return false;\n            }\n            if (extension && !this._isExtensionEnabled(extension)) {\n                return false;\n            }\n            let msg = this._formatMsg(level, extension, msgs);\n            let transportProps = {\n                msg: msg,\n                rawMsg: msgs,\n                level: { severity: this._levels[level], text: level },\n                extension: extension,\n                options: this._transportOptions,\n            };\n            this._transport(transportProps);\n            return true;\n        };\n        this._formatMsg = (level, extension, msgs) => {\n            let nameTxt = \"\";\n            if (extension) {\n                nameTxt = `${extension} | `;\n            }\n            let dateTxt = \"\";\n            if (this._printDate) {\n                switch (this._dateFormat) {\n                    case \"time\":\n                        dateTxt = `${new Date().toLocaleTimeString()} | `;\n                        break;\n                    case \"local\":\n                        dateTxt = `${new Date().toLocaleString()} | `;\n                        break;\n                    case \"utc\":\n                        dateTxt = `${new Date().toUTCString()} | `;\n                        break;\n                    case \"iso\":\n                        dateTxt = `${new Date().toISOString()} | `;\n                        break;\n                    default:\n                        break;\n                }\n            }\n            let levelTxt = \"\";\n            if (this._printLevel) {\n                levelTxt = `${level.toUpperCase()} | `;\n            }\n            let stringMsg = dateTxt + nameTxt + levelTxt;\n            if (Array.isArray(msgs)) {\n                for (let i = 0; i < msgs.length; ++i) {\n                    let msg = msgs[i];\n                    if (typeof msg === \"string\") {\n                        stringMsg += msg;\n                    }\n                    else if (typeof msg === \"function\") {\n                        stringMsg += \"[function]\";\n                    }\n                    else if (msgs[i] && msgs[i].stack && msgs[i].message) {\n                        stringMsg += msgs[i].message;\n                    }\n                    else {\n                        try {\n                            stringMsg += JSON.stringify(msg);\n                        }\n                        catch (error) {\n                            stringMsg += \"Undefined Error\";\n                        }\n                    }\n                    if (msgs.length > i + 1) {\n                        stringMsg += \" \";\n                    }\n                }\n            }\n            else if (typeof msgs === \"string\") {\n                stringMsg += msgs;\n            }\n            else if (typeof msgs === \"function\") {\n                stringMsg += \"[function]\";\n            }\n            else if (msgs && msgs.stack && msgs.message) {\n                stringMsg += msgs.message;\n            }\n            else if (msgs) {\n                try {\n                    stringMsg += JSON.stringify(msgs);\n                }\n                catch (error) {\n                    stringMsg += \"Undefined Error\";\n                }\n            }\n            return stringMsg;\n        };\n        /** Return true if level is enabled */\n        this._isLevelEnabled = (level) => {\n            if (this._levels[level] < this._levels[this._level]) {\n                return false;\n            }\n            return true;\n        };\n        /** Return true if extension is enabled */\n        this._isExtensionEnabled = (extension) => {\n            if (!this._enabledExtensions || !this._enabledExtensions[extension])\n                return false;\n            return true;\n        };\n        /** Extend logger with a new extension */\n        this.extend = (extension) => {\n            if (this._extensions.includes(extension)) {\n                return this._extendedLogs[extension];\n            }\n            this._extendedLogs[extension] = {};\n            this._extensions.push(extension);\n            let extendedLog = this._extendedLogs[extension];\n            Object.keys(this._levels).forEach((level) => {\n                extendedLog[level] = (...msgs) => {\n                    this._log(level, extension, ...msgs);\n                };\n                extendedLog[\"extend\"] = (extension) => {\n                    throw Error(`react-native-logs: you cannot extend a logger from an already extended logger`);\n                };\n                extendedLog[\"enable\"] = (extension) => {\n                    throw Error(`react-native-logs: You cannot enable a logger from extended logger`);\n                };\n                extendedLog[\"disable\"] = (extension) => {\n                    throw Error(`react-native-logs: You cannot disable a logger from extended logger`);\n                };\n                extendedLog[\"getExtensions\"] = () => {\n                    throw Error(`react-native-logs: You cannot get extensions from extended logger`);\n                };\n                extendedLog[\"setSeverity\"] = (level) => {\n                    throw Error(`react-native-logs: You cannot set severity from extended logger`);\n                };\n                extendedLog[\"getSeverity\"] = () => {\n                    throw Error(`react-native-logs: You cannot get severity from extended logger`);\n                };\n            });\n            return extendedLog;\n        };\n        /** Enable an extension */\n        this.enable = (extension) => {\n            if (!extension) {\n                this._enabled = true;\n                return true;\n            }\n            if (!this._enabledExtensions)\n                this._enabledExtensions = {};\n            this._enabled = true;\n            this._enabledExtensions[extension] = true;\n            return true;\n        };\n        /** Disable an extension */\n        this.disable = (extension) => {\n            if (!extension) {\n                this._enabled = false;\n                return true;\n            }\n            if (!this._enabledExtensions)\n                return true;\n            this._enabledExtensions[extension] = false;\n            return true;\n        };\n        /** Return all created extensions */\n        this.getExtensions = () => {\n            return this._extensions;\n        };\n        /** Set log severity API */\n        this.setSeverity = (level) => {\n            if (level in this._levels) {\n                this._level = level;\n            }\n            else {\n                throw Error(`react-native-logs: Level [${level}] not exist`);\n            }\n            return this._level;\n        };\n        /** Get current log severity API */\n        this.getSeverity = () => {\n            return this._level;\n        };\n        this._levels = defaultLogger.levels;\n        this._level = defaultLogger.severity;\n        this._transport = defaultLogger.transport;\n        this._transportOptions = null;\n        this._asyncFunc = defaultLogger.asyncFunc;\n        this._async = defaultLogger.async;\n        this._dateFormat = defaultLogger.dateFormat;\n        this._printLevel = defaultLogger.printLevel;\n        this._printDate = defaultLogger.printDate;\n        this._enabled = defaultLogger.enabled;\n        /** Check if config levels property exist and set it */\n        if (config &&\n            config.levels &&\n            typeof config.levels === \"object\" &&\n            Object.keys(config.levels).length > 0) {\n            this._levels = config.levels;\n        }\n        /** Check if config level property exist and set it */\n        if (config && config.severity) {\n            this._level = config.severity;\n        }\n        if (!this._levels.hasOwnProperty(this._level)) {\n            this._level = Object.keys(this._levels)[0];\n        }\n        /** Check if config transport property exist and set it */\n        if (config && config.transport) {\n            this._transport = config.transport;\n        }\n        /** Check if config transportOptions property exist and set it */\n        if (config && config.transportOptions) {\n            this._transportOptions = Object.assign(Object.assign({}, defaultLogger.transportOptions), config.transportOptions);\n        }\n        /** Check if config asyncFunc property exist and set it */\n        if (config && config.asyncFunc) {\n            this._asyncFunc = config.asyncFunc;\n        }\n        /** Check if config async property exist and set it */\n        if (config && typeof config.async !== \"undefined\") {\n            this._async = config.async;\n        }\n        /** Check if config dateFormat property exist and set it */\n        if (config && config.dateFormat) {\n            this._dateFormat = config.dateFormat;\n        }\n        /** Check if config printLevel property exist and set it */\n        if (config && typeof config.printLevel !== \"undefined\") {\n            this._printLevel = config.printLevel;\n        }\n        /** Check if config printDate property exist and set it */\n        if (config && typeof config.printDate !== \"undefined\") {\n            this._printDate = config.printDate;\n        }\n        /** Check if config enabled property exist and set it */\n        if (config && typeof config.enabled !== \"undefined\") {\n            this._enabled = config.enabled;\n        }\n        /** Check if config printDate property exist and set it */\n        if (config && config.enabledExtensions) {\n            if (Array.isArray(config.enabledExtensions)) {\n                for (let i = 0; i < config.enabledExtensions.length; ++i) {\n                    this.enable(config.enabledExtensions[i]);\n                }\n            }\n            else if (typeof config.enabledExtensions === \"string\") {\n                this.disable(config.enabledExtensions);\n            }\n        }\n        /** Bind correct log levels methods */\n        let _this = this;\n        Object.keys(this._levels).forEach((level) => {\n            if (typeof level !== \"string\") {\n                throw Error(`react-native-logs: levels must be strings`);\n            }\n            if (level[0] === \"_\") {\n                throw Error(`react-native-logs: keys with first char \"_\" is reserved and cannot be used as levels`);\n            }\n            if (reservedKey.indexOf(level) !== -1) {\n                throw Error(`react-native-logs: [${level}] is a reserved key, you cannot set it as custom level`);\n            }\n            if (typeof this._levels[level] === \"number\") {\n                _this[level] = this._log.bind(this, level, null);\n            }\n            else {\n                throw Error(`react-native-logs: [${level}] wrong level config`);\n            }\n        }, this);\n    }\n}\n/** Extend logs Class with generic types to avoid typescript errors on dynamic log methods */\nclass logTyped extends logs {\n}\n/**\n * Create a logger object. All params will take default values if not passed.\n * each levels has its level severity so we can filter logs with < and > operators\n * all subsequent levels to the one selected will be exposed (ordered by severity asc)\n * through the transport\n */\nconst createLogger = (config) => {\n    return new logTyped(config);\n};\nconst logger = { createLogger };\nexports.logger = logger;\n"]},"metadata":{},"sourceType":"script"}