{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\RepositorioAPPSGO\\\\APP-main\\\\node_modules\\\\react-native-material-textfield\\\\src\\\\components\\\\label\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport styles from \"./styles\";\n\nvar Label = function (_PureComponent) {\n  _inherits(Label, _PureComponent);\n\n  var _super = _createSuper(Label);\n\n  function Label() {\n    _classCallCheck(this, Label);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Label, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          label = _this$props.label,\n          offset = _this$props.offset,\n          disabled = _this$props.disabled,\n          restricted = _this$props.restricted,\n          fontSize = _this$props.fontSize,\n          activeFontSize = _this$props.activeFontSize,\n          contentInset = _this$props.contentInset,\n          errorColor = _this$props.errorColor,\n          baseColor = _this$props.baseColor,\n          tintColor = _this$props.tintColor,\n          style = _this$props.style,\n          focusAnimation = _this$props.focusAnimation,\n          labelAnimation = _this$props.labelAnimation,\n          props = _objectWithoutProperties(_this$props, [\"label\", \"offset\", \"disabled\", \"restricted\", \"fontSize\", \"activeFontSize\", \"contentInset\", \"errorColor\", \"baseColor\", \"tintColor\", \"style\", \"focusAnimation\", \"labelAnimation\"]);\n\n      if (null == label) {\n        return null;\n      }\n\n      var color = disabled ? baseColor : restricted ? errorColor : focusAnimation.interpolate({\n        inputRange: [-1, 0, 1],\n        outputRange: [errorColor, baseColor, tintColor]\n      });\n      var textStyle = {\n        lineHeight: fontSize,\n        fontSize: fontSize,\n        color: color\n      };\n      var x0 = offset.x0,\n          y0 = offset.y0,\n          x1 = offset.x1,\n          y1 = offset.y1;\n      y0 += activeFontSize;\n      y0 += contentInset.label;\n      y0 += fontSize * 0.25;\n      var containerStyle = {\n        transform: [{\n          scale: labelAnimation.interpolate({\n            inputRange: [0, 1],\n            outputRange: [1, activeFontSize / fontSize]\n          })\n        }, {\n          translateY: labelAnimation.interpolate({\n            inputRange: [0, 1],\n            outputRange: [y0, y1]\n          })\n        }, {\n          translateX: labelAnimation.interpolate({\n            inputRange: [0, 1],\n            outputRange: [x0, x1]\n          })\n        }]\n      };\n      return React.createElement(Animated.View, {\n        style: [styles.container, containerStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 7\n        }\n      }, React.createElement(Animated.Text, _extends({\n        style: [styles.text, style, textStyle]\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }\n      }), label));\n    }\n  }]);\n\n  return Label;\n}(PureComponent);\n\nLabel.defaultProps = {\n  numberOfLines: 1,\n  disabled: false,\n  restricted: false\n};\nLabel.propTypes = {\n  numberOfLines: PropTypes.number,\n  disabled: PropTypes.bool,\n  restricted: PropTypes.bool,\n  fontSize: PropTypes.number.isRequired,\n  activeFontSize: PropTypes.number.isRequired,\n  baseColor: PropTypes.string.isRequired,\n  tintColor: PropTypes.string.isRequired,\n  errorColor: PropTypes.string.isRequired,\n  focusAnimation: PropTypes.instanceOf(Animated.Value).isRequired,\n  labelAnimation: PropTypes.instanceOf(Animated.Value).isRequired,\n  contentInset: PropTypes.shape({\n    label: PropTypes.number\n  }),\n  offset: PropTypes.shape({\n    x0: PropTypes.number,\n    y0: PropTypes.number,\n    x1: PropTypes.number,\n    y1: PropTypes.number\n  }),\n  style: Text.propTypes.style,\n  label: PropTypes.string\n};\nexport { Label as default };","map":{"version":3,"sources":["C:/RepositorioAPPSGO/APP-main/node_modules/react-native-material-textfield/src/components/label/index.js"],"names":["PropTypes","React","PureComponent","styles","Label","props","label","offset","disabled","restricted","fontSize","activeFontSize","contentInset","errorColor","baseColor","tintColor","style","focusAnimation","labelAnimation","color","interpolate","inputRange","outputRange","textStyle","lineHeight","x0","y0","x1","y1","containerStyle","transform","scale","translateY","translateX","container","text","defaultProps","numberOfLines","propTypes","number","bool","isRequired","string","instanceOf","Animated","Value","shape","Text"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport { Animated, Text } from 'react-native';\n\nimport styles from './styles';\n\nexport default class Label extends PureComponent {\n  static defaultProps = {\n    numberOfLines: 1,\n    disabled: false,\n    restricted: false,\n  };\n\n  static propTypes = {\n    numberOfLines: PropTypes.number,\n\n    disabled: PropTypes.bool,\n    restricted: PropTypes.bool,\n\n    fontSize: PropTypes.number.isRequired,\n    activeFontSize: PropTypes.number.isRequired,\n\n    baseColor: PropTypes.string.isRequired,\n    tintColor: PropTypes.string.isRequired,\n    errorColor: PropTypes.string.isRequired,\n\n    focusAnimation: PropTypes\n      .instanceOf(Animated.Value)\n      .isRequired,\n\n    labelAnimation: PropTypes\n      .instanceOf(Animated.Value)\n      .isRequired,\n\n    contentInset: PropTypes.shape({\n      label: PropTypes.number,\n    }),\n\n    offset: PropTypes.shape({\n      x0: PropTypes.number,\n      y0: PropTypes.number,\n      x1: PropTypes.number,\n      y1: PropTypes.number,\n    }),\n\n    style: Text.propTypes.style,\n    label: PropTypes.string,\n  };\n\n  render() {\n    let {\n      label,\n      offset,\n      disabled,\n      restricted,\n      fontSize,\n      activeFontSize,\n      contentInset,\n      errorColor,\n      baseColor,\n      tintColor,\n      style,\n      focusAnimation,\n      labelAnimation,\n      ...props\n    } = this.props;\n\n    if (null == label) {\n      return null;\n    }\n\n    let color = disabled?\n      baseColor:\n      restricted?\n        errorColor:\n        focusAnimation.interpolate({\n          inputRange: [-1, 0, 1],\n          outputRange: [errorColor, baseColor, tintColor],\n        });\n\n    let textStyle = {\n      lineHeight: fontSize,\n      fontSize,\n      color,\n    };\n\n    let { x0, y0, x1, y1 } = offset;\n\n    y0 += activeFontSize;\n    y0 += contentInset.label;\n    y0 += fontSize * 0.25;\n\n    let containerStyle = {\n      transform: [{\n        scale: labelAnimation.interpolate({\n          inputRange: [0, 1],\n          outputRange: [1, activeFontSize / fontSize],\n        }),\n      }, {\n        translateY: labelAnimation.interpolate({\n          inputRange: [0, 1],\n          outputRange: [y0, y1],\n        }),\n      }, {\n        translateX: labelAnimation.interpolate({\n          inputRange: [0, 1],\n          outputRange: [x0, x1],\n        }),\n      }],\n    };\n\n    return (\n      <Animated.View style={[styles.container, containerStyle]}>\n        <Animated.Text style={[styles.text, style, textStyle]} {...props}>\n          {label}\n        </Animated.Text>\n      </Animated.View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}