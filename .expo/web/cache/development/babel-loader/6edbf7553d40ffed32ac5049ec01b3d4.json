{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\RepositorioAPPSGO\\\\APP-main\\\\App.js\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport AppLoading from 'expo-app-loading';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { createAppContainer } from 'react-navigation';\nimport { createStackNavigator, HeaderBackButton } from 'react-navigation-stack';\nimport { startApp, getAssetId, setAssetId, getAlbumId, setAlbumId } from \"./db/sqliteConnection\";\nimport { logIn, checkLogin, UserContext, logOut } from \"./businessLayer/login\";\nimport { SendForm, syncApp, syncFormUsers, syncWeather, syncRestrictionReason, gravarLogLocal, getCurrentDate } from \"./businessLayer/forms\";\nimport FormularioTerceiros from \"./src/FormularioTerceiros\";\nimport DadosOperacao from \"./src/DadosOperacao\";\nimport DadosVia from \"./src/DadosVia\";\nimport DadosMecanica from \"./src/DadosMecanica\";\nimport { styles } from \"./styles/styles\";\nimport { ButtonP, ButtonG } from \"./components/Button\";\nimport { Message } from \"./components/AnimatedMessage\";\nimport { LogBox } from \"react-native-web/dist/index\";\nimport { logger, fileAsyncTransport } from \"react-native-logs\";\nimport PasswordInputText from 'react-native-hide-show-password-input';\nimport * as Permissions from 'expo-permissions';\nimport * as MediaLibrary from 'expo-media-library';\nimport * as FileSystem from 'expo-file-system';\nLogBox.ignoreLogs(['Warning: ...']);\nLogBox.ignoreAllLogs();\nvar log = logger.createLogger();\n\nfunction App(props) {\n  var context = React.useContext(UserContext);\n\n  var _useState = useState(undefined),\n      _useState2 = _slicedToArray(_useState, 2),\n      message = _useState2[0],\n      setMessage = _useState2[1];\n\n  var _useState3 = useState(undefined),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loginUserId = _useState4[0],\n      setLoginUserId = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isLoadingComplete = _useState6[0],\n      setLoadingComplete = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loginScreen = _useState8[0],\n      setLoginScreen = _useState8[1];\n\n  var _useState9 = useState({\n    username: '',\n    password: ''\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      loginForm = _useState10[0],\n      setLoginForm = _useState10[1];\n\n  var _useState11 = useState(true),\n      _useState12 = _slicedToArray(_useState11, 2),\n      hidePass = _useState12[0],\n      setHidePass = _useState12[1];\n\n  var startAsync = function startAsync() {\n    var syncUsers, syncW, syncRR, userData, syncResponse;\n    return _regeneratorRuntime.async(function startAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(startApp());\n\n          case 2:\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(gravarLogLocal(getCurrentDate() + \" - Aplicação iniciada.\"));\n\n          case 4:\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(syncFormUsers());\n\n          case 6:\n            syncUsers = _context.sent;\n\n            if (syncUsers != null && syncUsers.message) {\n              setMessage(syncUsers.message);\n            }\n\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(syncWeather());\n\n          case 10:\n            syncW = _context.sent;\n\n            if (syncW != null && syncW.message) {\n              setMessage(syncW.message);\n            }\n\n            _context.next = 14;\n            return _regeneratorRuntime.awrap(syncRestrictionReason());\n\n          case 14:\n            syncRR = _context.sent;\n\n            if (syncRR != null && syncRR.message) {\n              setMessage(syncRR.message);\n            }\n\n            _context.next = 18;\n            return _regeneratorRuntime.awrap(checkLogin());\n\n          case 18:\n            userData = _context.sent;\n\n            if (!(userData != null && userData.userId)) {\n              _context.next = 27;\n              break;\n            }\n\n            context.userId = userData.userId;\n            context.userCd = userData.userCd;\n            setLoginUserId(context.userId);\n            _context.next = 25;\n            return _regeneratorRuntime.awrap(syncApp(context.userId));\n\n          case 25:\n            syncResponse = _context.sent;\n\n            if (syncResponse != null && syncResponse.message) {\n              setMessage(syncResponse.message);\n            }\n\n          case 27:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var loginApp = function loginApp(callback) {\n    var loginResponse;\n    return _regeneratorRuntime.async(function loginApp$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(loginForm.username != \"\" && loginForm.password != \"\")) {\n              _context2.next = 21;\n              break;\n            }\n\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(logIn(loginForm.username, loginForm.password));\n\n          case 3:\n            loginResponse = _context2.sent;\n\n            if (!(loginResponse.userId != undefined)) {\n              _context2.next = 15;\n              break;\n            }\n\n            context.userId = loginResponse.userId;\n            context.userCd = loginResponse.userCd;\n            setLoginUserId(context.userId);\n            setLoadingComplete(false);\n            setLoginScreen(false);\n            _context2.next = 12;\n            return _regeneratorRuntime.awrap(gravarLogLocal(getCurrentDate() + \" - Login efetuado com sucesso!\"));\n\n          case 12:\n            callback();\n            _context2.next = 19;\n            break;\n\n          case 15:\n            callback();\n            _context2.next = 18;\n            return _regeneratorRuntime.awrap(gravarLogLocal(getCurrentDate() + \" - Login não efetuado - \" + loginResponse.message));\n\n          case 18:\n            setMessage(loginResponse.message);\n\n          case 19:\n            _context2.next = 25;\n            break;\n\n          case 21:\n            callback();\n            _context2.next = 24;\n            return _regeneratorRuntime.awrap(gravarLogLocal(getCurrentDate() + \" - Login não efetuado - Usuário ou Senha inválidos.\"));\n\n          case 24:\n            setMessage(\"Usuário ou Senha inválidos\");\n\n          case 25:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var download = function download() {\n    var FileSystem;\n    return _regeneratorRuntime.async(function download$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            FileSystem = require(\"expo-file-system\");\n            FileSystem.downloadAsync('http://techslides.com/demos/sample-videos/small.mp4', FileSystem.documentDirectory + 'small.mp4').then(function (_ref) {\n              var uri = _ref.uri;\n              console.log('FILE WRITTEN!');\n              console.log(uri);\n              saveFile(uri);\n            }).catch(function (error) {\n              console.error(error);\n            });\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  exibirConfirmacao = function exibirConfirmacao() {\n    return Alert.alert(\"Confirmação\", \"Caso não tenha salvo, você irá perder o que preencheu, tem certeza que deseja voltar?\", [{\n      text: \"Não\",\n      onPress: function onPress() {\n        return console.log(\"Nada a fazer\");\n      }\n    }, {\n      text: \"Sim\",\n      onPress: function onPress() {\n        return props.navigation.navigate('App', {\n          userCd: context.userCd\n        });\n      }\n    }]);\n  };\n\n  var logoutApp = function logoutApp(callback) {\n    return _regeneratorRuntime.async(function logoutApp$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(logOut());\n\n          case 2:\n            context.userId = _context4.sent;\n            context.userCd = undefined;\n            loginForm.username = \"\";\n            loginForm.password = \"\";\n            callback();\n            setLoginUserId(undefined);\n            _context4.next = 10;\n            return _regeneratorRuntime.awrap(gravarLogLocal(getCurrentDate() + \" - Logout efetuado com sucesso.\"));\n\n          case 10:\n            setLoginScreen(true);\n\n          case 11:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  if (isLoadingComplete) {\n    if (loginScreen) {\n      return React.createElement(View, {\n        style: styles.background,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 17\n        }\n      }, React.createElement(KeyboardAvoidingView, {\n        behavior: \"position\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: styles.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.titleText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 29\n        }\n      }, \"SGO\"), React.createElement(Text, {\n        style: styles.title1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 29\n        }\n      }, \"1.0.2\")), React.createElement(View, {\n        style: styles.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 29\n        }\n      }, \"Usu\\xE1rio\"), React.createElement(TextInput, {\n        placeholder: \"\",\n        style: styles.textInput,\n        onChangeText: function onChangeText(e) {\n          return setLoginForm(_objectSpread(_objectSpread({}, loginForm), {}, {\n            username: e\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 29\n        }\n      }), React.createElement(Text, {\n        style: styles.label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 29\n        }\n      }, \"Senha\"), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 29\n        }\n      }, React.createElement(View, {\n        style: styles.inputArea,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 33\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputSenha,\n        placeholder: \"Digite a sua Senha\",\n        placeholderTextColor: \"#222\",\n        autoCorrect: false,\n        onChangeText: function onChangeText(e) {\n          return setLoginForm(_objectSpread(_objectSpread({}, loginForm), {}, {\n            password: e\n          }));\n        },\n        secureTextEntry: hidePass,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 37\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.icon,\n        onPress: function onPress() {\n          return setHidePass(!hidePass);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 37\n        }\n      }, hidePass ? React.createElement(Ionicons, {\n        name: \"eye\",\n        color: \"gray\",\n        size: 25,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 41\n        }\n      }) : React.createElement(Ionicons, {\n        name: \"eye-off\",\n        color: \"gray\",\n        size: 25,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 41\n        }\n      })))))), React.createElement(View, {\n        style: {\n          width: 200,\n          marginTop: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 21\n        }\n      }, React.createElement(ButtonP, {\n        title: \"Login\",\n        onPress: loginApp,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 25\n        }\n      })), React.createElement(View, {\n        style: {\n          width: 200,\n          marginTop: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 21\n        }\n      }, React.createElement(ButtonP, {\n        title: \"Voltar\",\n        onPress: function onPress() {\n          return setLoginScreen(false);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 25\n        }\n      })), React.createElement(Message, {\n        message: message,\n        callback: function callback() {\n          return setMessage(undefined);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 21\n        }\n      }));\n    } else {\n      return React.createElement(View, {\n        style: styles.mainView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.containerLogo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 20\n        }\n      }, React.createElement(Image, {\n        source: require(\"./src/assets/icon_CPIA.png\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 25\n        }\n      }), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 25\n        }\n      }, loginUserId ? React.createElement(ButtonP, {\n        title: \"Logout\",\n        onPress: logoutApp,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 44\n        }\n      }) : React.createElement(ButtonP, {\n        title: \"Login\",\n        onPress: function onPress() {\n          return setLoginScreen(true);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 93\n        }\n      }))), React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.sgoTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 25\n        }\n      }, \"SGO\"), React.createElement(Text, {\n        style: styles.title1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 25\n        }\n      }, \"1.0.2\"), React.createElement(ButtonG, {\n        title: \"Formul\\xE1rio de Terceiros\",\n        onPress: function onPress() {\n          return props.navigation.navigate('FormularioTerceiros', {\n            userCd: context.userCd\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 25\n        }\n      }), React.createElement(ButtonG, {\n        title: \"Tomada de dados da Opera\\xE7\\xE3o\",\n        onPress: function onPress() {\n          return props.navigation.navigate('DadosOperacao', {\n            userCd: context.userCd\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 25\n        }\n      }), React.createElement(ButtonG, {\n        title: \"Tomada de dados da Mec\\xE2nica\",\n        onPress: function onPress() {\n          return props.navigation.navigate('DadosMecanica', {\n            userCd: context.userCd\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 25\n        }\n      }), React.createElement(ButtonG, {\n        title: \"Tomada de dados da Via\",\n        onPress: function onPress() {\n          return props.navigation.navigate('DadosVia', {\n            userCd: context.userCd\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 25\n        }\n      }), React.createElement(Message, {\n        message: message,\n        callback: function callback() {\n          return setMessage(undefined);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 25\n        }\n      })));\n    }\n  } else {\n    return React.createElement(View, {\n      style: styles.loadingContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 13\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      color: \"#0174DF\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 17\n      }\n    }), React.createElement(Text, {\n      style: styles.loadingText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 17\n      }\n    }, \"Carregando\"), React.createElement(AppLoading, {\n      startAsync: startAsync,\n      onFinish: function onFinish() {\n        setLoadingComplete(true);\n      },\n      onError: console.warn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 17\n      }\n    }));\n  }\n}\n\nvar AppNavigator = createStackNavigator({\n  App: {\n    screen: App,\n    navigationOptions: function navigationOptions(_ref2) {\n      var navigation = _ref2.navigation;\n      return {\n        header: null\n      };\n    }\n  },\n  FormularioTerceiros: {\n    screen: FormularioTerceiros,\n    navigationOptions: function navigationOptions(_ref3) {\n      var navigation = _ref3.navigation;\n      return {\n        title: '     Dados de Terceiros',\n        headerLeft: React.createElement(Button, {\n          onPress: function onPress() {\n            return exibirConfirmacao();\n          },\n          title: \"VOLTAR\",\n          color: \"#0174DF\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 17\n          }\n        }),\n        headerRight: React.createElement(Text, {\n          style: styles.headerText,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 26\n          }\n        }, navigation.state.params.userCd ? navigation.state.params.userCd : ''),\n        headerStyle: {\n          backgroundColor: '#0174DF'\n        },\n        headerTintColor: 'white',\n        headerTitleStyle: {\n          fontWeight: 'bold'\n        }\n      };\n    }\n  },\n  DadosOperacao: {\n    screen: DadosOperacao,\n    navigationOptions: function navigationOptions(_ref4) {\n      var navigation = _ref4.navigation;\n      return {\n        title: '      Dados da Operação',\n        headerLeft: React.createElement(Button, {\n          onPress: function onPress() {\n            return exibirConfirmacao();\n          },\n          title: \"VOLTAR\",\n          color: \"#0174DF\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 17\n          }\n        }),\n        headerRight: React.createElement(Text, {\n          style: styles.headerText,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 26\n          }\n        }, navigation.state.params.userCd ? navigation.state.params.userCd : ''),\n        headerStyle: {\n          backgroundColor: '#0174DF'\n        },\n        headerTintColor: 'white',\n        headerTitleStyle: {\n          fontWeight: 'bold'\n        }\n      };\n    }\n  },\n  DadosVia: {\n    screen: DadosVia,\n    navigationOptions: function navigationOptions(_ref5) {\n      var navigation = _ref5.navigation;\n      return {\n        title: '      Dados da Via',\n        headerLeft: React.createElement(Button, {\n          onPress: function onPress() {\n            return exibirConfirmacao();\n          },\n          title: \"VOLTAR\",\n          color: \"#0174DF\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 17\n          }\n        }),\n        headerRight: React.createElement(Text, {\n          style: styles.headerText,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 26\n          }\n        }, navigation.state.params.userCd ? navigation.state.params.userCd : ''),\n        headerStyle: {\n          backgroundColor: '#0174DF'\n        },\n        headerTintColor: '#fff',\n        headerTitleStyle: {\n          fontWeight: 'bold'\n        }\n      };\n    }\n  },\n  DadosMecanica: {\n    screen: DadosMecanica,\n    navigationOptions: function navigationOptions(_ref6) {\n      var navigation = _ref6.navigation;\n      return {\n        title: '    Dados da Mecânica',\n        headerLeft: React.createElement(Button, {\n          onPress: function onPress() {\n            return exibirConfirmacao();\n          },\n          title: \"VOLTAR\",\n          color: \"#0174DF\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 17\n          }\n        }),\n        headerRight: React.createElement(Text, {\n          style: styles.headerText,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 26\n          }\n        }, navigation.state.params.userCd ? navigation.state.params.userCd : ''),\n        headerStyle: {\n          backgroundColor: '#0174DF'\n        },\n        headerTintColor: '#fff',\n        headerTitleStyle: {\n          fontWeight: 'bold'\n        }\n      };\n    }\n  }\n});\nexport default createAppContainer(AppNavigator);","map":{"version":3,"sources":["C:/RepositorioAPPSGO/APP-main/App.js"],"names":["React","useState","AppLoading","Ionicons","createAppContainer","createStackNavigator","HeaderBackButton","startApp","getAssetId","setAssetId","getAlbumId","setAlbumId","logIn","checkLogin","UserContext","logOut","SendForm","syncApp","syncFormUsers","syncWeather","syncRestrictionReason","gravarLogLocal","getCurrentDate","FormularioTerceiros","DadosOperacao","DadosVia","DadosMecanica","styles","ButtonP","ButtonG","Message","LogBox","logger","fileAsyncTransport","PasswordInputText","Permissions","MediaLibrary","FileSystem","ignoreLogs","ignoreAllLogs","log","createLogger","App","props","context","useContext","undefined","message","setMessage","loginUserId","setLoginUserId","isLoadingComplete","setLoadingComplete","loginScreen","setLoginScreen","username","password","loginForm","setLoginForm","hidePass","setHidePass","startAsync","syncUsers","syncW","syncRR","userData","userId","userCd","syncResponse","loginApp","callback","loginResponse","download","require","downloadAsync","documentDirectory","then","uri","console","saveFile","catch","error","exibirConfirmacao","Alert","alert","text","onPress","navigation","navigate","logoutApp","background","title","titleText","title1","label","textInput","e","inputArea","inputSenha","icon","width","marginTop","mainView","containerLogo","container","sgoTitle","loadingContainer","loadingText","warn","AppNavigator","screen","navigationOptions","header","headerLeft","headerRight","headerText","state","params","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;;;;;;;;;;AAEA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,SAASC,oBAAT,EAA+BC,gBAA/B,QAAuD,wBAAvD;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,UAA/B,EAA2CC,UAA3C,EAAuDC,UAAvD;AACA,SAASC,KAAT,EAAgBC,UAAhB,EAA4BC,WAA5B,EAAyCC,MAAzC;AACA,SAASC,QAAT,EAAmBC,OAAnB,EAA4BC,aAA5B,EAA2CC,WAA3C,EAAwDC,qBAAxD,EAA+EC,cAA/E,EAA+FC,cAA/F;AACA,OAAOC,mBAAP;AACA,OAAOC,aAAP;AACA,OAAOC,QAAP;AACA,OAAOC,aAAP;AACA,SAASC,MAAT;AACA,SAASC,OAAT,EAAkBC,OAAlB;AACA,SAASC,OAAT;SACSC,M;AACT,SAASC,MAAT,EAAiBC,kBAAjB,QAA2C,mBAA3C;AAEA,OAAOC,iBAAP,MAA8B,uCAA9B;AAEA,OAAO,KAAKC,WAAZ,MAA6B,kBAA7B;AAEA,OAAO,KAAKC,YAAZ,MAA8B,oBAA9B;AACA,OAAO,KAAKC,UAAZ,MAA4B,kBAA5B;AAGAN,MAAM,CAACO,UAAP,CAAkB,CAAC,cAAD,CAAlB;AACAP,MAAM,CAACQ,aAAP;AAIA,IAAIC,GAAG,GAAGR,MAAM,CAACS,YAAP,EAAV;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAChB,MAAMC,OAAO,GAAG5C,KAAK,CAAC6C,UAAN,CAAiB/B,WAAjB,CAAhB;;AADgB,kBAEcb,QAAQ,CAAC6C,SAAD,CAFtB;AAAA;AAAA,MAETC,OAFS;AAAA,MAEAC,UAFA;;AAAA,mBAGsB/C,QAAQ,CAAC6C,SAAD,CAH9B;AAAA;AAAA,MAGTG,WAHS;AAAA,MAGIC,cAHJ;;AAAA,mBAIgCjD,QAAQ,CAAC,KAAD,CAJxC;AAAA;AAAA,MAITkD,iBAJS;AAAA,MAIUC,kBAJV;;AAAA,mBAKsBnD,QAAQ,CAAC,KAAD,CAL9B;AAAA;AAAA,MAKToD,WALS;AAAA,MAKIC,cALJ;;AAAA,mBAMkBrD,QAAQ,CAAC;AAAEsD,IAAAA,QAAQ,EAAE,EAAZ;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B,GAAD,CAN1B;AAAA;AAAA,MAMTC,SANS;AAAA,MAMEC,YANF;;AAAA,oBAQgBzD,QAAQ,CAAC,IAAD,CARxB;AAAA;AAAA,MAQT0D,QARS;AAAA,MAQCC,WARD;;AAUhB,MAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACTtD,QAAQ,EADC;;AAAA;AAAA;AAAA,6CAGTc,cAAc,CAACC,cAAc,KAAK,wBAApB,CAHL;;AAAA;AAAA;AAAA,6CAKSJ,aAAa,EALtB;;AAAA;AAKT4C,YAAAA,SALS;;AAMf,gBAAIA,SAAJ,YAAIA,SAAS,CAAEf,OAAf,EAAwB;AACpBC,cAAAA,UAAU,CAACc,SAAS,CAACf,OAAX,CAAV;AACH;;AARc;AAAA,6CAUK5B,WAAW,EAVhB;;AAAA;AAUT4C,YAAAA,KAVS;;AAWf,gBAAIA,KAAJ,YAAIA,KAAK,CAAEhB,OAAX,EAAoB;AAChBC,cAAAA,UAAU,CAACe,KAAK,CAAChB,OAAP,CAAV;AACH;;AAbc;AAAA,6CAeM3B,qBAAqB,EAf3B;;AAAA;AAeT4C,YAAAA,MAfS;;AAgBf,gBAAIA,MAAJ,YAAIA,MAAM,CAAEjB,OAAZ,EAAqB;AACjBC,cAAAA,UAAU,CAACgB,MAAM,CAACjB,OAAR,CAAV;AACH;;AAlBc;AAAA,6CAoBQlC,UAAU,EApBlB;;AAAA;AAoBToD,YAAAA,QApBS;;AAAA,kBAqBXA,QArBW,YAqBXA,QAAQ,CAAEC,MArBC;AAAA;AAAA;AAAA;;AAsBXtB,YAAAA,OAAO,CAACsB,MAAR,GAAiBD,QAAQ,CAACC,MAA1B;AACAtB,YAAAA,OAAO,CAACuB,MAAR,GAAiBF,QAAQ,CAACE,MAA1B;AACAjB,YAAAA,cAAc,CAACN,OAAO,CAACsB,MAAT,CAAd;AAxBW;AAAA,6CAyBgBjD,OAAO,CAAC2B,OAAO,CAACsB,MAAT,CAzBvB;;AAAA;AAyBLE,YAAAA,YAzBK;;AA0BX,gBAAIA,YAAJ,YAAIA,YAAY,CAAErB,OAAlB,EAA2B;AACvBC,cAAAA,UAAU,CAACoB,YAAY,CAACrB,OAAd,CAAV;AACH;;AA5BU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAgCA,MAAMsB,QAAQ,GAAG,SAAXA,QAAW,CAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAETb,SAAS,CAACF,QAAV,IAAsB,EAAtB,IAA4BE,SAAS,CAACD,QAAV,IAAsB,EAFzC;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAGmB5C,KAAK,CAAC6C,SAAS,CAACF,QAAX,EAAqBE,SAAS,CAACD,QAA/B,CAHxB;;AAAA;AAGHe,YAAAA,aAHG;;AAAA,kBAILA,aAAa,CAACL,MAAd,IAAwBpB,SAJnB;AAAA;AAAA;AAAA;;AAKLF,YAAAA,OAAO,CAACsB,MAAR,GAAiBK,aAAa,CAACL,MAA/B;AACAtB,YAAAA,OAAO,CAACuB,MAAR,GAAiBI,aAAa,CAACJ,MAA/B;AACAjB,YAAAA,cAAc,CAACN,OAAO,CAACsB,MAAT,CAAd;AACAd,YAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAE,YAAAA,cAAc,CAAC,KAAD,CAAd;AATK;AAAA,6CAWAjC,cAAc,CAACC,cAAc,KAAK,gCAApB,CAXd;;AAAA;AAcNgD,YAAAA,QAAQ;AAdF;AAAA;;AAAA;AAgBLA,YAAAA,QAAQ;AAhBH;AAAA,6CAiBCjD,cAAc,CAACC,cAAc,KAAK,0BAAnB,GAAgDiD,aAAa,CAACxB,OAA/D,CAjBf;;AAAA;AAkBLC,YAAAA,UAAU,CAACuB,aAAa,CAACxB,OAAf,CAAV;;AAlBK;AAAA;AAAA;;AAAA;AAuBTuB,YAAAA,QAAQ;AAvBC;AAAA,6CAwBHjD,cAAc,CAACC,cAAc,KAAK,qDAApB,CAxBX;;AAAA;AAyBT0B,YAAAA,UAAU,CAAC,4BAAD,CAAV;;AAzBS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAmCA,MAAMwB,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AACbnC,YAAAA,UADa,GACAoC,OAAO,CAAC,kBAAD,CADP;AAEjBpC,YAAAA,UAAU,CAACqC,aAAX,CACA,qDADA,EAEArC,UAAU,CAACsC,iBAAX,GAA+B,WAF/B,EAIDC,IAJC,CAII,gBAAa;AAAA,kBAAVC,GAAU,QAAVA,GAAU;AACjBC,cAAAA,OAAO,CAACtC,GAAR,CAAY,eAAZ;AACAsC,cAAAA,OAAO,CAACtC,GAAR,CAAYqC,GAAZ;AACAE,cAAAA,QAAQ,CAACF,GAAD,CAAR;AAMH,aAbG,EAcHG,KAdG,CAcG,UAAAC,KAAK,EAAI;AAKhBH,cAAAA,OAAO,CAACG,KAAR,CAAcA,KAAd;AACC,aApBG;;AAFiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AA2BDC,EAAAA,iBAAiB,GAAG;AAAA,WACtBC,KAAK,CAACC,KAAN,CACC,aADD,EAEC,uFAFD,EAGC,CACC;AACCC,MAAAA,IAAI,EAAE,KADP;AAECC,MAAAA,OAAO,EAAE;AAAA,eAAMR,OAAO,CAACtC,GAAR,CAAY,cAAZ,CAAN;AAAA;AAFV,KADD,EAKC;AAAE6C,MAAAA,IAAI,EAAE,KAAR;AAAeC,MAAAA,OAAO,EAAE;AAAA,eAAM3C,KAAK,CAAC4C,UAAN,CAAiBC,QAAjB,CAA0B,KAA1B,EAAiC;AAAErB,UAAAA,MAAM,EAAEvB,OAAO,CAACuB;AAAlB,SAAjC,CAAN;AAAA;AAAxB,KALD,CAHD,CADsB;AAAA,GAApB;;AAkBC,MAAMsB,SAAS,GAAG,SAAZA,SAAY,CAAOnB,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACSvD,MAAM,EADf;;AAAA;AACd6B,YAAAA,OAAO,CAACsB,MADM;AAEdtB,YAAAA,OAAO,CAACuB,MAAR,GAAiBrB,SAAjB;AACAW,YAAAA,SAAS,CAACF,QAAV,GAAqB,EAArB;AACAE,YAAAA,SAAS,CAACD,QAAV,GAAqB,EAArB;AACAc,YAAAA,QAAQ;AACRpB,YAAAA,cAAc,CAACJ,SAAD,CAAd;AANc;AAAA,6CAORzB,cAAc,CAACC,cAAc,KAAK,iCAApB,CAPN;;AAAA;AAQdgC,YAAAA,cAAc,CAAC,IAAD,CAAd;;AARc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAcA,MAAIH,iBAAJ,EAAuB;AACnB,QAAIE,WAAJ,EAAiB;AAMb,aA6CI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE1B,MAAM,CAAC+D,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,oBAAD;AAAsB,QAAA,QAAQ,EAAC,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE/D,MAAM,CAACgE,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEhE,MAAM,CAACiE,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEjE,MAAM,CAACkE,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,CADJ,EAKI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAElE,MAAM,CAACgE,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEhE,MAAM,CAACmE,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI,oBAAC,SAAD;AAAW,QAAA,WAAW,EAAC,EAAvB;AAA0B,QAAA,KAAK,EAAEnE,MAAM,CAACoE,SAAxC;AACI,QAAA,YAAY,EAAE,sBAACC,CAAD;AAAA,iBAAOtC,YAAY,iCAAMD,SAAN;AAAiBF,YAAAA,QAAQ,EAAEyC;AAA3B,aAAnB;AAAA,SADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAKI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAErE,MAAM,CAACmE,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALJ,EAMI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEnE,MAAM,CAACsE,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AACI,QAAA,KAAK,EAAEtE,MAAM,CAACuE,UADlB;AAEI,QAAA,WAAW,EAAC,oBAFhB;AAGI,QAAA,oBAAoB,EAAC,MAHzB;AAII,QAAA,WAAW,EAAE,KAJjB;AAKI,QAAA,YAAY,EAAE,sBAACF,CAAD;AAAA,iBAAOtC,YAAY,iCAAMD,SAAN;AAAiBD,YAAAA,QAAQ,EAAEwC;AAA3B,aAAnB;AAAA,SALlB;AAMI,QAAA,eAAe,EAAErC,QANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EASI,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEhC,MAAM,CAACwE,IAAhC;AAAsC,QAAA,OAAO,EAAG;AAAA,iBAAMvC,WAAW,CAAC,CAACD,QAAF,CAAjB;AAAA,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACMA,QAAQ,GACV,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAC,KAAf;AAAqB,QAAA,KAAK,EAAC,MAA3B;AAAkC,QAAA,IAAI,EAAE,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADU,GAGV,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAC,SAAf;AAAyB,QAAA,KAAK,EAAC,MAA/B;AAAsC,QAAA,IAAI,EAAE,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CATJ,CADJ,CANJ,CALJ,CADJ,EAsCI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEyC,UAAAA,KAAK,EAAE,GAAT;AAAcC,UAAAA,SAAS,EAAE;AAAzB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAC,OAAf;AAAuB,QAAA,OAAO,EAAEhC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAtCJ,EAyCI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAE+B,UAAAA,KAAK,EAAE,GAAT;AAAcC,UAAAA,SAAS,EAAE;AAAzB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAC,QAAf;AAAwB,QAAA,OAAO,EAAE;AAAA,iBAAM/C,cAAc,CAAC,KAAD,CAApB;AAAA,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAzCJ,EA4CI,oBAAC,OAAD;AAAS,QAAA,OAAO,EAAEP,OAAlB;AAA2B,QAAA,QAAQ,EAAE;AAAA,iBAAMC,UAAU,CAACF,SAAD,CAAhB;AAAA,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA5CJ,CA7CJ;AA4FH,KAlGD,MAkGO;AAMH,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEnB,MAAM,CAAC2E,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE3E,MAAM,CAAC4E,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,oBAAC,KAAD;AACI,QAAA,MAAM,EAAE9B,OAAO,8BADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADL,EAIK,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKxB,WAAW,GAAG,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAC,QAAf;AAAwB,QAAA,OAAO,EAAEwC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,GAAoD,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAC,OAAf;AAAuB,QAAA,OAAO,EAAE;AAAA,iBAAMnC,cAAc,CAAC,IAAD,CAApB;AAAA,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADpE,CAJL,CADH,EASI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE3B,MAAM,CAAC6E,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE7E,MAAM,CAAC8E,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE9E,MAAM,CAACkE,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,EAGI,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAC,4BAAf;AACI,QAAA,OAAO,EAAE;AAAA,iBAAMlD,KAAK,CAAC4C,UAAN,CAAiBC,QAAjB,CAA0B,qBAA1B,EAAiD;AAAErB,YAAAA,MAAM,EAAEvB,OAAO,CAACuB;AAAlB,WAAjD,CAAN;AAAA,SADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,EAKI,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAC,mCAAf;AACI,QAAA,OAAO,EAAE;AAAA,iBAAMxB,KAAK,CAAC4C,UAAN,CAAiBC,QAAjB,CAA0B,eAA1B,EAA2C;AAAErB,YAAAA,MAAM,EAAEvB,OAAO,CAACuB;AAAlB,WAA3C,CAAN;AAAA,SADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,EAOI,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAC,gCAAf;AACI,QAAA,OAAO,EAAE;AAAA,iBAAMxB,KAAK,CAAC4C,UAAN,CAAiBC,QAAjB,CAA0B,eAA1B,EAA2C;AAAErB,YAAAA,MAAM,EAAEvB,OAAO,CAACuB;AAAlB,WAA3C,CAAN;AAAA,SADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,EASI,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAC,wBAAf;AACI,QAAA,OAAO,EAAE;AAAA,iBAAMxB,KAAK,CAAC4C,UAAN,CAAiBC,QAAjB,CAA0B,UAA1B,EAAsC;AAAErB,YAAAA,MAAM,EAAEvB,OAAO,CAACuB;AAAlB,WAAtC,CAAN;AAAA,SADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ,EAYI,oBAAC,OAAD;AAAS,QAAA,OAAO,EAAEpB,OAAlB;AAA2B,QAAA,QAAQ,EAAE;AAAA,iBAAMC,UAAU,CAACF,SAAD,CAAhB;AAAA,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZJ,CATJ,CADJ;AA0BH;AACJ,GApID,MAoIO;AACH,WACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEnB,MAAM,CAAC+E,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,iBAAD;AAAmB,MAAA,IAAI,EAAC,OAAxB;AAAgC,MAAA,KAAK,EAAC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE/E,MAAM,CAACgF,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,EAGI,oBAAC,UAAD;AAAY,MAAA,UAAU,EAAE9C,UAAxB;AAAoC,MAAA,QAAQ,EAAE,oBAAM;AAAET,QAAAA,kBAAkB,CAAC,IAAD,CAAlB;AAA0B,OAAhF;AAAkF,MAAA,OAAO,EAAE0B,OAAO,CAAC8B,IAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AAOH;AACJ;;AAID,IAAMC,YAAY,GAAGxG,oBAAoB,CAAC;AACtCqC,EAAAA,GAAG,EAAE;AACDoE,IAAAA,MAAM,EAAEpE,GADP;AAEDqE,IAAAA,iBAAiB,EAAE;AAAA,UAAGxB,UAAH,SAAGA,UAAH;AAAA,aAAqB;AACpCyB,QAAAA,MAAM,EAAE;AAD4B,OAArB;AAAA;AAFlB,GADiC;AAOtCzF,EAAAA,mBAAmB,EAAE;AACjBuF,IAAAA,MAAM,EAAEvF,mBADS;AAEjBwF,IAAAA,iBAAiB,EAAE;AAAA,UAAGxB,UAAH,SAAGA,UAAH;AAAA,aAAqB;AACpCI,QAAAA,KAAK,EAAE,yBAD6B;AAGpCsB,QAAAA,UAAU,EAGN,oBAAC,MAAD;AACE,UAAA,OAAO,EAAE;AAAA,mBAAM/B,iBAAiB,EAAvB;AAAA,WADX;AAEE,UAAA,KAAK,EAAC,QAFR;AAGE,UAAA,KAAK,EAAC,SAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANgC;AAapCgC,QAAAA,WAAW,EAAE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEvF,MAAM,CAACwF,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAiC5B,UAAU,CAAC6B,KAAX,CAAiBC,MAAjB,CAAwBlD,MAAxB,GAAiCoB,UAAU,CAAC6B,KAAX,CAAiBC,MAAjB,CAAwBlD,MAAzD,GAAkE,EAAnG,CAbuB;AAcpCmD,QAAAA,WAAW,EAAE;AACTC,UAAAA,eAAe,EAAE;AADR,SAduB;AAiBpCC,QAAAA,eAAe,EAAE,OAjBmB;AAkBpCC,QAAAA,gBAAgB,EAAE;AACdC,UAAAA,UAAU,EAAE;AADE;AAlBkB,OAArB;AAAA;AAFF,GAPiB;AAgCtClG,EAAAA,aAAa,EAAE;AAEXsF,IAAAA,MAAM,EAAEtF,aAFG;AAGXuF,IAAAA,iBAAiB,EAAE;AAAA,UAAGxB,UAAH,SAAGA,UAAH;AAAA,aAAqB;AACpCI,QAAAA,KAAK,EAAE,yBAD6B;AAGpCsB,QAAAA,UAAU,EAGN,oBAAC,MAAD;AACE,UAAA,OAAO,EAAE;AAAA,mBAAM/B,iBAAiB,EAAvB;AAAA,WADX;AAEE,UAAA,KAAK,EAAC,QAFR;AAGE,UAAA,KAAK,EAAC,SAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANgC;AAcpCgC,QAAAA,WAAW,EAAE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEvF,MAAM,CAACwF,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAiC5B,UAAU,CAAC6B,KAAX,CAAiBC,MAAjB,CAAwBlD,MAAxB,GAAiCoB,UAAU,CAAC6B,KAAX,CAAiBC,MAAjB,CAAwBlD,MAAzD,GAAkE,EAAnG,CAduB;AAepCmD,QAAAA,WAAW,EAAE;AACTC,UAAAA,eAAe,EAAE;AADR,SAfuB;AAkBpCC,QAAAA,eAAe,EAAE,OAlBmB;AAmBpCC,QAAAA,gBAAgB,EAAE;AACdC,UAAAA,UAAU,EAAE;AADE;AAnBkB,OAArB;AAAA;AAHR,GAhCuB;AA8DtCjG,EAAAA,QAAQ,EAAE;AACNqF,IAAAA,MAAM,EAAErF,QADF;AAENsF,IAAAA,iBAAiB,EAAE;AAAA,UAAGxB,UAAH,SAAGA,UAAH;AAAA,aAAqB;AACpCI,QAAAA,KAAK,EAAE,oBAD6B;AAEpCsB,QAAAA,UAAU,EAGN,oBAAC,MAAD;AACE,UAAA,OAAO,EAAE;AAAA,mBAAM/B,iBAAiB,EAAvB;AAAA,WADX;AAEE,UAAA,KAAK,EAAC,QAFR;AAGE,UAAA,KAAK,EAAC,SAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALgC;AAapCgC,QAAAA,WAAW,EAAE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEvF,MAAM,CAACwF,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAiC5B,UAAU,CAAC6B,KAAX,CAAiBC,MAAjB,CAAwBlD,MAAxB,GAAiCoB,UAAU,CAAC6B,KAAX,CAAiBC,MAAjB,CAAwBlD,MAAzD,GAAkE,EAAnG,CAbuB;AAcpCmD,QAAAA,WAAW,EAAE;AACTC,UAAAA,eAAe,EAAE;AADR,SAduB;AAiBpCC,QAAAA,eAAe,EAAE,MAjBmB;AAkBpCC,QAAAA,gBAAgB,EAAE;AACdC,UAAAA,UAAU,EAAE;AADE;AAlBkB,OAArB;AAAA;AAFb,GA9D4B;AAuFtChG,EAAAA,aAAa,EAAE;AACXoF,IAAAA,MAAM,EAAEpF,aADG;AAEXqF,IAAAA,iBAAiB,EAAE;AAAA,UAAGxB,UAAH,SAAGA,UAAH;AAAA,aAAqB;AACpCI,QAAAA,KAAK,EAAE,uBAD6B;AAEpCsB,QAAAA,UAAU,EAGN,oBAAC,MAAD;AACE,UAAA,OAAO,EAAE;AAAA,mBAAM/B,iBAAiB,EAAvB;AAAA,WADX;AAEE,UAAA,KAAK,EAAC,QAFR;AAGE,UAAA,KAAK,EAAC,SAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALgC;AAWpCgC,QAAAA,WAAW,EAAE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEvF,MAAM,CAACwF,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAiC5B,UAAU,CAAC6B,KAAX,CAAiBC,MAAjB,CAAwBlD,MAAxB,GAAiCoB,UAAU,CAAC6B,KAAX,CAAiBC,MAAjB,CAAwBlD,MAAzD,GAAkE,EAAnG,CAXuB;AAYpCmD,QAAAA,WAAW,EAAE;AACTC,UAAAA,eAAe,EAAE;AADR,SAZuB;AAepCC,QAAAA,eAAe,EAAE,MAfmB;AAgBpCC,QAAAA,gBAAgB,EAAE;AACdC,UAAAA,UAAU,EAAE;AADE;AAhBkB,OAArB;AAAA;AAFR;AAvFuB,CAAD,CAAzC;AAmHA,eAAetH,kBAAkB,CAACyG,YAAD,CAAjC","sourcesContent":["import React, { useState } from 'react';\nimport AppLoading from 'expo-app-loading';\nimport { Text, Button, Alert, View, TextInput, KeyboardAvoidingView, TouchableOpacity, ActivityIndicator, StyleSheet, Image } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { createAppContainer } from 'react-navigation';\nimport { createStackNavigator, HeaderBackButton } from 'react-navigation-stack';\nimport { startApp, getAssetId, setAssetId, getAlbumId, setAlbumId } from './db/sqliteConnection';\nimport { logIn, checkLogin, UserContext, logOut } from './businessLayer/login';\nimport { SendForm, syncApp, syncFormUsers, syncWeather, syncRestrictionReason, gravarLogLocal, getCurrentDate } from './businessLayer/forms';\nimport FormularioTerceiros from './src/FormularioTerceiros';\nimport DadosOperacao from './src/DadosOperacao';\nimport DadosVia from './src/DadosVia';\nimport DadosMecanica from './src/DadosMecanica';\nimport { styles } from './styles/styles';\nimport { ButtonP, ButtonG } from './components/Button';\nimport { Message } from './components/AnimatedMessage';\nimport { LogBox } from \"react-native\";\nimport { logger, fileAsyncTransport } from \"react-native-logs\";\n\nimport PasswordInputText from 'react-native-hide-show-password-input';\n\nimport * as Permissions from 'expo-permissions';\n\nimport * as MediaLibrary from 'expo-media-library';\nimport * as FileSystem from 'expo-file-system';\n\n\nLogBox.ignoreLogs(['Warning: ...']); // Ignore log notification by message\nLogBox.ignoreAllLogs();//Ignore all log notifications\n\n\n\nvar log = logger.createLogger();\n\nfunction App(props) {\n    const context = React.useContext(UserContext);\n    const [message, setMessage] = useState(undefined);\n    const [loginUserId, setLoginUserId] = useState(undefined);\n    const [isLoadingComplete, setLoadingComplete] = useState(false);\n    const [loginScreen, setLoginScreen] = useState(false);\n    const [loginForm, setLoginForm] = useState({ username: '', password: '' });\n\n    const [hidePass, setHidePass] = useState(true);\n\n    const startAsync = async () => {\n        await startApp();\n        \n        await gravarLogLocal(getCurrentDate() + \" - Aplicação iniciada.\");\n\n        const syncUsers = await syncFormUsers();\n        if (syncUsers?.message) {\n            setMessage(syncUsers.message);\n        }\n\n        const syncW = await syncWeather();\n        if (syncW?.message) {\n            setMessage(syncW.message);\n        }\n\n        const syncRR = await syncRestrictionReason();\n        if (syncRR?.message) {\n            setMessage(syncRR.message);\n        }\n\n        const userData = await checkLogin();\n        if (userData?.userId) {\n            context.userId = userData.userId;\n            context.userCd = userData.userCd;\n            setLoginUserId(context.userId);\n            const syncResponse = await syncApp(context.userId);\n            if (syncResponse?.message) {\n                setMessage(syncResponse.message);\n            }\n        }\n    }\n\n    const loginApp = async (callback) => {\n             \n        if (loginForm.username != \"\" && loginForm.password != \"\") {\n            const loginResponse = await logIn(loginForm.username, loginForm.password);\n            if (loginResponse.userId != undefined) {\n                context.userId = loginResponse.userId;\n                context.userCd = loginResponse.userCd;\n                setLoginUserId(context.userId);\n                setLoadingComplete(false);\n                setLoginScreen(false);\n                // Gravar log com login de sucesso log = data + hora loginResponse.message \n               await gravarLogLocal(getCurrentDate() + \" - Login efetuado com sucesso!\");\n               \n\n               callback();\n            } else {\n                callback();\n                await gravarLogLocal(getCurrentDate() + \" - Login não efetuado - \" + loginResponse.message);\n                setMessage(loginResponse.message);\n                \n            }\n\n        } else {\n            callback();\n            await gravarLogLocal(getCurrentDate() + \" - Login não efetuado - Usuário ou Senha inválidos.\");\n            setMessage(\"Usuário ou Senha inválidos\");\n\n        }\n\n    }\n\n\n\n//Exemplo de download a partir de uma URL da web\n \n    const download = async () => {\n    var FileSystem = require(\"expo-file-system\");\n    FileSystem.downloadAsync(\n    'http://techslides.com/demos/sample-videos/small.mp4',\n    FileSystem.documentDirectory + 'small.mp4'\n  )\n  .then(({ uri }) => {\n    console.log('FILE WRITTEN!');\n    console.log(uri);\n    saveFile(uri);\n    //Alert.alert(\n     // \"App\",\n    //  uri\n   // );\n  //this.setState({uri: uri});\n})\n.catch(error => {\n//Alert.alert(\n // \"App\",\n  //error\n//);\nconsole.error(error);\n});\n}\n\n\n\n   exibirConfirmacao = () =>\n\tAlert.alert(\n\t\t\"Confirmação\",\n\t\t\"Caso não tenha salvo, você irá perder o que preencheu, tem certeza que deseja voltar?\",\n\t\t[\n\t\t\t{\n\t\t\t\ttext: \"Não\",\n\t\t\t\tonPress: () => console.log(\"Nada a fazer\")\n\t\t\t},\n\t\t\t{ text: \"Sim\", onPress: () => props.navigation.navigate('App', { userCd: context.userCd }) }\n\n\n\t\t]\n\t);\n\n\n\n\n    const logoutApp = async (callback) => {\n        context.userId = await logOut();\n        context.userCd = undefined;\n        loginForm.username = \"\";\n        loginForm.password = \"\";\n        callback();\n        setLoginUserId(undefined);\n        await gravarLogLocal(getCurrentDate() + \" - Logout efetuado com sucesso.\");\n        setLoginScreen(true);\n        \n    }\n\n\n\n    if (isLoadingComplete) {\n        if (loginScreen) {\n            // return (\n            //     <View>\n            //         <ButtonG title={'teste'} onPress={async() => {await gravarLogLocal('MANOEL')}}></ButtonG>\n            //     </View>\n            // );\n            return (\n                // <KeyboardAvoidingView style={styles.background}>\n                //     <View style={styles.containerLogo}>\n                //         <Image\n                //             source={require('./src/assets/icon_CPIA.png')}\n                //         />\n                //     </View>\n                //     <View style={styles.containerNovo}>\n                //         <View style={styles.inputArea}>\n                //             <TextInput \n                //             style={styles.input}\n                //             placeholder='Usuário'\n                //             placeholderTextColor='#222'\n                //             autoCorrect={false}\n                //             onChangeText={(e) => setLoginForm({ ...loginForm, username: e })}\n                //             />\n                //         </View>\n                        // <View style={styles.inputArea}>\n                        //     <TextInput \n                        //         style={styles.inputSenha}\n                        //         placeholder='Digite a sua Senha'\n                        //         placeholderTextColor='#222'\n                        //         autoCorrect={false}\n                        //         onChangeText={(e) => setLoginForm({ ...loginForm, password: e })}\n                        //         secureTextEntry={hidePass}\n                        //     />\n                        //     <TouchableOpacity style={styles.icon} onPress={ () => setHidePass(!hidePass) }>\n                        //         { hidePass ? \n                        //         <Ionicons name=\"eye\" color=\"gray\" size={25} />\n                        //         :\n                        //         <Ionicons name=\"eye-off\" color=\"gray\" size={25} />                                                            \n                        //     }\n                        //     </TouchableOpacity>\n                        // </View>\n                //         <View style={styles.btnLogin}>\n                //             <TouchableOpacity style={styles.btnSubmit} onPress={loginApp}>\n                //                 <Text style={styles.submitText}>LOGIN</Text>\n                //             </TouchableOpacity>\n                //             <TouchableOpacity style={styles.btnRetornar} onPress={() => setLoginScreen(false)}>\n                //                 <Text style={styles.retornarText}>RETORNAR</Text>\n                //             </TouchableOpacity>\n                //         </View>\n                //     </View>\n                //     <Message message={message} callback={() => setMessage(undefined)} />\n                // </KeyboardAvoidingView>\n                <View style={styles.background}>\n                    <KeyboardAvoidingView behavior='position' >\n                        <View style={styles.title}>\n                            <Text style={styles.titleText}>SGO</Text>\n                            <Text style={styles.title1}>1.0.2</Text>\n                        </View>\n                        <View style={styles.title}>\n                            <Text style={styles.label}>Usuário</Text>\n                            <TextInput placeholder='' style={styles.textInput}\n                                onChangeText={(e) => setLoginForm({ ...loginForm, username: e })}>\n                            </TextInput>\n                            <Text style={styles.label}>Senha</Text>\n                            <View>\n                                <View style={styles.inputArea}>\n                                    <TextInput \n                                        style={styles.inputSenha}\n                                        placeholder='Digite a sua Senha'\n                                        placeholderTextColor='#222'\n                                        autoCorrect={false}\n                                        onChangeText={(e) => setLoginForm({ ...loginForm, password: e })}\n                                        secureTextEntry={hidePass}\n                                    />\n                                    <TouchableOpacity style={styles.icon} onPress={ () => setHidePass(!hidePass) }>\n                                        { hidePass ? \n                                        <Ionicons name=\"eye\" color=\"gray\" size={25} />\n                                        :\n                                        <Ionicons name=\"eye-off\" color=\"gray\" size={25} />                                                            \n                                    }\n                                    </TouchableOpacity>\n                                </View>\n                            </View>\n                            \n                            {/* <PasswordInputText\n                                secureTextEntry placeholder='' label={'SENHA'}\n                                onChangeText={(e) => setLoginForm({ ...loginForm, password: e })}\n                            ></PasswordInputText> */}\n                        </View>\n                    </KeyboardAvoidingView>\n                    <View style={{ width: 200, marginTop: 20 }}>\n                        <ButtonP title=\"Login\" onPress={loginApp} />\n                    </View>\n                    <View style={{ width: 200, marginTop: 20 }}>\n                        <ButtonP title=\"Voltar\" onPress={() => setLoginScreen(false)}/> \n                    </View>\n                    <Message message={message} callback={() => setMessage(undefined)} />\n                </View>\n            );\n        } else {\n            // return (\n            //     <View>\n            //         <ButtonG title={'teste'} onPress={async() => {await gravarLogLocal('MANOEL')}}></ButtonG>\n            //     </View>\n            // );\n            return (\n                <View style={styles.mainView}>\n                   <View style={styles.containerLogo}>\n                        <Image\n                            source={require('./src/assets/icon_CPIA.png')}\n                        />\n                        <View>\n                            {loginUserId ? <ButtonP title=\"Logout\" onPress={logoutApp} /> : <ButtonP title=\"Login\" onPress={() => setLoginScreen(true)} />}\n                        </View>\n                    </View>\n                    <View style={styles.container}>\n                        <Text style={styles.sgoTitle}>SGO</Text>\n                        <Text style={styles.title1}>1.0.2</Text>\n                        <ButtonG title=\"Formulário de Terceiros\"\n                            onPress={() => props.navigation.navigate('FormularioTerceiros', { userCd: context.userCd })} />\n                        <ButtonG title=\"Tomada de dados da Operação\"\n                            onPress={() => props.navigation.navigate('DadosOperacao', { userCd: context.userCd })} />\n                        <ButtonG title=\"Tomada de dados da Mecânica\"\n                            onPress={() => props.navigation.navigate('DadosMecanica', { userCd: context.userCd })} />\n                        <ButtonG title=\"Tomada de dados da Via\"\n                            onPress={() => props.navigation.navigate('DadosVia', { userCd: context.userCd })} />\n                        \n                        <Message message={message} callback={() => setMessage(undefined)} />\n                    </View>\n                </View>\n            );\n        }\n    } else {\n        return (\n            <View style={styles.loadingContainer}>\n                <ActivityIndicator size=\"large\" color=\"#0174DF\" />\n                <Text style={styles.loadingText}>Carregando</Text>\n                <AppLoading startAsync={startAsync} onFinish={() => { setLoadingComplete(true) }} onError={console.warn} />\n            </View>\n        );\n    }\n}\n\n\n\nconst AppNavigator = createStackNavigator({\n    App: {\n        screen: App,\n        navigationOptions: ({ navigation }) => ({\n            header: null\n        })\n    },\n    FormularioTerceiros: {\n        screen: FormularioTerceiros,\n        navigationOptions: ({ navigation }) => ({\n            title: '     Dados de Terceiros',\n\n            headerLeft:\n            \n            (\n                <Button\n                  onPress={() => exibirConfirmacao()}\n                  title=\"VOLTAR\"\n                  color=\"#0174DF\"\n               />\n              ),  \n\n            headerRight: <Text style={styles.headerText}>{navigation.state.params.userCd ? navigation.state.params.userCd : ''}</Text>,\n            headerStyle: {\n                backgroundColor: '#0174DF',\n            },\n            headerTintColor: 'white',\n            headerTitleStyle: {\n                fontWeight: 'bold',\n            }\n        })\n    },\n    DadosOperacao: {\n\n        screen: DadosOperacao,\n        navigationOptions: ({ navigation }) => ({\n            title: '      Dados da Operação',\n\n            headerLeft:\n            \n            (\n                <Button\n                  onPress={() => exibirConfirmacao()}\n                  title=\"VOLTAR\"\n                  color=\"#0174DF\"\n               />\n              ),  \n\n\n            headerRight: <Text style={styles.headerText}>{navigation.state.params.userCd ? navigation.state.params.userCd : ''}</Text>,\n            headerStyle: {\n                backgroundColor: '#0174DF',\n            },\n            headerTintColor: 'white',\n            headerTitleStyle: {\n                fontWeight: 'bold',\n            }\n\n        }\n        )\n\n    },\n    DadosVia: {\n        screen: DadosVia,\n        navigationOptions: ({ navigation }) => ({\n            title: '      Dados da Via',\n            headerLeft:\n            \n            (\n                <Button\n                  onPress={() => exibirConfirmacao()}\n                  title=\"VOLTAR\"\n                  color=\"#0174DF\"\n               />\n              ),       \n     \n\n            headerRight: <Text style={styles.headerText}>{navigation.state.params.userCd ? navigation.state.params.userCd : ''}</Text>,\n            headerStyle: {\n                backgroundColor: '#0174DF',\n            },\n            headerTintColor: '#fff',\n            headerTitleStyle: {\n                fontWeight: 'bold',\n            },\n        })\n    },\n    DadosMecanica: {\n        screen: DadosMecanica,\n        navigationOptions: ({ navigation }) => ({\n            title: '    Dados da Mecânica',\n            headerLeft:\n            \n            (\n                <Button\n                  onPress={() => exibirConfirmacao()}\n                  title=\"VOLTAR\"\n                  color=\"#0174DF\"\n               />\n              ),  \n            headerRight: <Text style={styles.headerText}>{navigation.state.params.userCd ? navigation.state.params.userCd : ''}</Text>,\n            headerStyle: {\n                backgroundColor: '#0174DF',\n            },\n            headerTintColor: '#fff',\n            headerTitleStyle: {\n                fontWeight: 'bold',\n            },\n        })\n    }\n});\n\n\n   \n\nexport default createAppContainer(AppNavigator);"]},"metadata":{},"sourceType":"module"}