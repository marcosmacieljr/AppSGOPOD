{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Repositorio\\\\SgoApp\\\\APP\\\\businessLayer\\\\forms.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { httpRequest } from \"../utils/apiUtils\";\nimport * as constants from \"../utils/constants\";\nimport { newForm, deleteForm, selectForms, selectLastFormUser, newFormUser, selectFormUsers, getFormByRoute, deleteFormByRoute, selectLastWeather, newWeather, selectWeather, selectLastRestrictionReason, newRestrictionReason, selectRestrictionReason } from \"../db/forms\";\nimport { UserContext } from \"./login\";\nimport { ButtonP } from \"../components/Button\";\nimport { Message } from \"../components/AnimatedMessage\";\nexport function SendForm(props) {\n  var context = React.useContext(UserContext);\n\n  var _useState = useState(undefined),\n      _useState2 = _slicedToArray(_useState, 2),\n      message = _useState2[0],\n      setMessage = _useState2[1];\n\n  var sendFormApp = function sendFormApp(callback) {\n    var requiredField, response, responseDataString, msgRetornoSincronizacao;\n    return _regeneratorRuntime.async(function sendFormApp$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            requiredField = props.req(props.json);\n\n            if (!(requiredField == \"\")) {\n              _context.next = 11;\n              break;\n            }\n\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(send(props.json, props.route, context.userId, props.createdForm));\n\n          case 4:\n            response = _context.sent;\n            responseDataString = response.data;\n            console.log(\"1:\" + responseDataString);\n            msgRetornoSincronizacao = \"Formulário salvo, porém, não sincronizado.\";\n\n            if (response.message == constants.timeoutMessage || response.message == constants.notConnectedMessage || response.data) {\n              console.log(\"2:\" + responseDataString);\n              console.log(typeof responseDataString.includes === \"undefined\");\n\n              if (responseDataString != true && responseDataString != false) {\n                if (responseDataString.includes('sucesso')) {\n                  msgRetornoSincronizacao = responseDataString + \" Boletim sincronizado com sucesso!\";\n                }\n              }\n\n              props.callback();\n            } else {\n              msgRetornoSincronizacao = \"\";\n              setMessage(response.message);\n            }\n\n            _context.next = 12;\n            break;\n\n          case 11:\n            setMessage(requiredField);\n\n          case 12:\n            if (msgRetornoSincronizacao != \"\") {\n              alert(msgRetornoSincronizacao);\n            }\n\n            callback();\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    style: {\n      width: 400,\n      marginVertical: 20,\n      marginTop: 20,\n      alignItems: 'center',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 4\n    }\n  }, React.createElement(ButtonP, {\n    title: props.title,\n    onPress: sendFormApp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  })), React.createElement(Message, {\n    message: message,\n    callback: function callback() {\n      return setMessage(undefined);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 4\n    }\n  }));\n}\nexport var send = function send(json, route, userId, createdForm) {\n  var response, stringJSON, persistForm, _stringJSON, _persistForm;\n\n  return _regeneratorRuntime.async(function send$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n\n          if (!(userId && json.idBoletim != '')) {\n            _context2.next = 20;\n            break;\n          }\n\n          json.userId = userId;\n          _context2.next = 5;\n          return _regeneratorRuntime.awrap(httpRequest(json, route));\n\n        case 5:\n          response = _context2.sent;\n\n          if (!(response.data && !createdForm)) {\n            _context2.next = 9;\n            break;\n          }\n\n          _context2.next = 9;\n          return _regeneratorRuntime.awrap(deleteFormByRoute(route));\n\n        case 9:\n          if (!(response.message == constants.timeoutMessage || response.message == constants.notConnectedMessage)) {\n            _context2.next = 16;\n            break;\n          }\n\n          _context2.next = 12;\n          return _regeneratorRuntime.awrap(JSON.stringify(json));\n\n        case 12:\n          stringJSON = _context2.sent;\n          _context2.next = 15;\n          return _regeneratorRuntime.awrap(newForm(stringJSON, route, createdForm));\n\n        case 15:\n          persistForm = _context2.sent;\n\n        case 16:\n          console.warn(response);\n          return _context2.abrupt(\"return\", response);\n\n        case 20:\n          _context2.next = 22;\n          return _regeneratorRuntime.awrap(JSON.stringify(json));\n\n        case 22:\n          _stringJSON = _context2.sent;\n          _context2.next = 25;\n          return _regeneratorRuntime.awrap(newForm(_stringJSON, route, createdForm));\n\n        case 25:\n          _persistForm = _context2.sent;\n          return _context2.abrupt(\"return\", {\n            data: _persistForm\n          });\n\n        case 27:\n          _context2.next = 33;\n          break;\n\n        case 29:\n          _context2.prev = 29;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n          return _context2.abrupt(\"return\", {\n            message: constants.errorMessage\n          });\n\n        case 33:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 29]], Promise);\n};\nexport var syncApp = function syncApp(userId) {\n  var totalForms, syncForms, dbForms;\n  return _regeneratorRuntime.async(function syncApp$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          totalForms = 0;\n          syncForms = 0;\n\n          if (!userId) {\n            _context4.next = 10;\n            break;\n          }\n\n          _context4.next = 6;\n          return _regeneratorRuntime.awrap(selectForms());\n\n        case 6:\n          dbForms = _context4.sent;\n          _context4.next = 9;\n          return _regeneratorRuntime.awrap(Promise.all(dbForms.map(function _callee(item) {\n            var jsonObject, response;\n            return _regeneratorRuntime.async(function _callee$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    _context3.next = 2;\n                    return _regeneratorRuntime.awrap(JSON.parse(item.stringJSON));\n\n                  case 2:\n                    jsonObject = _context3.sent;\n\n                    if (!(jsonObject.idBoletim != '')) {\n                      _context3.next = 9;\n                      break;\n                    }\n\n                    jsonObject.userId = userId;\n                    _context3.next = 7;\n                    return _regeneratorRuntime.awrap(httpRequest(jsonObject, item.route));\n\n                  case 7:\n                    response = _context3.sent;\n\n                    if (response.data) {\n                      deleteForm(item.id);\n                      syncForms += 1;\n                    }\n\n                  case 9:\n                    totalForms += 1;\n\n                  case 10:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          })));\n\n        case 9:\n          return _context4.abrupt(\"return\", {\n            message: syncForms + \" de \" + totalForms + \" formulários sincronizados\"\n          });\n\n        case 10:\n          _context4.next = 16;\n          break;\n\n        case 12:\n          _context4.prev = 12;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.log(_context4.t0);\n          return _context4.abrupt(\"return\", {\n            message: constants.syncErrorMessage\n          });\n\n        case 16:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[0, 12]], Promise);\n};\nexport var updateForms = function updateForms(route) {\n  var toReturn, forms;\n  return _regeneratorRuntime.async(function updateForms$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          toReturn = null;\n          _context5.next = 3;\n          return _regeneratorRuntime.awrap(getFormByRoute(route));\n\n        case 3:\n          forms = _context5.sent;\n\n          if (forms.length > 0) {\n            toReturn = JSON.parse(forms[0].stringJSON);\n          }\n\n          return _context5.abrupt(\"return\", toReturn);\n\n        case 6:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var syncFormUsers = function syncFormUsers() {\n  var idLastUserApi, requestJSON, response;\n  return _regeneratorRuntime.async(function syncFormUsers$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return _regeneratorRuntime.awrap(selectLastFormUser());\n\n        case 2:\n          idLastUserApi = _context7.sent;\n          requestJSON = {\n            idLastUserApi: idLastUserApi\n          };\n          _context7.prev = 4;\n          _context7.next = 7;\n          return _regeneratorRuntime.awrap(httpRequest(requestJSON, constants.routes.consultaUsuarios));\n\n        case 7:\n          response = _context7.sent;\n\n          if (!response.data) {\n            _context7.next = 11;\n            break;\n          }\n\n          _context7.next = 11;\n          return _regeneratorRuntime.awrap(Promise.all(response.data.map(function _callee2(item) {\n            return _regeneratorRuntime.async(function _callee2$(_context6) {\n              while (1) {\n                switch (_context6.prev = _context6.next) {\n                  case 0:\n                    _context6.next = 2;\n                    return _regeneratorRuntime.awrap(newFormUser(item.id, item.nome));\n\n                  case 2:\n                  case \"end\":\n                    return _context6.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          })));\n\n        case 11:\n          _context7.next = 17;\n          break;\n\n        case 13:\n          _context7.prev = 13;\n          _context7.t0 = _context7[\"catch\"](4);\n          console.log(_context7.t0);\n          return _context7.abrupt(\"return\", {\n            message: constants.syncErrorMessage\n          });\n\n        case 17:\n          return _context7.abrupt(\"return\", {});\n\n        case 18:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, null, null, [[4, 13]], Promise);\n};\nexport var queryFormUsers = function queryFormUsers(text) {\n  var toReturn, query;\n  return _regeneratorRuntime.async(function queryFormUsers$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          toReturn = [];\n          _context8.prev = 1;\n\n          if (!(text && text.length > 2)) {\n            _context8.next = 7;\n            break;\n          }\n\n          _context8.next = 5;\n          return _regeneratorRuntime.awrap(selectFormUsers(text));\n\n        case 5:\n          query = _context8.sent;\n          toReturn = query.slice(0, 5);\n\n        case 7:\n          _context8.next = 12;\n          break;\n\n        case 9:\n          _context8.prev = 9;\n          _context8.t0 = _context8[\"catch\"](1);\n          console.log(_context8.t0);\n\n        case 12:\n          return _context8.abrupt(\"return\", toReturn);\n\n        case 13:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, null, null, [[1, 9]], Promise);\n};\nexport var syncWeather = function syncWeather() {\n  var idLastWeatherApi, requestJSON, response;\n  return _regeneratorRuntime.async(function syncWeather$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return _regeneratorRuntime.awrap(selectLastWeather());\n\n        case 2:\n          idLastWeatherApi = _context10.sent;\n          requestJSON = {\n            idLastWeatherApi: idLastWeatherApi\n          };\n          _context10.prev = 4;\n          _context10.next = 7;\n          return _regeneratorRuntime.awrap(httpRequest(requestJSON, constants.routes.consultaTempo));\n\n        case 7:\n          response = _context10.sent;\n\n          if (!response.data) {\n            _context10.next = 11;\n            break;\n          }\n\n          _context10.next = 11;\n          return _regeneratorRuntime.awrap(Promise.all(response.data.map(function _callee3(item) {\n            return _regeneratorRuntime.async(function _callee3$(_context9) {\n              while (1) {\n                switch (_context9.prev = _context9.next) {\n                  case 0:\n                    _context9.next = 2;\n                    return _regeneratorRuntime.awrap(newWeather(item.id, item.nome));\n\n                  case 2:\n                  case \"end\":\n                    return _context9.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          })));\n\n        case 11:\n          _context10.next = 17;\n          break;\n\n        case 13:\n          _context10.prev = 13;\n          _context10.t0 = _context10[\"catch\"](4);\n          console.log(_context10.t0);\n          return _context10.abrupt(\"return\", {\n            message: constants.syncErrorMessage\n          });\n\n        case 17:\n          return _context10.abrupt(\"return\", {});\n\n        case 18:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, null, null, [[4, 13]], Promise);\n};\nexport var getWeather = function getWeather() {\n  var toReturn;\n  return _regeneratorRuntime.async(function getWeather$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          toReturn = [];\n          _context11.prev = 1;\n          _context11.next = 4;\n          return _regeneratorRuntime.awrap(selectWeather());\n\n        case 4:\n          toReturn = _context11.sent;\n          _context11.next = 10;\n          break;\n\n        case 7:\n          _context11.prev = 7;\n          _context11.t0 = _context11[\"catch\"](1);\n          console.log(_context11.t0);\n\n        case 10:\n          return _context11.abrupt(\"return\", toReturn);\n\n        case 11:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, null, null, [[1, 7]], Promise);\n};\nexport var syncRestrictionReason = function syncRestrictionReason() {\n  var idLastRestrictionReasonApi, requestJSON, response;\n  return _regeneratorRuntime.async(function syncRestrictionReason$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.next = 2;\n          return _regeneratorRuntime.awrap(selectLastRestrictionReason());\n\n        case 2:\n          idLastRestrictionReasonApi = _context13.sent;\n          requestJSON = {\n            idLastRestrictionReasonApi: idLastRestrictionReasonApi\n          };\n          _context13.prev = 4;\n          _context13.next = 7;\n          return _regeneratorRuntime.awrap(httpRequest(requestJSON, constants.routes.consultaMotivoRestricao));\n\n        case 7:\n          response = _context13.sent;\n\n          if (!response.data) {\n            _context13.next = 11;\n            break;\n          }\n\n          _context13.next = 11;\n          return _regeneratorRuntime.awrap(Promise.all(response.data.map(function _callee4(item) {\n            return _regeneratorRuntime.async(function _callee4$(_context12) {\n              while (1) {\n                switch (_context12.prev = _context12.next) {\n                  case 0:\n                    _context12.next = 2;\n                    return _regeneratorRuntime.awrap(newRestrictionReason(item.id, item.desc));\n\n                  case 2:\n                  case \"end\":\n                    return _context12.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          })));\n\n        case 11:\n          _context13.next = 17;\n          break;\n\n        case 13:\n          _context13.prev = 13;\n          _context13.t0 = _context13[\"catch\"](4);\n          console.log(_context13.t0);\n          return _context13.abrupt(\"return\", {\n            message: constants.syncErrorMessage\n          });\n\n        case 17:\n          return _context13.abrupt(\"return\", {});\n\n        case 18:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, null, null, [[4, 13]], Promise);\n};\nexport var getRestrictionReason = function getRestrictionReason() {\n  var toReturn;\n  return _regeneratorRuntime.async(function getRestrictionReason$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          toReturn = [];\n          _context14.prev = 1;\n          _context14.next = 4;\n          return _regeneratorRuntime.awrap(selectRestrictionReason());\n\n        case 4:\n          toReturn = _context14.sent;\n          _context14.next = 10;\n          break;\n\n        case 7:\n          _context14.prev = 7;\n          _context14.t0 = _context14[\"catch\"](1);\n          console.log(_context14.t0);\n\n        case 10:\n          return _context14.abrupt(\"return\", toReturn);\n\n        case 11:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, null, null, [[1, 7]], Promise);\n};","map":{"version":3,"sources":["C:/Repositorio/SgoApp/APP/businessLayer/forms.js"],"names":["React","useState","httpRequest","constants","newForm","deleteForm","selectForms","selectLastFormUser","newFormUser","selectFormUsers","getFormByRoute","deleteFormByRoute","selectLastWeather","newWeather","selectWeather","selectLastRestrictionReason","newRestrictionReason","selectRestrictionReason","UserContext","ButtonP","Message","SendForm","props","context","useContext","undefined","message","setMessage","sendFormApp","callback","requiredField","req","json","send","route","userId","createdForm","response","responseDataString","data","console","log","msgRetornoSincronizacao","timeoutMessage","notConnectedMessage","includes","alert","width","marginVertical","marginTop","alignItems","title","idBoletim","JSON","stringify","stringJSON","persistForm","warn","errorMessage","syncApp","totalForms","syncForms","dbForms","Promise","all","map","item","parse","jsonObject","id","syncErrorMessage","updateForms","toReturn","forms","length","syncFormUsers","idLastUserApi","requestJSON","routes","consultaUsuarios","nome","queryFormUsers","text","query","slice","syncWeather","idLastWeatherApi","consultaTempo","getWeather","syncRestrictionReason","idLastRestrictionReasonApi","consultaMotivoRestricao","desc","getRestrictionReason"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { View } from 'react-native';\r\nimport { httpRequest } from '../utils/apiUtils';\r\nimport * as constants from '../utils/constants';\r\nimport {\r\n\tnewForm,\r\n\tdeleteForm,\r\n\tselectForms,\r\n\tselectLastFormUser,\r\n\tnewFormUser,\r\n\tselectFormUsers,\r\n\tgetFormByRoute,\r\n\tdeleteFormByRoute,\r\n\tselectLastWeather,\r\n\tnewWeather,\r\n\tselectWeather,\r\n\tselectLastRestrictionReason,\r\n\tnewRestrictionReason,\r\n\tselectRestrictionReason\r\n} from '../db/forms';\r\nimport { UserContext } from './login';\r\nimport { ButtonP } from '../components/Button';\r\nimport { Message } from '../components/AnimatedMessage';\r\n\r\nexport function SendForm(props) {\r\n\tconst context = React.useContext(UserContext);\r\n\tconst [message, setMessage] = useState(undefined);\r\n\tconst sendFormApp = async (callback) => {\r\n\r\n\t\tconst requiredField = props.req(props.json);\r\n\r\n\t\tif (requiredField == \"\") {\r\n\t\t\tconst response = await send(props.json, props.route, context.userId, props.createdForm);\r\n\t\t\t//Mensagem retornada em string\r\n\t\t\tvar responseDataString = response.data;\r\n\t\t\tconsole.log(\"1:\" + responseDataString);\r\n\t\t\t//Mensagem padrão\r\n\t\t\tvar msgRetornoSincronizacao = \"Formulário salvo, porém, não sincronizado.\";\r\n\r\n\t\t\t//Caso obtenha sucesso na comunicação\r\n\t\t\tif (response.message == constants.timeoutMessage ||\r\n\t\t\t\tresponse.message == constants.notConnectedMessage ||\r\n\t\t\t\tresponse.data) {\r\n\t\t\t\t\tconsole.log(\"2:\" + responseDataString);\r\n\t\t\t\t\tconsole.log(typeof responseDataString.includes === \"undefined\");\r\n\r\n\t\t\t\t\tif(responseDataString != true && responseDataString != false){\r\n\t\t\t\t\t\tif (responseDataString.includes('sucesso')) {\r\n\t\t\t\t\t\t\tmsgRetornoSincronizacao = responseDataString + \" Boletim sincronizado com sucesso!\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\r\n\r\n\t\t\t\tprops.callback();\r\n\t\t\t} else {\r\n\r\n\t\t\r\n\t\t\t\t//Não houve sucesso ao sincronizar por conta de alguma crítica da API\r\n\t\t\t\tmsgRetornoSincronizacao = \"\";\r\n\t\t\t\tsetMessage(response.message);\r\n\r\n\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tsetMessage(requiredField);\r\n\t\t}\r\n\r\n\t\tif (msgRetornoSincronizacao != \"\") {\r\n\t\t\talert(msgRetornoSincronizacao);\r\n\t\t}\r\n\t\tcallback();\r\n\t}\r\n\r\n\treturn (\r\n\t\t<View>\r\n\t\t\t<View style={{ width: 400, marginVertical: 20, marginTop: 20, alignItems: 'center', width: '100%' }}>\r\n\t\t\t\t<ButtonP title={props.title} onPress={sendFormApp} />\r\n\t\t\t</View>\r\n\t\t\t<Message message={message} callback={() => setMessage(undefined)} />\r\n\t\t</View>\r\n\t);\r\n}\r\n\r\nexport const send = async (json, route, userId, createdForm) => {\r\n\ttry {\r\n\t\tif (userId && json.idBoletim != '') {\r\n\r\n\t\t\tjson.userId = userId;\r\n\t\t\tconst response = await httpRequest(json, route);\r\n\t\t\tif (response.data && !createdForm) {\r\n\t\t\t\tawait deleteFormByRoute(route);\r\n\r\n\t\t\t}\r\n\t\t\tif (response.message == constants.timeoutMessage ||\r\n\t\t\t\tresponse.message == constants.notConnectedMessage) {\r\n\t\t\t\tconst stringJSON = await JSON.stringify(json);\r\n\t\t\t\tconst persistForm = await newForm(stringJSON, route, createdForm);\r\n\t\t\t}\r\n\t\t\tconsole.warn(response);\r\n\t\t\treturn response;\r\n\t\t} else {\r\n\t\t\tconst stringJSON = await JSON.stringify(json);\r\n\t\t\tconst persistForm = await newForm(stringJSON, route, createdForm);\r\n\t\t\treturn { data: persistForm };\r\n\t\t}\r\n\t} catch (error) {\r\n\t\tconsole.log(error);\r\n\t\treturn { message: constants.errorMessage };\r\n\t}\r\n}\r\n\r\nexport const syncApp = async (userId) => {\r\n\ttry {\r\n\t\tlet totalForms = 0;\r\n\t\tlet syncForms = 0;\r\n\t\tif (userId) {\r\n\t\t\tconst dbForms = await selectForms();\r\n\t\t\tawait Promise.all(dbForms.map(async (item) => {\r\n\t\t\t\tconst jsonObject = await JSON.parse(item.stringJSON);\r\n\t\t\t\tif (jsonObject.idBoletim != '') {\r\n\t\t\t\t\tjsonObject.userId = userId;\r\n\t\t\t\t\tconst response = await httpRequest(jsonObject, item.route);\r\n\t\t\t\t\tif (response.data) {\r\n\t\t\t\t\t\tdeleteForm(item.id);\r\n\t\t\t\t\t\tsyncForms += 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\ttotalForms += 1;\r\n\t\t\t}));\r\n\t\t\treturn { message: syncForms + \" de \" + totalForms + \" formulários sincronizados\" }\r\n\r\n\t\t}\r\n\t} catch (error) {\r\n\t\tconsole.log(error);\r\n\t\treturn { message: constants.syncErrorMessage };\r\n\t}\r\n}\r\n\r\n\r\n\r\nexport const updateForms = async (route) => {\r\n\tlet toReturn = null;\r\n\r\n\tconst forms = await getFormByRoute(route);\r\n\tif (forms.length > 0) {\r\n\t\ttoReturn = JSON.parse(forms[0].stringJSON);\r\n\t}\r\n\r\n\treturn toReturn;\r\n}\r\n\r\nexport const syncFormUsers = async () => {\r\n\tconst idLastUserApi = await selectLastFormUser();\r\n\tconst requestJSON = {\r\n\t\tidLastUserApi: idLastUserApi\r\n\t}\r\n\ttry {\r\n\t\tconst response = await httpRequest(requestJSON, constants.routes.consultaUsuarios);\r\n\t\tif (response.data) {\r\n\t\t\tawait Promise.all(response.data.map(async (item) => {\r\n\t\t\t\tawait newFormUser(item.id, item.nome);\r\n\t\t\t}));\r\n\t\t}\r\n\t} catch (error) {\r\n\t\tconsole.log(error);\r\n\t\treturn { message: constants.syncErrorMessage };\r\n\t}\r\n\r\n\treturn {};\r\n}\r\n\r\nexport const queryFormUsers = async (text) => {\r\n\tlet toReturn = [];\r\n\ttry {\r\n\t\tif (text && text.length > 2) {\r\n\t\t\tconst query = await selectFormUsers(text);\r\n\t\t\ttoReturn = query.slice(0, 5);\r\n\t\t}\r\n\t} catch (error) {\r\n\t\tconsole.log(error);\r\n\t}\r\n\treturn toReturn;\r\n}\r\n\r\nexport const syncWeather = async () => {\r\n\tconst idLastWeatherApi = await selectLastWeather();\r\n\tconst requestJSON = {\r\n\t\tidLastWeatherApi: idLastWeatherApi\r\n\t}\r\n\r\n\ttry {\r\n\t\tconst response = await httpRequest(requestJSON, constants.routes.consultaTempo);\r\n\t\tif (response.data) {\r\n\t\t\tawait Promise.all(response.data.map(async (item) => {\r\n\t\t\t\tawait newWeather(item.id, item.nome);\r\n\t\t\t}));\r\n\t\t}\r\n\t} catch (error) {\r\n\t\tconsole.log(error);\r\n\t\treturn { message: constants.syncErrorMessage };\r\n\t}\r\n\r\n\treturn {};\r\n}\r\n\r\nexport const getWeather = async () => {\r\n\tlet toReturn = [];\r\n\ttry {\r\n\t\ttoReturn = await selectWeather();\r\n\t} catch (error) {\r\n\t\tconsole.log(error);\r\n\t}\r\n\treturn toReturn;\r\n}\r\n\r\nexport const syncRestrictionReason = async () => {\r\n\tconst idLastRestrictionReasonApi = await selectLastRestrictionReason();\r\n\tconst requestJSON = {\r\n\t\tidLastRestrictionReasonApi: idLastRestrictionReasonApi\r\n\t}\r\n\r\n\ttry {\r\n\t\tconst response = await httpRequest(requestJSON, constants.routes.consultaMotivoRestricao);\r\n\t\tif (response.data) {\r\n\t\t\tawait Promise.all(response.data.map(async (item) => {\r\n\t\t\t\tawait newRestrictionReason(item.id, item.desc);\r\n\t\t\t}));\r\n\t\t}\r\n\t} catch (error) {\r\n\t\tconsole.log(error);\r\n\t\treturn { message: constants.syncErrorMessage };\r\n\t}\r\n\r\n\treturn {};\r\n}\r\n\r\nexport const getRestrictionReason = async () => {\r\n\tlet toReturn = [];\r\n\ttry {\r\n\t\ttoReturn = await selectRestrictionReason();\r\n\t} catch (error) {\r\n\t\tconsole.log(error);\r\n\t}\r\n\treturn toReturn;\r\n}"]},"metadata":{},"sourceType":"module"}