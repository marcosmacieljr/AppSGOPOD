{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/satya/Workspace/Callstack/react-navigation-stack/src/views/Header/Header.tsx\";\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport { MaskedViewIOS } from \"react-native-web/dist/index\";\nimport { ThemeContext, ThemeColors, withOrientation, SafeAreaView } from 'react-navigation';\nimport HeaderTitle from \"./HeaderTitle\";\nimport HeaderBackButton from \"./HeaderBackButton\";\nimport ModularHeaderBackButton from \"./ModularHeaderBackButton\";\nimport HeaderStyleInterpolator from \"./HeaderStyleInterpolator\";\nvar APPBAR_HEIGHT = Platform.select({\n  ios: 44,\n  android: 56,\n  default: 64\n});\nvar STATUSBAR_HEIGHT = Platform.select({\n  ios: 20,\n  default: 0\n});\nvar TITLE_OFFSET_CENTER_ALIGN = Platform.select({\n  ios: 70,\n  default: 56\n});\nvar TITLE_OFFSET_LEFT_ALIGN = Platform.select({\n  ios: 20,\n  android: 56,\n  default: 64\n});\n\nvar getTitleOffsets = function getTitleOffsets(layoutPreset, hasLeftComponent, hasRightComponent) {\n  if (layoutPreset === 'left') {\n    var style = {\n      left: TITLE_OFFSET_LEFT_ALIGN,\n      right: TITLE_OFFSET_LEFT_ALIGN\n    };\n\n    if (!hasLeftComponent) {\n      style.left = Platform.OS === 'web' ? 16 : 0;\n    }\n\n    if (!hasRightComponent) {\n      style.right = 0;\n    }\n\n    return style;\n  } else if (layoutPreset === 'center') {\n    var _style = {\n      left: TITLE_OFFSET_CENTER_ALIGN,\n      right: TITLE_OFFSET_CENTER_ALIGN\n    };\n\n    if (!hasLeftComponent && !hasRightComponent) {\n      _style.left = 0;\n      _style.right = 0;\n    }\n\n    return _style;\n  }\n\n  return undefined;\n};\n\nvar getAppBarHeight = function getAppBarHeight(isLandscape) {\n  if (Platform.OS === 'ios') {\n    if (isLandscape && !Platform.isPad) {\n      return 32;\n    } else {\n      return 44;\n    }\n  } else if (Platform.OS === 'android') {\n    return 56;\n  } else {\n    return 64;\n  }\n};\n\nvar Header = function (_React$PureComponent) {\n  _inherits(Header, _React$PureComponent);\n\n  function Header() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Header);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Header)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      widths: {}\n    };\n\n    _this.renderTitleComponent = function (props) {\n      var layoutPreset = _this.props.layoutPreset;\n      var options = props.scene.descriptor.options;\n      var headerTitle = options.headerTitle;\n\n      if (React.isValidElement(headerTitle)) {\n        return headerTitle;\n      }\n\n      var titleString = _this.getHeaderTitleString(props.scene);\n\n      var titleStyle = options.headerTitleStyle;\n      var color = options.headerTintColor;\n      var allowFontScaling = options.headerTitleAllowFontScaling;\n      var onLayout = layoutPreset === 'center' ? function (e) {\n        var width = e.nativeEvent.layout.width;\n\n        _this.setState(function (state) {\n          return {\n            widths: _objectSpread({}, state.widths, _defineProperty({}, props.scene.key, width))\n          };\n        });\n      } : undefined;\n      var render = headerTitle && typeof headerTitle !== 'string' ? headerTitle : function (props) {\n        return React.createElement(HeaderTitle, _extends({}, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227\n          }\n        }));\n      };\n      return render({\n        onLayout: onLayout,\n        allowFontScaling: Boolean(allowFontScaling),\n        style: [color ? {\n          color: color\n        } : null, layoutPreset === 'center' ? {\n          textAlign: 'center'\n        } : {\n          textAlign: 'left'\n        }, titleStyle],\n        children: titleString\n      });\n    };\n\n    _this.renderLeftComponent = function (props) {\n      var options = props.scene.descriptor.options;\n\n      if (React.isValidElement(options.headerLeft) || options.headerLeft === null) {\n        return options.headerLeft;\n      }\n\n      if (!options.headerLeft && props.scene.index === 0) {\n        return;\n      }\n\n      var backButtonTitle = _this.getBackButtonTitleString(props.scene);\n\n      var truncatedBackButtonTitle = _this.getTruncatedBackButtonTitle(props.scene);\n\n      var width = _this.state.widths[props.scene.key] ? (_this.props.layout.initWidth - _this.state.widths[props.scene.key]) / 2 : undefined;\n      var RenderedLeftComponent = options.headerLeft || HeaderBackButton;\n\n      var goBack = function goBack() {\n        requestAnimationFrame(function () {\n          props.scene.descriptor.navigation.goBack(props.scene.descriptor.key);\n        });\n      };\n\n      return React.createElement(RenderedLeftComponent, {\n        onPress: goBack,\n        pressColorAndroid: options.headerPressColorAndroid,\n        tintColor: options.headerTintColor,\n        backImage: options.headerBackImage,\n        title: backButtonTitle,\n        truncatedTitle: truncatedBackButtonTitle,\n        backTitleVisible: _this.props.backTitleVisible,\n        allowFontScaling: options.headerBackAllowFontScaling,\n        titleStyle: options.headerBackTitleStyle,\n        layoutPreset: _this.props.layoutPreset,\n        width: width,\n        scene: props.scene,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        }\n      });\n    };\n\n    _this.renderModularLeftComponent = function (props, ButtonContainerComponent, LabelContainerComponent) {\n      var _props$scene$descript = props.scene.descriptor,\n          options = _props$scene$descript.options,\n          navigation = _props$scene$descript.navigation;\n\n      var backButtonTitle = _this.getBackButtonTitleString(props.scene);\n\n      var truncatedBackButtonTitle = _this.getTruncatedBackButtonTitle(props.scene);\n\n      var width = _this.state.widths[props.scene.key] ? (_this.props.layout.initWidth - _this.state.widths[props.scene.key]) / 2 : undefined;\n\n      var goBack = function goBack() {\n        requestAnimationFrame(function () {\n          navigation.goBack(props.scene.descriptor.key);\n        });\n      };\n\n      return React.createElement(ModularHeaderBackButton, {\n        onPress: goBack,\n        ButtonContainerComponent: ButtonContainerComponent,\n        LabelContainerComponent: LabelContainerComponent,\n        backTitleVisible: _this.props.backTitleVisible,\n        pressColorAndroid: options.headerPressColorAndroid,\n        tintColor: options.headerTintColor,\n        backImage: options.headerBackImage,\n        title: backButtonTitle,\n        truncatedTitle: truncatedBackButtonTitle,\n        titleStyle: options.headerBackTitleStyle,\n        layoutPreset: _this.props.layoutPreset,\n        width: width,\n        scene: props.scene,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        }\n      });\n    };\n\n    _this.renderRightComponent = function (props) {\n      var headerRight = props.scene.descriptor.options.headerRight;\n\n      if (typeof headerRight === 'function') {\n        return headerRight();\n      }\n\n      return headerRight || null;\n    };\n\n    _this.renderLeft = function (props) {\n      var options = props.scene.descriptor.options;\n      var transitionPreset = _this.props.transitionPreset;\n      var style = props.style;\n\n      if (options.headerLeftContainerStyle) {\n        style = [style, options.headerLeftContainerStyle];\n      }\n\n      if (transitionPreset !== 'uikit' || options.headerBackImage || options.headerLeft || options.headerLeft === null) {\n        return _this.renderSubView(_objectSpread({}, props, {\n          style: style\n        }), 'left', _this.renderLeftComponent, _this.props.leftInterpolator);\n      } else {\n        return _this.renderModularSubView(_objectSpread({}, props, {\n          style: style\n        }), 'left', _this.renderModularLeftComponent, _this.props.leftLabelInterpolator, _this.props.leftButtonInterpolator);\n      }\n    };\n\n    _this.renderTitle = function (props, options) {\n      var _this$props = _this.props,\n          layoutPreset = _this$props.layoutPreset,\n          transitionPreset = _this$props.transitionPreset;\n      var style = [{\n        justifyContent: layoutPreset === 'center' ? 'center' : 'flex-start'\n      }, getTitleOffsets(layoutPreset, options.hasLeftComponent, options.hasRightComponent), options.headerTitleContainerStyle];\n      return _this.renderSubView(_objectSpread({}, props, {\n        style: style\n      }), 'title', _this.renderTitleComponent, transitionPreset === 'uikit' ? _this.props.titleFromLeftInterpolator : _this.props.titleInterpolator);\n    };\n\n    _this.renderRight = function (props) {\n      var options = props.scene.descriptor.options;\n      var style = props.style;\n\n      if (options.headerRightContainerStyle) {\n        style = [style, options.headerRightContainerStyle];\n      }\n\n      return _this.renderSubView(_objectSpread({}, props, {\n        style: style\n      }), 'right', _this.renderRightComponent, _this.props.rightInterpolator);\n    };\n\n    _this.renderBackground = function (props) {\n      var _props$scene = props.scene,\n          index = _props$scene.index,\n          options = _props$scene.descriptor.options;\n      var offset = _this.props.navigation.state.index - index;\n\n      if (Math.abs(offset) > 2) {\n        return null;\n      }\n\n      return _this.renderSubView(_objectSpread({}, props, {\n        style: StyleSheet.absoluteFill\n      }), 'background', function () {\n        return typeof options.headerBackground === 'function' ? options.headerBackground() : options.headerBackground;\n      }, _this.props.backgroundInterpolator);\n    };\n\n    _this.renderModularSubView = function (props, name, renderer, labelStyleInterpolator, buttonStyleInterpolator) {\n      var scene = props.scene;\n      var index = scene.index,\n          isStale = scene.isStale,\n          key = scene.key;\n\n      if (index === 0) {\n        return;\n      }\n\n      var offset = _this.props.navigation.state.index - index;\n\n      if (Math.abs(offset) > 2) {\n        return null;\n      }\n\n      var ButtonContainer = function ButtonContainer(_ref) {\n        var children = _ref.children;\n        return React.createElement(Animated.View, {\n          style: [buttonStyleInterpolator(_objectSpread({}, _this.props, props))],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 483\n          }\n        }, children);\n      };\n\n      var LabelContainer = function LabelContainer(_ref2) {\n        var children = _ref2.children;\n        return React.createElement(Animated.View, {\n          style: [labelStyleInterpolator(_objectSpread({}, _this.props, props))],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 491\n          }\n        }, children);\n      };\n\n      var subView = renderer(props, ButtonContainer, LabelContainer);\n\n      if (subView === null) {\n        return subView;\n      }\n\n      var pointerEvents = offset !== 0 || isStale ? 'none' : 'box-none';\n      return React.createElement(View, {\n        key: name + \"_\" + key,\n        pointerEvents: pointerEvents,\n        style: [styles.item, styles[name], props.style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511\n        }\n      }, subView);\n    };\n\n    _this.renderSubView = function (props, name, renderer, styleInterpolator) {\n      var scene = props.scene;\n      var index = scene.index,\n          isStale = scene.isStale,\n          key = scene.key;\n      var offset = _this.props.navigation.state.index - index;\n\n      if (Math.abs(offset) > 2) {\n        return null;\n      }\n\n      var subView = renderer(props);\n\n      if (subView == null) {\n        return null;\n      }\n\n      var pointerEvents = offset !== 0 || isStale ? 'none' : 'box-none';\n      return React.createElement(Animated.View, {\n        pointerEvents: pointerEvents,\n        key: name + \"_\" + key,\n        style: [styles.item, styles[name], props.style, styleInterpolator && styleInterpolator(_objectSpread({}, _this.props, props))],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547\n        }\n      }, subView);\n    };\n\n    _this.renderHeader = function (props) {\n      var options = props.scene.descriptor.options;\n\n      if (options.header === null || options.headerShown === false) {\n        return null;\n      }\n\n      var left = _this.renderLeft(props);\n\n      var right = _this.renderRight(props);\n\n      var title = _this.renderTitle(props, {\n        hasLeftComponent: !!left,\n        hasRightComponent: !!right,\n        headerTitleContainerStyle: options.headerTitleContainerStyle\n      });\n\n      var transitionPreset = _this.props.transitionPreset;\n      var wrapperProps = {\n        style: styles.header,\n        key: \"scene_\" + props.scene.key\n      };\n\n      if (options.headerLeft || options.headerBackImage || Platform.OS !== 'ios' || transitionPreset !== 'uikit') {\n        return React.createElement(View, _extends({}, wrapperProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 593\n          }\n        }), title, left, right);\n      } else {\n        return React.createElement(MaskedViewIOS, _extends({}, wrapperProps, {\n          maskElement: React.createElement(View, {\n            style: styles.iconMaskContainer,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 604\n            }\n          }, React.createElement(Image, {\n            source: require(\"../assets/back-icon-mask.png\"),\n            style: styles.iconMask,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 605\n            }\n          }), React.createElement(View, {\n            style: styles.iconMaskFillerRect,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 609\n            }\n          })),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 601\n          }\n        }), title, left, right);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Header, [{\n    key: \"getHeaderTitleString\",\n    value: function getHeaderTitleString(scene) {\n      var options = scene.descriptor.options;\n\n      if (typeof options.headerTitle === 'string') {\n        return options.headerTitle;\n      }\n\n      if (options.title && typeof options.title !== 'string' && __DEV__) {\n        throw new Error(\"Invalid title for route \\\"\" + scene.route.routeName + \"\\\" - title must be string or null, instead it was of type \" + typeof options.title);\n      }\n\n      return options.title;\n    }\n  }, {\n    key: \"getLastScene\",\n    value: function getLastScene(scene) {\n      return this.props.scenes.find(function (s) {\n        return s.index === scene.index - 1;\n      });\n    }\n  }, {\n    key: \"getBackButtonTitleString\",\n    value: function getBackButtonTitleString(scene) {\n      var lastScene = this.getLastScene(scene);\n\n      if (!lastScene) {\n        return null;\n      }\n\n      var headerBackTitle = lastScene.descriptor.options.headerBackTitle;\n\n      if (headerBackTitle || headerBackTitle === null) {\n        return headerBackTitle;\n      }\n\n      return this.getHeaderTitleString(lastScene);\n    }\n  }, {\n    key: \"getTruncatedBackButtonTitle\",\n    value: function getTruncatedBackButtonTitle(scene) {\n      var lastScene = this.getLastScene(scene);\n\n      if (!lastScene) {\n        return null;\n      }\n\n      return lastScene.descriptor.options.headerTruncatedBackTitle;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var appBar;\n      var background;\n      var _this$props2 = this.props,\n          mode = _this$props2.mode,\n          scene = _this$props2.scene,\n          isLandscape = _this$props2.isLandscape;\n\n      if (mode === 'float') {\n        var scenesByIndex = {};\n        this.props.scenes.forEach(function (scene) {\n          scenesByIndex[scene.index] = scene;\n        });\n        var scenesProps = Object.values(scenesByIndex).map(function (scene) {\n          return {\n            position: _this2.props.position,\n            scene: scene\n          };\n        });\n        appBar = scenesProps.map(function (props) {\n          return _this2.renderHeader(props);\n        });\n        background = scenesProps.map(function (props) {\n          return _this2.renderBackground(props);\n        });\n      } else {\n        var headerProps = {\n          position: new Animated.Value(this.props.scene.index),\n          scene: this.props.scene\n        };\n        appBar = this.renderHeader(headerProps);\n        background = this.renderBackground(headerProps);\n      }\n\n      var options = scene.descriptor.options;\n      var _options$headerStyle = options.headerStyle,\n          headerStyle = _options$headerStyle === void 0 ? {} : _options$headerStyle;\n      var headerStyleObj = StyleSheet.flatten(headerStyle);\n      var appBarHeight = getAppBarHeight(isLandscape);\n\n      var alignItems = headerStyleObj.alignItems,\n          justifyContent = headerStyleObj.justifyContent,\n          flex = headerStyleObj.flex,\n          flexDirection = headerStyleObj.flexDirection,\n          flexGrow = headerStyleObj.flexGrow,\n          flexShrink = headerStyleObj.flexShrink,\n          flexBasis = headerStyleObj.flexBasis,\n          flexWrap = headerStyleObj.flexWrap,\n          position = headerStyleObj.position,\n          padding = headerStyleObj.padding,\n          paddingHorizontal = headerStyleObj.paddingHorizontal,\n          paddingRight = headerStyleObj.paddingRight,\n          paddingLeft = headerStyleObj.paddingLeft,\n          top = headerStyleObj.top,\n          right = headerStyleObj.right,\n          bottom = headerStyleObj.bottom,\n          left = headerStyleObj.left,\n          safeHeaderStyle = _objectWithoutProperties(headerStyleObj, [\"alignItems\", \"justifyContent\", \"flex\", \"flexDirection\", \"flexGrow\", \"flexShrink\", \"flexBasis\", \"flexWrap\", \"position\", \"padding\", \"paddingHorizontal\", \"paddingRight\", \"paddingLeft\", \"top\", \"right\", \"bottom\", \"left\"]);\n\n      if (__DEV__) {\n        warnIfHeaderStyleDefined(alignItems, 'alignItems');\n        warnIfHeaderStyleDefined(justifyContent, 'justifyContent');\n        warnIfHeaderStyleDefined(flex, 'flex');\n        warnIfHeaderStyleDefined(flexDirection, 'flexDirection');\n        warnIfHeaderStyleDefined(flexGrow, 'flexGrow');\n        warnIfHeaderStyleDefined(flexShrink, 'flexShrink');\n        warnIfHeaderStyleDefined(flexBasis, 'flexBasis');\n        warnIfHeaderStyleDefined(flexWrap, 'flexWrap');\n        warnIfHeaderStyleDefined(padding, 'padding');\n        warnIfHeaderStyleDefined(position, 'position');\n        warnIfHeaderStyleDefined(paddingHorizontal, 'paddingHorizontal');\n        warnIfHeaderStyleDefined(paddingRight, 'paddingRight');\n        warnIfHeaderStyleDefined(paddingLeft, 'paddingLeft');\n        warnIfHeaderStyleDefined(top, 'top');\n        warnIfHeaderStyleDefined(right, 'right');\n        warnIfHeaderStyleDefined(bottom, 'bottom');\n        warnIfHeaderStyleDefined(left, 'left');\n      }\n\n      var isDark = this.context === 'dark';\n      var containerStyles = [options.headerTransparent ? isDark ? styles.transparentContainerDark : styles.transparentContainerLight : isDark ? styles.containerDark : styles.containerLight, {\n        height: appBarHeight\n      }, safeHeaderStyle];\n      var headerForceInset = options.headerForceInset;\n      var forceInset = headerForceInset || {\n        top: 'always',\n        bottom: 'never',\n        horizontal: 'always'\n      };\n      var backgroundColor = safeHeaderStyle.backgroundColor;\n\n      if (!backgroundColor) {\n        backgroundColor = isDark ? ThemeColors.dark.header : ThemeColors.light.header;\n      }\n\n      return React.createElement(Animated.View, {\n        style: [this.props.layoutInterpolator(this.props), Platform.OS === 'ios' && !options.headerTransparent ? {\n          backgroundColor: backgroundColor\n        } : null],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 730\n        }\n      }, React.createElement(SafeAreaView, {\n        forceInset: forceInset,\n        style: containerStyles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 738\n        }\n      }, background, React.createElement(View, {\n        style: styles.flexOne,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 740\n        }\n      }, appBar)));\n    }\n  }]);\n\n  return Header;\n}(React.PureComponent);\n\nHeader.contextType = ThemeContext;\nHeader.defaultProps = {\n  layoutInterpolator: HeaderStyleInterpolator.forLayout,\n  leftInterpolator: HeaderStyleInterpolator.forLeft,\n  leftButtonInterpolator: HeaderStyleInterpolator.forLeftButton,\n  leftLabelInterpolator: HeaderStyleInterpolator.forLeftLabel,\n  titleFromLeftInterpolator: HeaderStyleInterpolator.forCenterFromLeft,\n  titleInterpolator: HeaderStyleInterpolator.forCenter,\n  rightInterpolator: HeaderStyleInterpolator.forRight,\n  backgroundInterpolator: HeaderStyleInterpolator.forBackground\n};\n\nfunction warnIfHeaderStyleDefined(value, styleProp) {\n  if (styleProp === 'position' && value === 'absolute') {\n    console.warn(\"position: 'absolute' is not supported on headerStyle. If you would like to render content under the header, use the headerTransparent navigationOption.\");\n  } else if (value !== undefined) {\n    console.warn(styleProp + \" was given a value of \" + value + \", this has no effect on headerStyle.\");\n  }\n}\n\nvar platformContainerStylesLight = Platform.select({\n  android: {\n    elevation: 4\n  },\n  web: {\n    boxShadow: \"0 2px 4px -1px rgba(0,0,0,0.2), 0 4px 5px 0 rgba(0,0,0,0.14), 0 1px 10px 0 rgba(0,0,0,0.12)\"\n  },\n  default: {\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderBottomColor: ThemeColors.light.headerBorder\n  }\n});\nvar platformContainerStylesDark = Platform.select({\n  android: {\n    elevation: 4\n  },\n  web: {\n    boxShadow: \"0 2px 4px -1px rgba(0,0,0,0.2), 0 4px 5px 0 rgba(0,0,0,0.14), 0 1px 10px 0 rgba(0,0,0,0.12)\"\n  },\n  default: {\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderBottomColor: ThemeColors.dark.headerBorder\n  }\n});\nvar styles = StyleSheet.create({\n  containerLight: _objectSpread({}, platformContainerStylesLight, {\n    backgroundColor: ThemeColors.light.header\n  }),\n  containerDark: _objectSpread({}, platformContainerStylesDark, {\n    backgroundColor: ThemeColors.dark.header\n  }),\n  transparentContainerLight: _objectSpread({}, platformContainerStylesLight, {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    borderBottomWidth: 0,\n    borderBottomColor: 'transparent',\n    elevation: 0\n  }),\n  transparentContainerDark: _objectSpread({}, platformContainerStylesDark, {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    borderBottomWidth: 0,\n    borderBottomColor: 'transparent',\n    elevation: 0\n  }),\n  header: _objectSpread({}, StyleSheet.absoluteFillObject, {\n    flexDirection: 'row'\n  }),\n  item: {\n    backgroundColor: 'transparent'\n  },\n  iconMaskContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  iconMaskFillerRect: {\n    flex: 1,\n    backgroundColor: '#d8d8d8',\n    marginLeft: -5\n  },\n  iconMask: {\n    height: 23,\n    width: 14.5,\n    marginLeft: 8.5,\n    marginTop: -2.5,\n    alignSelf: 'center',\n    resizeMode: 'contain',\n    transform: [{\n      scaleX: I18nManager.isRTL ? -1 : 1\n    }]\n  },\n  background: {},\n  title: {\n    bottom: 0,\n    top: 0,\n    position: 'absolute',\n    alignItems: 'center',\n    flexDirection: 'row'\n  },\n  left: {\n    left: 0,\n    bottom: 0,\n    top: 0,\n    position: 'absolute',\n    alignItems: 'center',\n    flexDirection: 'row'\n  },\n  right: {\n    right: 0,\n    bottom: 0,\n    top: 0,\n    position: 'absolute',\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  flexOne: {\n    flex: 1\n  }\n});\nexport default _extends(withOrientation(Header), {\n  get HEIGHT() {\n    return APPBAR_HEIGHT + STATUSBAR_HEIGHT;\n  }\n\n});","map":{"version":3,"mappings":"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","names":["React","MaskedViewIOS","ThemeContext","ThemeColors","withOrientation","SafeAreaView","HeaderTitle","HeaderBackButton","ModularHeaderBackButton","HeaderStyleInterpolator","APPBAR_HEIGHT","Platform","select","ios","android","default","STATUSBAR_HEIGHT","TITLE_OFFSET_CENTER_ALIGN","TITLE_OFFSET_LEFT_ALIGN","getTitleOffsets","layoutPreset","hasLeftComponent","hasRightComponent","style","left","right","OS","undefined","getAppBarHeight","isLandscape","isPad","Header","state","widths","renderTitleComponent","props","_this","options","scene","descriptor","headerTitle","isValidElement","titleString","getHeaderTitleString","titleStyle","headerTitleStyle","color","headerTintColor","allowFontScaling","headerTitleAllowFontScaling","onLayout","e","width","nativeEvent","layout","setState","key","render","__source","fileName","lineNumber","Boolean","textAlign","children","renderLeftComponent","headerLeft","index","backButtonTitle","getBackButtonTitleString","truncatedBackButtonTitle","getTruncatedBackButtonTitle","initWidth","RenderedLeftComponent","goBack","requestAnimationFrame","navigation","onPress","pressColorAndroid","headerPressColorAndroid","tintColor","backImage","headerBackImage","title","truncatedTitle","backTitleVisible","headerBackAllowFontScaling","headerBackTitleStyle","renderModularLeftComponent","ButtonContainerComponent","LabelContainerComponent","renderRightComponent","headerRight","renderLeft","transitionPreset","headerLeftContainerStyle","renderSubView","leftInterpolator","renderModularSubView","leftLabelInterpolator","leftButtonInterpolator","renderTitle","justifyContent","headerTitleContainerStyle","titleFromLeftInterpolator","titleInterpolator","renderRight","headerRightContainerStyle","rightInterpolator","renderBackground","offset","Math","abs","StyleSheet","absoluteFill","headerBackground","backgroundInterpolator","name","renderer","labelStyleInterpolator","buttonStyleInterpolator","isStale","ButtonContainer","Animated","View","LabelContainer","subView","pointerEvents","styles","item","styleInterpolator","renderHeader","header","headerShown","wrapperProps","maskElement","iconMaskContainer","Image","source","require","iconMask","iconMaskFillerRect","__DEV__","Error","route","routeName","scenes","find","s","lastScene","getLastScene","headerBackTitle","headerTruncatedBackTitle","appBar","background","mode","scenesByIndex","forEach","scenesProps","Object","values","map","position","_this2","headerProps","Value","headerStyle","headerStyleObj","flatten","appBarHeight","alignItems","flex","flexDirection","flexGrow","flexShrink","flexBasis","flexWrap","padding","paddingHorizontal","paddingRight","paddingLeft","top","bottom","safeHeaderStyle","warnIfHeaderStyleDefined","isDark","context","containerStyles","headerTransparent","transparentContainerDark","transparentContainerLight","containerDark","containerLight","height","headerForceInset","forceInset","horizontal","backgroundColor","dark","light","layoutInterpolator","flexOne","PureComponent","contextType","defaultProps","forLayout","forLeft","forLeftButton","forLeftLabel","forCenterFromLeft","forCenter","forRight","forBackground","value","styleProp","console","warn","platformContainerStylesLight","elevation","web","boxShadow","borderBottomWidth","hairlineWidth","borderBottomColor","headerBorder","platformContainerStylesDark","create","absoluteFillObject","marginLeft","marginTop","alignSelf","resizeMode","transform","scaleX","I18nManager","isRTL","_extends","HEIGHT"],"sources":["Header.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {\n  Animated,\n  Image,\n  Platform,\n  StyleSheet,\n  View,\n  I18nManager,\n  MaskedViewIOS,\n  ViewStyle,\n  LayoutChangeEvent,\n  StyleProp,\n  TextProps,\n} from 'react-native';\n\nimport {\n  ThemeContext,\n  ThemeColors,\n  withOrientation,\n  SafeAreaView,\n} from 'react-navigation';\n\nimport HeaderTitle from './HeaderTitle';\nimport HeaderBackButton from './HeaderBackButton';\nimport ModularHeaderBackButton from './ModularHeaderBackButton';\nimport HeaderStyleInterpolator from './HeaderStyleInterpolator';\nimport {\n  Scene,\n  HeaderLayoutPreset,\n  SceneInterpolatorProps,\n  HeaderProps,\n  HeaderBackButtonProps,\n} from '../../types';\n\ntype Props = HeaderProps & {\n  leftLabelInterpolator: (props: SceneInterpolatorProps) => any;\n  leftButtonInterpolator: (props: SceneInterpolatorProps) => any;\n  titleFromLeftInterpolator: (props: SceneInterpolatorProps) => any;\n  layoutInterpolator: (props: SceneInterpolatorProps) => any;\n  theme: string;\n};\n\ntype SubviewProps = {\n  position: Animated.AnimatedInterpolation;\n  scene: Scene;\n  style?: StyleProp<ViewStyle>;\n};\n\ntype SubviewName = 'left' | 'right' | 'title' | 'background';\n\ntype State = {\n  widths: { [key: string]: number };\n};\n\nconst APPBAR_HEIGHT = Platform.select({\n  ios: 44,\n  android: 56,\n  default: 64,\n});\nconst STATUSBAR_HEIGHT = Platform.select({\n  ios: 20,\n  default: 0,\n});\n\n// These can be adjusted by using headerTitleContainerStyle on navigationOptions\nconst TITLE_OFFSET_CENTER_ALIGN = Platform.select({\n  ios: 70,\n  default: 56,\n});\n\nconst TITLE_OFFSET_LEFT_ALIGN = Platform.select({\n  ios: 20,\n  android: 56,\n  default: 64,\n});\n\nconst getTitleOffsets = (\n  layoutPreset: HeaderLayoutPreset,\n  hasLeftComponent: boolean,\n  hasRightComponent: boolean\n): ViewStyle | undefined => {\n  if (layoutPreset === 'left') {\n    // Maybe at some point we should do something different if the back title is\n    // explicitly enabled, for now people can control it manually\n\n    let style = {\n      left: TITLE_OFFSET_LEFT_ALIGN,\n      right: TITLE_OFFSET_LEFT_ALIGN,\n    };\n\n    if (!hasLeftComponent) {\n      style.left = Platform.OS === 'web' ? 16 : 0;\n    }\n    if (!hasRightComponent) {\n      style.right = 0;\n    }\n\n    return style;\n  } else if (layoutPreset === 'center') {\n    let style = {\n      left: TITLE_OFFSET_CENTER_ALIGN,\n      right: TITLE_OFFSET_CENTER_ALIGN,\n    };\n    if (!hasLeftComponent && !hasRightComponent) {\n      style.left = 0;\n      style.right = 0;\n    }\n\n    return style;\n  }\n\n  return undefined;\n};\n\nconst getAppBarHeight = (isLandscape: boolean) => {\n  if (Platform.OS === 'ios') {\n    // @ts-ignore\n    if (isLandscape && !Platform.isPad) {\n      return 32;\n    } else {\n      return 44;\n    }\n  } else if (Platform.OS === 'android') {\n    return 56;\n  } else {\n    return 64;\n  }\n};\n\nclass Header extends React.PureComponent<Props, State> {\n  static contextType = ThemeContext;\n\n  context!: React.ContextType<typeof ThemeContext>;\n\n  static defaultProps = {\n    layoutInterpolator: HeaderStyleInterpolator.forLayout,\n    leftInterpolator: HeaderStyleInterpolator.forLeft,\n    leftButtonInterpolator: HeaderStyleInterpolator.forLeftButton,\n    leftLabelInterpolator: HeaderStyleInterpolator.forLeftLabel,\n    titleFromLeftInterpolator: HeaderStyleInterpolator.forCenterFromLeft,\n    titleInterpolator: HeaderStyleInterpolator.forCenter,\n    rightInterpolator: HeaderStyleInterpolator.forRight,\n    backgroundInterpolator: HeaderStyleInterpolator.forBackground,\n  };\n\n  state: State = {\n    widths: {},\n  };\n\n  private getHeaderTitleString(scene: Scene) {\n    const options = scene.descriptor.options;\n    if (typeof options.headerTitle === 'string') {\n      return options.headerTitle;\n    }\n\n    if (options.title && typeof options.title !== 'string' && __DEV__) {\n      throw new Error(\n        `Invalid title for route \"${\n          scene.route.routeName\n        }\" - title must be string or null, instead it was of type ${typeof options.title}`\n      );\n    }\n\n    return options.title;\n  }\n\n  private getLastScene(scene: Scene) {\n    return this.props.scenes.find(s => s.index === scene.index - 1);\n  }\n\n  private getBackButtonTitleString(scene: Scene) {\n    const lastScene = this.getLastScene(scene);\n    if (!lastScene) {\n      return null;\n    }\n    const { headerBackTitle } = lastScene.descriptor.options;\n    if (headerBackTitle || headerBackTitle === null) {\n      return headerBackTitle;\n    }\n    return this.getHeaderTitleString(lastScene);\n  }\n\n  private getTruncatedBackButtonTitle(scene: Scene) {\n    const lastScene = this.getLastScene(scene);\n    if (!lastScene) {\n      return null;\n    }\n    return lastScene.descriptor.options.headerTruncatedBackTitle;\n  }\n\n  private renderTitleComponent = (props: SubviewProps) => {\n    const { layoutPreset } = this.props;\n    const { options } = props.scene.descriptor;\n    const headerTitle = options.headerTitle;\n    if (React.isValidElement(headerTitle)) {\n      return headerTitle;\n    }\n    const titleString = this.getHeaderTitleString(props.scene);\n\n    const titleStyle = options.headerTitleStyle;\n    const color = options.headerTintColor;\n    const allowFontScaling = options.headerTitleAllowFontScaling;\n\n    // When title is centered, the width of left/right components depends on the\n    // calculated size of the title.\n    const onLayout =\n      layoutPreset === 'center'\n        ? (e: LayoutChangeEvent) => {\n            const { width } = e.nativeEvent.layout;\n\n            this.setState(state => ({\n              widths: {\n                ...state.widths,\n                [props.scene.key]: width,\n              },\n            }));\n          }\n        : undefined;\n\n    const render =\n      headerTitle && typeof headerTitle !== 'string'\n        ? (headerTitle as (\n            props: TextProps & { children?: string }\n          ) => React.ReactNode)\n        : (props: TextProps & { children?: string }) => (\n            <HeaderTitle {...props} />\n          );\n\n    return render({\n      onLayout,\n      allowFontScaling: Boolean(allowFontScaling),\n      style: [\n        color ? { color } : null,\n        layoutPreset === 'center'\n          ? { textAlign: 'center' }\n          : { textAlign: 'left' },\n        titleStyle,\n      ],\n      children: titleString,\n    });\n  };\n\n  private renderLeftComponent = (props: SubviewProps) => {\n    const { options } = props.scene.descriptor;\n    if (\n      React.isValidElement(options.headerLeft) ||\n      options.headerLeft === null\n    ) {\n      return options.headerLeft;\n    }\n\n    if (!options.headerLeft && props.scene.index === 0) {\n      return;\n    }\n\n    const backButtonTitle = this.getBackButtonTitleString(props.scene);\n    const truncatedBackButtonTitle = this.getTruncatedBackButtonTitle(\n      props.scene\n    );\n    const width = this.state.widths[props.scene.key]\n      ? (this.props.layout.initWidth - this.state.widths[props.scene.key]) / 2\n      : undefined;\n    const RenderedLeftComponent =\n      (options.headerLeft as React.FunctionComponent<HeaderBackButtonProps>) ||\n      HeaderBackButton;\n    const goBack = () => {\n      // Go back on next tick because button ripple effect needs to happen on Android\n      requestAnimationFrame(() => {\n        props.scene.descriptor.navigation.goBack(props.scene.descriptor.key);\n      });\n    };\n\n    return (\n      <RenderedLeftComponent\n        onPress={goBack}\n        pressColorAndroid={options.headerPressColorAndroid}\n        tintColor={options.headerTintColor}\n        backImage={options.headerBackImage}\n        title={backButtonTitle}\n        truncatedTitle={truncatedBackButtonTitle}\n        backTitleVisible={this.props.backTitleVisible}\n        allowFontScaling={options.headerBackAllowFontScaling}\n        titleStyle={options.headerBackTitleStyle}\n        layoutPreset={this.props.layoutPreset}\n        width={width}\n        scene={props.scene}\n      />\n    );\n  };\n\n  private renderModularLeftComponent = (\n    props: SubviewProps,\n    ButtonContainerComponent: React.ComponentProps<\n      typeof ModularHeaderBackButton\n    >['ButtonContainerComponent'],\n    LabelContainerComponent: React.ComponentProps<\n      typeof ModularHeaderBackButton\n    >['LabelContainerComponent']\n  ) => {\n    const { options, navigation } = props.scene.descriptor;\n    const backButtonTitle = this.getBackButtonTitleString(props.scene);\n    const truncatedBackButtonTitle = this.getTruncatedBackButtonTitle(\n      props.scene\n    );\n    const width = this.state.widths[props.scene.key]\n      ? (this.props.layout.initWidth - this.state.widths[props.scene.key]) / 2\n      : undefined;\n\n    const goBack = () => {\n      // Go back on next tick because button ripple effect needs to happen on Android\n      requestAnimationFrame(() => {\n        navigation.goBack(props.scene.descriptor.key);\n      });\n    };\n\n    return (\n      <ModularHeaderBackButton\n        onPress={goBack}\n        ButtonContainerComponent={ButtonContainerComponent}\n        LabelContainerComponent={LabelContainerComponent}\n        backTitleVisible={this.props.backTitleVisible}\n        pressColorAndroid={options.headerPressColorAndroid}\n        tintColor={options.headerTintColor}\n        backImage={options.headerBackImage}\n        title={backButtonTitle}\n        truncatedTitle={truncatedBackButtonTitle}\n        titleStyle={options.headerBackTitleStyle}\n        layoutPreset={this.props.layoutPreset}\n        width={width}\n        scene={props.scene}\n      />\n    );\n  };\n\n  private renderRightComponent = (props: SubviewProps) => {\n    const { headerRight } = props.scene.descriptor.options;\n\n    if (typeof headerRight === 'function') {\n      return headerRight();\n    }\n\n    return headerRight || null;\n  };\n\n  private renderLeft = (props: SubviewProps) => {\n    const { options } = props.scene.descriptor;\n\n    const { transitionPreset } = this.props;\n\n    let { style } = props;\n    if (options.headerLeftContainerStyle) {\n      style = [style, options.headerLeftContainerStyle];\n    }\n\n    // On Android, or if we have a custom header left, or if we have a custom back image, we\n    // do not use the modular header (which is the one that imitates UINavigationController)\n    if (\n      transitionPreset !== 'uikit' ||\n      options.headerBackImage ||\n      options.headerLeft ||\n      options.headerLeft === null\n    ) {\n      return this.renderSubView(\n        { ...props, style },\n        'left',\n        this.renderLeftComponent,\n        this.props.leftInterpolator\n      );\n    } else {\n      return this.renderModularSubView(\n        { ...props, style },\n        'left',\n        this.renderModularLeftComponent,\n        this.props.leftLabelInterpolator,\n        this.props.leftButtonInterpolator\n      );\n    }\n  };\n\n  private renderTitle = (\n    props: SubviewProps,\n    options: {\n      hasLeftComponent: boolean;\n      hasRightComponent: boolean;\n      headerTitleContainerStyle: StyleProp<ViewStyle>;\n    }\n  ) => {\n    const { layoutPreset, transitionPreset } = this.props;\n    let style: StyleProp<ViewStyle> = [\n      { justifyContent: layoutPreset === 'center' ? 'center' : 'flex-start' },\n      getTitleOffsets(\n        layoutPreset,\n        options.hasLeftComponent,\n        options.hasRightComponent\n      ),\n      options.headerTitleContainerStyle,\n    ];\n\n    return this.renderSubView(\n      { ...props, style },\n      'title',\n      this.renderTitleComponent,\n      transitionPreset === 'uikit'\n        ? this.props.titleFromLeftInterpolator\n        : this.props.titleInterpolator\n    );\n  };\n\n  private renderRight = (props: SubviewProps) => {\n    const { options } = props.scene.descriptor;\n\n    let { style } = props;\n    if (options.headerRightContainerStyle) {\n      style = [style, options.headerRightContainerStyle];\n    }\n\n    return this.renderSubView(\n      { ...props, style },\n      'right',\n      this.renderRightComponent,\n      this.props.rightInterpolator\n    );\n  };\n\n  private renderBackground = (props: SubviewProps) => {\n    const {\n      index,\n      descriptor: { options },\n    } = props.scene;\n\n    const offset = this.props.navigation.state.index - index;\n\n    if (Math.abs(offset) > 2) {\n      // Scene is far away from the active scene. Hides it to avoid unnecessary\n      // rendering.\n      return null;\n    }\n\n    return this.renderSubView(\n      { ...props, style: StyleSheet.absoluteFill },\n      'background',\n      () =>\n        typeof options.headerBackground === 'function'\n          ? options.headerBackground()\n          : options.headerBackground,\n      this.props.backgroundInterpolator\n    );\n  };\n\n  private renderModularSubView = (\n    props: SubviewProps,\n    name: SubviewName,\n    renderer: (\n      props: SubviewProps,\n      ButtonContainerComponent: React.ComponentProps<\n        typeof ModularHeaderBackButton\n      >['ButtonContainerComponent'],\n      LabelContainerComponent: React.ComponentProps<\n        typeof ModularHeaderBackButton\n      >['LabelContainerComponent']\n    ) => React.ReactNode,\n    labelStyleInterpolator: (props: SceneInterpolatorProps) => any,\n    buttonStyleInterpolator: (props: SceneInterpolatorProps) => any\n  ) => {\n    const { scene } = props;\n    const { index, isStale, key } = scene;\n\n    // Never render a modular back button on the first screen in a stack.\n    if (index === 0) {\n      return;\n    }\n\n    const offset = this.props.navigation.state.index - index;\n\n    if (Math.abs(offset) > 2) {\n      // Scene is far away from the active scene. Hides it to avoid unnecessary\n      // rendering.\n      return null;\n    }\n\n    const ButtonContainer = ({ children }: { children: React.ReactNode }) => (\n      <Animated.View\n        style={[buttonStyleInterpolator({ ...this.props, ...props })]}\n      >\n        {children}\n      </Animated.View>\n    );\n\n    const LabelContainer = ({ children }: { children: React.ReactNode }) => (\n      <Animated.View\n        style={[labelStyleInterpolator({ ...this.props, ...props })]}\n      >\n        {children}\n      </Animated.View>\n    );\n\n    const subView = renderer(\n      props,\n      ButtonContainer as any,\n      LabelContainer as any\n    );\n\n    if (subView === null) {\n      return subView;\n    }\n\n    const pointerEvents = offset !== 0 || isStale ? 'none' : 'box-none';\n\n    return (\n      <View\n        key={`${name}_${key}`}\n        pointerEvents={pointerEvents}\n        style={[styles.item, styles[name], props.style]}\n      >\n        {subView}\n      </View>\n    );\n  };\n\n  private renderSubView = (\n    props: SubviewProps,\n    name: SubviewName,\n    renderer: (props: SubviewProps) => React.ReactNode,\n    styleInterpolator?: (props: SceneInterpolatorProps) => any\n  ) => {\n    const { scene } = props;\n    const { index, isStale, key } = scene;\n\n    const offset = this.props.navigation.state.index - index;\n\n    if (Math.abs(offset) > 2) {\n      // Scene is far away from the active scene. Hides it to avoid unnecessary\n      // rendering.\n      return null;\n    }\n\n    const subView = renderer(props);\n\n    if (subView == null) {\n      return null;\n    }\n\n    const pointerEvents = offset !== 0 || isStale ? 'none' : 'box-none';\n\n    return (\n      <Animated.View\n        pointerEvents={pointerEvents}\n        key={`${name}_${key}`}\n        style={[\n          styles.item,\n          styles[name],\n          props.style,\n          styleInterpolator &&\n            styleInterpolator({\n              ...this.props,\n              ...props,\n            }),\n        ]}\n      >\n        {subView}\n      </Animated.View>\n    );\n  };\n\n  private renderHeader = (props: SubviewProps) => {\n    const { options } = props.scene.descriptor;\n    if (options.header === null || options.headerShown === false) {\n      return null;\n    }\n    const left = this.renderLeft(props);\n    const right = this.renderRight(props);\n    const title = this.renderTitle(props, {\n      hasLeftComponent: !!left,\n      hasRightComponent: !!right,\n      headerTitleContainerStyle: options.headerTitleContainerStyle,\n    });\n\n    const { transitionPreset } = this.props;\n\n    const wrapperProps = {\n      style: styles.header,\n      key: `scene_${props.scene.key}`,\n    };\n\n    if (\n      options.headerLeft ||\n      options.headerBackImage ||\n      Platform.OS !== 'ios' ||\n      transitionPreset !== 'uikit'\n    ) {\n      return (\n        <View {...wrapperProps}>\n          {title}\n          {left}\n          {right}\n        </View>\n      );\n    } else {\n      return (\n        <MaskedViewIOS\n          {...wrapperProps}\n          maskElement={\n            <View style={styles.iconMaskContainer}>\n              <Image\n                source={require('../assets/back-icon-mask.png')}\n                style={styles.iconMask}\n              />\n              <View style={styles.iconMaskFillerRect} />\n            </View>\n          }\n        >\n          {title}\n          {left}\n          {right}\n        </MaskedViewIOS>\n      );\n    }\n  };\n\n  render() {\n    let appBar;\n    let background;\n    const { mode, scene, isLandscape } = this.props;\n\n    if (mode === 'float') {\n      const scenesByIndex: { [key: string]: Scene } = {};\n      this.props.scenes.forEach(scene => {\n        scenesByIndex[scene.index] = scene;\n      });\n      const scenesProps = Object.values(scenesByIndex).map(scene => ({\n        position: this.props.position,\n        scene,\n      }));\n      appBar = scenesProps.map(props => this.renderHeader(props));\n      background = scenesProps.map(props => this.renderBackground(props));\n    } else {\n      const headerProps = {\n        position: new Animated.Value(this.props.scene.index),\n        scene: this.props.scene,\n      };\n\n      appBar = this.renderHeader(headerProps);\n      background = this.renderBackground(headerProps);\n    }\n\n    const { options } = scene.descriptor;\n    const { headerStyle = {} } = options;\n    const headerStyleObj = StyleSheet.flatten(headerStyle) as ViewStyle;\n    const appBarHeight = getAppBarHeight(isLandscape);\n\n    const {\n      alignItems,\n      justifyContent,\n      flex,\n      flexDirection,\n      flexGrow,\n      flexShrink,\n      flexBasis,\n      flexWrap,\n      position,\n      padding,\n      paddingHorizontal,\n      paddingRight,\n      paddingLeft,\n      // paddingVertical,\n      // paddingTop,\n      // paddingBottom,\n      top,\n      right,\n      bottom,\n      left,\n      ...safeHeaderStyle\n    } = headerStyleObj;\n\n    if (__DEV__) {\n      warnIfHeaderStyleDefined(alignItems, 'alignItems');\n      warnIfHeaderStyleDefined(justifyContent, 'justifyContent');\n      warnIfHeaderStyleDefined(flex, 'flex');\n      warnIfHeaderStyleDefined(flexDirection, 'flexDirection');\n      warnIfHeaderStyleDefined(flexGrow, 'flexGrow');\n      warnIfHeaderStyleDefined(flexShrink, 'flexShrink');\n      warnIfHeaderStyleDefined(flexBasis, 'flexBasis');\n      warnIfHeaderStyleDefined(flexWrap, 'flexWrap');\n      warnIfHeaderStyleDefined(padding, 'padding');\n      warnIfHeaderStyleDefined(position, 'position');\n      warnIfHeaderStyleDefined(paddingHorizontal, 'paddingHorizontal');\n      warnIfHeaderStyleDefined(paddingRight, 'paddingRight');\n      warnIfHeaderStyleDefined(paddingLeft, 'paddingLeft');\n      // warnIfHeaderStyleDefined(paddingVertical, 'paddingVertical');\n      // warnIfHeaderStyleDefined(paddingTop, 'paddingTop');\n      // warnIfHeaderStyleDefined(paddingBottom, 'paddingBottom');\n      warnIfHeaderStyleDefined(top, 'top');\n      warnIfHeaderStyleDefined(right, 'right');\n      warnIfHeaderStyleDefined(bottom, 'bottom');\n      warnIfHeaderStyleDefined(left, 'left');\n    }\n\n    let isDark = this.context === 'dark';\n\n    // TODO: warn if any unsafe styles are provided\n    const containerStyles = [\n      options.headerTransparent\n        ? isDark\n          ? styles.transparentContainerDark\n          : styles.transparentContainerLight\n        : isDark\n        ? styles.containerDark\n        : styles.containerLight,\n      { height: appBarHeight },\n      safeHeaderStyle,\n    ];\n\n    const { headerForceInset } = options;\n    const forceInset = headerForceInset || {\n      top: 'always',\n      bottom: 'never',\n      horizontal: 'always',\n    };\n\n    let backgroundColor = safeHeaderStyle.backgroundColor;\n\n    if (!backgroundColor) {\n      backgroundColor = isDark\n        ? ThemeColors.dark.header\n        : ThemeColors.light.header;\n    }\n\n    return (\n      <Animated.View\n        style={[\n          this.props.layoutInterpolator(this.props),\n          Platform.OS === 'ios' && !options.headerTransparent\n            ? { backgroundColor }\n            : null,\n        ]}\n      >\n        <SafeAreaView forceInset={forceInset} style={containerStyles}>\n          {background}\n          <View style={styles.flexOne}>{appBar}</View>\n        </SafeAreaView>\n      </Animated.View>\n    );\n  }\n}\n\nfunction warnIfHeaderStyleDefined(value: any, styleProp: string) {\n  if (styleProp === 'position' && value === 'absolute') {\n    console.warn(\n      \"position: 'absolute' is not supported on headerStyle. If you would like to render content under the header, use the headerTransparent navigationOption.\"\n    );\n  } else if (value !== undefined) {\n    console.warn(\n      `${styleProp} was given a value of ${value}, this has no effect on headerStyle.`\n    );\n  }\n}\n\nconst platformContainerStylesLight = Platform.select({\n  android: {\n    elevation: 4,\n  },\n  web: {\n    // https://github.com/necolas/react-native-web/issues/44\n    // Material Design\n    boxShadow: `0 2px 4px -1px rgba(0,0,0,0.2), 0 4px 5px 0 rgba(0,0,0,0.14), 0 1px 10px 0 rgba(0,0,0,0.12)`,\n  },\n  default: {\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderBottomColor: ThemeColors.light.headerBorder,\n  },\n});\n\nconst platformContainerStylesDark = Platform.select({\n  android: {\n    elevation: 4,\n  },\n  web: {\n    // https://github.com/necolas/react-native-web/issues/44\n    // Material Design\n    // TODO: what to use here?\n    boxShadow: `0 2px 4px -1px rgba(0,0,0,0.2), 0 4px 5px 0 rgba(0,0,0,0.14), 0 1px 10px 0 rgba(0,0,0,0.12)`,\n  },\n  default: {\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderBottomColor: ThemeColors.dark.headerBorder,\n  },\n});\n\nconst styles = StyleSheet.create({\n  containerLight: {\n    ...platformContainerStylesLight,\n    backgroundColor: ThemeColors.light.header,\n  },\n  containerDark: {\n    ...platformContainerStylesDark,\n    backgroundColor: ThemeColors.dark.header,\n  },\n  transparentContainerLight: {\n    ...platformContainerStylesLight,\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    borderBottomWidth: 0,\n    borderBottomColor: 'transparent',\n    elevation: 0,\n  },\n  transparentContainerDark: {\n    ...platformContainerStylesDark,\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    borderBottomWidth: 0,\n    borderBottomColor: 'transparent',\n    elevation: 0,\n  },\n  header: {\n    ...StyleSheet.absoluteFillObject,\n    flexDirection: 'row',\n  },\n  item: {\n    backgroundColor: 'transparent',\n  },\n  iconMaskContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n  },\n  iconMaskFillerRect: {\n    flex: 1,\n    backgroundColor: '#d8d8d8',\n    marginLeft: -5,\n  },\n  iconMask: {\n    // These are mostly the same as the icon in ModularHeaderBackButton\n    height: 23,\n    width: 14.5,\n    marginLeft: 8.5,\n    marginTop: -2.5,\n    alignSelf: 'center',\n    resizeMode: 'contain',\n    transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n  },\n  // eslint-disable-next-line react-native/no-unused-styles\n  background: {},\n  // eslint-disable-next-line react-native/no-unused-styles\n  title: {\n    bottom: 0,\n    top: 0,\n    position: 'absolute',\n    alignItems: 'center',\n    flexDirection: 'row',\n  },\n  // eslint-disable-next-line react-native/no-unused-styles\n  left: {\n    left: 0,\n    bottom: 0,\n    top: 0,\n    position: 'absolute',\n    alignItems: 'center',\n    flexDirection: 'row',\n  },\n  // eslint-disable-next-line react-native/no-unused-styles\n  right: {\n    right: 0,\n    bottom: 0,\n    top: 0,\n    position: 'absolute',\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  flexOne: {\n    flex: 1,\n  },\n});\n\nexport default Object.assign(withOrientation(Header), {\n  get HEIGHT() {\n    return APPBAR_HEIGHT + STATUSBAR_HEIGHT;\n  },\n});\n"]},"metadata":{},"sourceType":"module"}