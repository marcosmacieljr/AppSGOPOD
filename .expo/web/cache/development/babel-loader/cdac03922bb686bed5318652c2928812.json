{"ast":null,"code":"export var BACK = 'Navigation/BACK';\nexport var INIT = 'Navigation/INIT';\nexport var NAVIGATE = 'Navigation/NAVIGATE';\nexport var SET_PARAMS = 'Navigation/SET_PARAMS';\nexport var back = function back() {\n  var payload = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return {\n    type: BACK,\n    key: payload.key,\n    immediate: payload.immediate\n  };\n};\nexport var init = function init() {\n  var payload = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = {\n    type: INIT\n  };\n\n  if (payload.params) {\n    action.params = payload.params;\n  }\n\n  return action;\n};\nexport var navigate = function navigate(payload) {\n  var action = {\n    type: NAVIGATE,\n    routeName: payload.routeName\n  };\n\n  if (payload.params) {\n    action.params = payload.params;\n  }\n\n  if (payload.action) {\n    action.action = payload.action;\n  }\n\n  if (payload.key) {\n    action.key = payload.key;\n  }\n\n  return action;\n};\nexport var setParams = function setParams(payload) {\n  return {\n    type: SET_PARAMS,\n    key: payload.key,\n    params: payload.params,\n    preserveFocus: true\n  };\n};","map":{"version":3,"mappings":"AAmDA,OAAO,IAAMA,IAAI,GAAG,iBAAb;AACP,OAAO,IAAMC,IAAI,GAAG,iBAAb;AACP,OAAO,IAAMC,QAAQ,GAAG,qBAAjB;AACP,OAAO,IAAMC,UAAU,GAAG,uBAAnB;AAGP,OAAO,IAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,MAClBC,OADkB,uEACqB,EADrB;AAAA,SAEQ;AAC1BC,QAAI,EAAEN,IADoB;AAE1BO,OAAG,EAAEF,OAAO,CAACE,GAFa;AAG1BC,aAAS,EAAEH,OAAO,CAACG;AAHO,GAFR;AAAA,CAAb;AAQP,OAAO,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAA+C;AAAA,MAA9CJ,OAA8C,uEAAP,EAAO;AACjE,MAAMK,MAA4B,GAAG;AACnCJ,QAAI,EAAEL;AAD6B,GAArC;;AAGA,MAAII,OAAO,CAACM,MAAZ,EAAoB;AAClBD,UAAM,CAACC,MAAPD,GAAgBL,OAAO,CAACM,MAAxBD;AACD;;AACD,SAAOA,MAAP;AAPK;AAUP,OAAO,IAAME,QAAQ,GACnBP,SADWO,QACXP,QADsB,EAEO;AAC7B,MAAMK,MAAgC,GAAG;AACvCJ,QAAI,EAAEJ,QADiC;AAEvCW,aAAS,EAAER,OAAO,CAACQ;AAFoB,GAAzC;;AAIA,MAAIR,OAAO,CAACM,MAAZ,EAAoB;AAClBD,UAAM,CAACC,MAAPD,GAAgBL,OAAO,CAACM,MAAxBD;AACD;;AACD,MAAIL,OAAO,CAACK,MAAZ,EAAoB;AAClBA,UAAM,CAACA,MAAPA,GAAgBL,OAAO,CAACK,MAAxBA;AACD;;AACD,MAAIL,OAAO,CAACE,GAAZ,EAAiB;AACfG,UAAM,CAACH,GAAPG,GAAaL,OAAO,CAACE,GAArBG;AACD;;AACD,SAAOA,MAAP;AAhBK;AAmBP,OAAO,IAAMI,SAAS,GACpBT,SADWS,SACXT,QADuB;AAAA,SAEQ;AAC/BC,QAAI,EAAEH,UADyB;AAE/BI,OAAG,EAAEF,OAAO,CAACE,GAFkB;AAG/BI,UAAM,EAAEN,OAAO,CAACM,MAHe;AAI/BI,iBAAa,EAAE;AAJgB,GAFR;AAAA,CAAlB","names":["BACK","INIT","NAVIGATE","SET_PARAMS","back","payload","type","key","immediate","init","action","params","navigate","routeName","setParams","preserveFocus"],"sources":["NavigationActions.ts"],"sourcesContent":["export interface NavigationParams {\n  [key: string]: any;\n}\n\nexport interface NavigationNavigateActionPayload {\n  routeName: string;\n  params?: NavigationParams;\n\n  // The action to run inside the sub-router\n  action?: NavigationNavigateAction;\n\n  key?: string;\n}\n\nexport interface NavigationNavigateAction\n  extends NavigationNavigateActionPayload {\n  type: 'Navigation/NAVIGATE';\n}\n\nexport interface NavigationBackActionPayload {\n  key?: string | null;\n  immediate?: boolean;\n}\n\nexport interface NavigationBackAction extends NavigationBackActionPayload {\n  type: 'Navigation/BACK';\n}\n\nexport interface NavigationInitActionPayload {\n  params?: NavigationParams;\n}\n\nexport interface NavigationInitAction extends NavigationInitActionPayload {\n  type: 'Navigation/INIT';\n}\n\nexport interface NavigationSetParamsActionPayload {\n  // The key of the route where the params should be set\n  key: string;\n\n  // The new params to merge into the existing route params\n  params?: NavigationParams;\n}\n\nexport interface NavigationSetParamsAction\n  extends NavigationSetParamsActionPayload {\n  type: 'Navigation/SET_PARAMS';\n  preserveFocus: true;\n}\n\n// Action constants\nexport const BACK = 'Navigation/BACK';\nexport const INIT = 'Navigation/INIT';\nexport const NAVIGATE = 'Navigation/NAVIGATE';\nexport const SET_PARAMS = 'Navigation/SET_PARAMS';\n\n// Action creators\nexport const back = (\n  payload: NavigationBackActionPayload = {}\n): NavigationBackAction => ({\n  type: BACK,\n  key: payload.key,\n  immediate: payload.immediate,\n});\n\nexport const init = (payload: NavigationInitActionPayload = {}) => {\n  const action: NavigationInitAction = {\n    type: INIT,\n  };\n  if (payload.params) {\n    action.params = payload.params;\n  }\n  return action;\n};\n\nexport const navigate = (\n  payload: NavigationNavigateActionPayload\n): NavigationNavigateAction => {\n  const action: NavigationNavigateAction = {\n    type: NAVIGATE,\n    routeName: payload.routeName,\n  };\n  if (payload.params) {\n    action.params = payload.params;\n  }\n  if (payload.action) {\n    action.action = payload.action;\n  }\n  if (payload.key) {\n    action.key = payload.key;\n  }\n  return action;\n};\n\nexport const setParams = (\n  payload: NavigationSetParamsActionPayload\n): NavigationSetParamsAction => ({\n  type: SET_PARAMS,\n  key: payload.key,\n  params: payload.params,\n  preserveFocus: true,\n});\n"]},"metadata":{},"sourceType":"module"}