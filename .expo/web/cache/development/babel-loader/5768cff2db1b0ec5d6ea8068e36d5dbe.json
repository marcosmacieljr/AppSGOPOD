{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport AppLoading from 'expo-app-loading';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { createAppContainer } from 'react-navigation';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { startApp } from \"./db/sqliteConnection\";\nimport { logIn, checkLogin, UserContext, logOut } from \"./businessLayer/login\";\nimport { syncApp, syncFormUsers, syncWeather, syncRestrictionReason, gravarLogLocal, getCurrentDate } from \"./businessLayer/forms\";\nimport FormularioTerceiros from \"./src/FormularioTerceiros\";\nimport DadosOperacao from \"./src/DadosOperacao\";\nimport DadosVia from \"./src/DadosVia\";\nimport DadosMecanica from \"./src/DadosMecanica\";\nimport { styles } from \"./styles/styles\";\nimport { ButtonP, ButtonG } from \"./components/Button\";\nimport { Message } from \"./components/AnimatedMessage\";\nimport LogBox from \"react-native-web/dist/exports/LogBox\";\nimport { logger } from \"react-native-logs\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nLogBox.ignoreLogs(['Warning: ...']);\nLogBox.ignoreAllLogs();\nvar log = logger.createLogger();\n\nfunction App(props) {\n  var context = React.useContext(UserContext);\n\n  var _useState = useState(undefined),\n      _useState2 = _slicedToArray(_useState, 2),\n      message = _useState2[0],\n      setMessage = _useState2[1];\n\n  var _useState3 = useState(undefined),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loginUserId = _useState4[0],\n      setLoginUserId = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isLoadingComplete = _useState6[0],\n      setLoadingComplete = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loginScreen = _useState8[0],\n      setLoginScreen = _useState8[1];\n\n  var _useState9 = useState({\n    username: '',\n    password: ''\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      loginForm = _useState10[0],\n      setLoginForm = _useState10[1];\n\n  var _useState11 = useState(true),\n      _useState12 = _slicedToArray(_useState11, 2),\n      hidePass = _useState12[0],\n      setHidePass = _useState12[1];\n\n  var startAsync = function startAsync() {\n    var syncUsers, syncW, syncRR, userData, syncResponse;\n    return _regeneratorRuntime.async(function startAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(startApp());\n\n          case 2:\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(gravarLogLocal(getCurrentDate() + \" - Aplicação iniciada.\"));\n\n          case 4:\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(syncFormUsers());\n\n          case 6:\n            syncUsers = _context.sent;\n\n            if (syncUsers != null && syncUsers.message) {\n              setMessage(syncUsers.message);\n            }\n\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(syncWeather());\n\n          case 10:\n            syncW = _context.sent;\n\n            if (syncW != null && syncW.message) {\n              setMessage(syncW.message);\n            }\n\n            _context.next = 14;\n            return _regeneratorRuntime.awrap(syncRestrictionReason());\n\n          case 14:\n            syncRR = _context.sent;\n\n            if (syncRR != null && syncRR.message) {\n              setMessage(syncRR.message);\n            }\n\n            _context.next = 18;\n            return _regeneratorRuntime.awrap(checkLogin());\n\n          case 18:\n            userData = _context.sent;\n\n            if (!(userData != null && userData.userId)) {\n              _context.next = 27;\n              break;\n            }\n\n            context.userId = userData.userId;\n            context.userCd = userData.userCd;\n            setLoginUserId(context.userId);\n            _context.next = 25;\n            return _regeneratorRuntime.awrap(syncApp(context.userId));\n\n          case 25:\n            syncResponse = _context.sent;\n\n            if (syncResponse != null && syncResponse.message) {\n              setMessage(syncResponse.message);\n            }\n\n          case 27:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var loginApp = function loginApp(callback) {\n    var loginResponse;\n    return _regeneratorRuntime.async(function loginApp$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(loginForm.username != \"\" && loginForm.password != \"\")) {\n              _context2.next = 21;\n              break;\n            }\n\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(logIn(loginForm.username, loginForm.password));\n\n          case 3:\n            loginResponse = _context2.sent;\n\n            if (!(loginResponse.userId != undefined)) {\n              _context2.next = 15;\n              break;\n            }\n\n            context.userId = loginResponse.userId;\n            context.userCd = loginResponse.userCd;\n            setLoginUserId(context.userId);\n            setLoadingComplete(false);\n            setLoginScreen(false);\n            _context2.next = 12;\n            return _regeneratorRuntime.awrap(gravarLogLocal(getCurrentDate() + \" - Login efetuado com sucesso!\"));\n\n          case 12:\n            callback();\n            _context2.next = 19;\n            break;\n\n          case 15:\n            callback();\n            _context2.next = 18;\n            return _regeneratorRuntime.awrap(gravarLogLocal(getCurrentDate() + \" - Login não efetuado - \" + loginResponse.message));\n\n          case 18:\n            setMessage(loginResponse.message);\n\n          case 19:\n            _context2.next = 25;\n            break;\n\n          case 21:\n            callback();\n            _context2.next = 24;\n            return _regeneratorRuntime.awrap(gravarLogLocal(getCurrentDate() + \" - Login não efetuado - Usuário ou Senha inválidos.\"));\n\n          case 24:\n            setMessage(\"Usuário ou Senha inválidos\");\n\n          case 25:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var download = function download() {\n    var FileSystem;\n    return _regeneratorRuntime.async(function download$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            FileSystem = require(\"expo-file-system\");\n            FileSystem.downloadAsync('http://techslides.com/demos/sample-videos/small.mp4', FileSystem.documentDirectory + 'small.mp4').then(function (_ref) {\n              var uri = _ref.uri;\n              console.log('FILE WRITTEN!');\n              console.log(uri);\n              saveFile(uri);\n            }).catch(function (error) {\n              console.error(error);\n            });\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  exibirConfirmacao = function exibirConfirmacao() {\n    return Alert.alert(\"Confirmação\", \"Caso não tenha salvo, você irá perder o que preencheu, tem certeza que deseja voltar?\", [{\n      text: \"Não\",\n      onPress: function onPress() {\n        return console.log(\"Nada a fazer\");\n      }\n    }, {\n      text: \"Sim\",\n      onPress: function onPress() {\n        return props.navigation.navigate('App', {\n          userCd: context.userCd\n        });\n      }\n    }]);\n  };\n\n  var logoutApp = function logoutApp(callback) {\n    return _regeneratorRuntime.async(function logoutApp$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(logOut());\n\n          case 2:\n            context.userId = _context4.sent;\n            context.userCd = undefined;\n            loginForm.username = \"\";\n            loginForm.password = \"\";\n            callback();\n            setLoginUserId(undefined);\n            _context4.next = 10;\n            return _regeneratorRuntime.awrap(gravarLogLocal(getCurrentDate() + \" - Logout efetuado com sucesso.\"));\n\n          case 10:\n            setLoginScreen(true);\n\n          case 11:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  if (isLoadingComplete) {\n    if (loginScreen) {\n      return _jsxs(View, {\n        style: styles.background,\n        children: [_jsxs(KeyboardAvoidingView, {\n          behavior: \"position\",\n          children: [_jsxs(View, {\n            style: styles.title,\n            children: [_jsx(Text, {\n              style: styles.titleText,\n              children: \"SGO\"\n            }), _jsx(Text, {\n              style: styles.title1,\n              children: \"1.0.2\"\n            })]\n          }), _jsxs(View, {\n            style: styles.title,\n            children: [_jsx(Text, {\n              style: styles.label,\n              children: \"Usu\\xE1rio\"\n            }), _jsx(TextInput, {\n              placeholder: \"\",\n              style: styles.textInput,\n              onChangeText: function onChangeText(e) {\n                return setLoginForm(_objectSpread(_objectSpread({}, loginForm), {}, {\n                  username: e\n                }));\n              }\n            }), _jsx(Text, {\n              style: styles.label,\n              children: \"Senha\"\n            }), _jsx(View, {\n              children: _jsxs(View, {\n                style: styles.inputArea,\n                children: [_jsx(TextInput, {\n                  style: styles.inputSenha,\n                  placeholder: \"Digite a sua Senha\",\n                  placeholderTextColor: \"#222\",\n                  autoCorrect: false,\n                  onChangeText: function onChangeText(e) {\n                    return setLoginForm(_objectSpread(_objectSpread({}, loginForm), {}, {\n                      password: e\n                    }));\n                  },\n                  secureTextEntry: hidePass\n                }), _jsx(TouchableOpacity, {\n                  style: styles.icon,\n                  onPress: function onPress() {\n                    return setHidePass(!hidePass);\n                  },\n                  children: hidePass ? _jsx(Ionicons, {\n                    name: \"eye\",\n                    color: \"gray\",\n                    size: 25\n                  }) : _jsx(Ionicons, {\n                    name: \"eye-off\",\n                    color: \"gray\",\n                    size: 25\n                  })\n                })]\n              })\n            })]\n          })]\n        }), _jsx(View, {\n          style: {\n            width: 200,\n            marginTop: 20\n          },\n          children: _jsx(ButtonP, {\n            title: \"Login\",\n            onPress: loginApp\n          })\n        }), _jsx(View, {\n          style: {\n            width: 200,\n            marginTop: 20\n          },\n          children: _jsx(ButtonP, {\n            title: \"Voltar\",\n            onPress: function onPress() {\n              return setLoginScreen(false);\n            }\n          })\n        }), _jsx(Message, {\n          message: message,\n          callback: function callback() {\n            return setMessage(undefined);\n          }\n        })]\n      });\n    } else {\n      return _jsxs(View, {\n        style: styles.mainView,\n        children: [_jsxs(View, {\n          style: styles.containerLogo,\n          children: [_jsx(Image, {\n            source: require(\"./src/assets/icon_CPIA.png\")\n          }), _jsx(View, {\n            children: loginUserId ? _jsx(ButtonP, {\n              title: \"Logout\",\n              onPress: logoutApp\n            }) : _jsx(ButtonP, {\n              title: \"Login\",\n              onPress: function onPress() {\n                return setLoginScreen(true);\n              }\n            })\n          })]\n        }), _jsxs(View, {\n          style: styles.container,\n          children: [_jsx(Text, {\n            style: styles.sgoTitle,\n            children: \"SGO\"\n          }), _jsx(Text, {\n            style: styles.title1,\n            children: \"1.0.2\"\n          }), _jsx(ButtonG, {\n            title: \"Formul\\xE1rio de Terceiros\",\n            onPress: function onPress() {\n              return props.navigation.navigate('FormularioTerceiros', {\n                userCd: context.userCd\n              });\n            }\n          }), _jsx(ButtonG, {\n            title: \"Tomada de dados da Opera\\xE7\\xE3o\",\n            onPress: function onPress() {\n              return props.navigation.navigate('DadosOperacao', {\n                userCd: context.userCd\n              });\n            }\n          }), _jsx(ButtonG, {\n            title: \"Tomada de dados da Mec\\xE2nica\",\n            onPress: function onPress() {\n              return props.navigation.navigate('DadosMecanica', {\n                userCd: context.userCd\n              });\n            }\n          }), _jsx(ButtonG, {\n            title: \"Tomada de dados da Via\",\n            onPress: function onPress() {\n              return props.navigation.navigate('DadosVia', {\n                userCd: context.userCd\n              });\n            }\n          }), _jsx(Message, {\n            message: message,\n            callback: function callback() {\n              return setMessage(undefined);\n            }\n          })]\n        })]\n      });\n    }\n  } else {\n    return _jsxs(View, {\n      style: styles.loadingContainer,\n      children: [_jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#0174DF\"\n      }), _jsx(Text, {\n        style: styles.loadingText,\n        children: \"Carregando\"\n      }), _jsx(AppLoading, {\n        startAsync: startAsync,\n        onFinish: function onFinish() {\n          setLoadingComplete(true);\n        },\n        onError: console.warn\n      })]\n    });\n  }\n}\n\nvar AppNavigator = createStackNavigator({\n  App: {\n    screen: App,\n    navigationOptions: function navigationOptions(_ref2) {\n      var navigation = _ref2.navigation;\n      return {\n        header: null\n      };\n    }\n  },\n  FormularioTerceiros: {\n    screen: FormularioTerceiros,\n    navigationOptions: function navigationOptions(_ref3) {\n      var navigation = _ref3.navigation;\n      return {\n        title: '     Dados de Terceiros',\n        headerLeft: _jsx(Button, {\n          onPress: function onPress() {\n            return exibirConfirmacao();\n          },\n          title: \"VOLTAR\",\n          color: \"#0174DF\"\n        }),\n        headerRight: _jsx(Text, {\n          style: styles.headerText,\n          children: navigation.state.params.userCd ? navigation.state.params.userCd : ''\n        }),\n        headerStyle: {\n          backgroundColor: '#0174DF'\n        },\n        headerTintColor: 'white',\n        headerTitleStyle: {\n          fontWeight: 'bold'\n        }\n      };\n    }\n  },\n  DadosOperacao: {\n    screen: DadosOperacao,\n    navigationOptions: function navigationOptions(_ref4) {\n      var navigation = _ref4.navigation;\n      return {\n        title: '      Dados da Operação',\n        headerLeft: _jsx(Button, {\n          onPress: function onPress() {\n            return exibirConfirmacao();\n          },\n          title: \"VOLTAR\",\n          color: \"#0174DF\"\n        }),\n        headerRight: _jsx(Text, {\n          style: styles.headerText,\n          children: navigation.state.params.userCd ? navigation.state.params.userCd : ''\n        }),\n        headerStyle: {\n          backgroundColor: '#0174DF'\n        },\n        headerTintColor: 'white',\n        headerTitleStyle: {\n          fontWeight: 'bold'\n        }\n      };\n    }\n  },\n  DadosVia: {\n    screen: DadosVia,\n    navigationOptions: function navigationOptions(_ref5) {\n      var navigation = _ref5.navigation;\n      return {\n        title: '      Dados da Via',\n        headerLeft: _jsx(Button, {\n          onPress: function onPress() {\n            return exibirConfirmacao();\n          },\n          title: \"VOLTAR\",\n          color: \"#0174DF\"\n        }),\n        headerRight: _jsx(Text, {\n          style: styles.headerText,\n          children: navigation.state.params.userCd ? navigation.state.params.userCd : ''\n        }),\n        headerStyle: {\n          backgroundColor: '#0174DF'\n        },\n        headerTintColor: '#fff',\n        headerTitleStyle: {\n          fontWeight: 'bold'\n        }\n      };\n    }\n  },\n  DadosMecanica: {\n    screen: DadosMecanica,\n    navigationOptions: function navigationOptions(_ref6) {\n      var navigation = _ref6.navigation;\n      return {\n        title: '    Dados da Mecânica',\n        headerLeft: _jsx(Button, {\n          onPress: function onPress() {\n            return exibirConfirmacao();\n          },\n          title: \"VOLTAR\",\n          color: \"#0174DF\"\n        }),\n        headerRight: _jsx(Text, {\n          style: styles.headerText,\n          children: navigation.state.params.userCd ? navigation.state.params.userCd : ''\n        }),\n        headerStyle: {\n          backgroundColor: '#0174DF'\n        },\n        headerTintColor: '#fff',\n        headerTitleStyle: {\n          fontWeight: 'bold'\n        }\n      };\n    }\n  }\n});\nexport default createAppContainer(AppNavigator);","map":{"version":3,"sources":["C:/RepositorioAPPSGO/APP-main/App.js"],"names":["React","useState","AppLoading","Ionicons","createAppContainer","createStackNavigator","startApp","logIn","checkLogin","UserContext","logOut","syncApp","syncFormUsers","syncWeather","syncRestrictionReason","gravarLogLocal","getCurrentDate","FormularioTerceiros","DadosOperacao","DadosVia","DadosMecanica","styles","ButtonP","ButtonG","Message","logger","LogBox","ignoreLogs","ignoreAllLogs","log","createLogger","App","props","context","useContext","undefined","message","setMessage","loginUserId","setLoginUserId","isLoadingComplete","setLoadingComplete","loginScreen","setLoginScreen","username","password","loginForm","setLoginForm","hidePass","setHidePass","startAsync","syncUsers","syncW","syncRR","userData","userId","userCd","syncResponse","loginApp","callback","loginResponse","download","FileSystem","require","downloadAsync","documentDirectory","then","uri","console","saveFile","catch","error","exibirConfirmacao","Alert","alert","text","onPress","navigation","navigate","logoutApp","background","title","titleText","title1","label","textInput","e","inputArea","inputSenha","icon","width","marginTop","mainView","containerLogo","container","sgoTitle","loadingContainer","loadingText","warn","AppNavigator","screen","navigationOptions","header","headerLeft","headerRight","headerText","state","params","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport AppLoading from 'expo-app-loading';\nimport { Text, Button, Alert, View, TextInput, KeyboardAvoidingView, TouchableOpacity, ActivityIndicator, Image } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { createAppContainer } from 'react-navigation';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { startApp } from './db/sqliteConnection';\nimport { logIn, checkLogin, UserContext, logOut } from './businessLayer/login';\nimport { syncApp, syncFormUsers, syncWeather, syncRestrictionReason, gravarLogLocal, getCurrentDate } from './businessLayer/forms';\nimport FormularioTerceiros from './src/FormularioTerceiros';\nimport DadosOperacao from './src/DadosOperacao';\nimport DadosVia from './src/DadosVia';\nimport DadosMecanica from './src/DadosMecanica';\nimport { styles } from './styles/styles';\nimport { ButtonP, ButtonG } from './components/Button';\nimport { Message } from './components/AnimatedMessage';\nimport { LogBox } from \"react-native\";\nimport { logger } from \"react-native-logs\";\n\nLogBox.ignoreLogs(['Warning: ...']); // Ignore log notification by message\nLogBox.ignoreAllLogs();//Ignore all log notifications\n\n\n\nvar log = logger.createLogger();\n\nfunction App(props) {\n    const context = React.useContext(UserContext);\n    const [message, setMessage] = useState(undefined);\n    const [loginUserId, setLoginUserId] = useState(undefined);\n    const [isLoadingComplete, setLoadingComplete] = useState(false);\n    const [loginScreen, setLoginScreen] = useState(false);\n    const [loginForm, setLoginForm] = useState({ username: '', password: '' });\n\n    const [hidePass, setHidePass] = useState(true);\n\n    const startAsync = async () => {\n        await startApp();\n        \n        await gravarLogLocal(getCurrentDate() + \" - Aplicação iniciada.\");\n\n        const syncUsers = await syncFormUsers();\n        if (syncUsers?.message) {\n            setMessage(syncUsers.message);\n        }\n\n        const syncW = await syncWeather();\n        if (syncW?.message) {\n            setMessage(syncW.message);\n        }\n\n        const syncRR = await syncRestrictionReason();\n        if (syncRR?.message) {\n            setMessage(syncRR.message);\n        }\n\n        const userData = await checkLogin();\n        if (userData?.userId) {\n            context.userId = userData.userId;\n            context.userCd = userData.userCd;\n            setLoginUserId(context.userId);\n            const syncResponse = await syncApp(context.userId);\n            if (syncResponse?.message) {\n                setMessage(syncResponse.message);\n            }\n        }\n    }\n\n    const loginApp = async (callback) => {\n             \n        if (loginForm.username != \"\" && loginForm.password != \"\") {\n            const loginResponse = await logIn(loginForm.username, loginForm.password);\n            if (loginResponse.userId != undefined) {\n                context.userId = loginResponse.userId;\n                context.userCd = loginResponse.userCd;\n                setLoginUserId(context.userId);\n                setLoadingComplete(false);\n                setLoginScreen(false);\n                // Gravar log com login de sucesso log = data + hora loginResponse.message \n               await gravarLogLocal(getCurrentDate() + \" - Login efetuado com sucesso!\");\n               \n\n               callback();\n            } else {\n                callback();\n                await gravarLogLocal(getCurrentDate() + \" - Login não efetuado - \" + loginResponse.message);\n                setMessage(loginResponse.message);\n                \n            }\n\n        } else {\n            callback();\n            await gravarLogLocal(getCurrentDate() + \" - Login não efetuado - Usuário ou Senha inválidos.\");\n            setMessage(\"Usuário ou Senha inválidos\");\n\n        }\n\n    }\n\n\n\n//Exemplo de download a partir de uma URL da web\n \n    const download = async () => {\n    var FileSystem = require(\"expo-file-system\");\n    FileSystem.downloadAsync(\n    'http://techslides.com/demos/sample-videos/small.mp4',\n    FileSystem.documentDirectory + 'small.mp4'\n  )\n  .then(({ uri }) => {\n    console.log('FILE WRITTEN!');\n    console.log(uri);\n    saveFile(uri);\n    //Alert.alert(\n     // \"App\",\n    //  uri\n   // );\n  //this.setState({uri: uri});\n})\n.catch(error => {\n//Alert.alert(\n // \"App\",\n  //error\n//);\nconsole.error(error);\n});\n}\n\n\n\n   exibirConfirmacao = () =>\n\tAlert.alert(\n\t\t\"Confirmação\",\n\t\t\"Caso não tenha salvo, você irá perder o que preencheu, tem certeza que deseja voltar?\",\n\t\t[\n\t\t\t{\n\t\t\t\ttext: \"Não\",\n\t\t\t\tonPress: () => console.log(\"Nada a fazer\")\n\t\t\t},\n\t\t\t{ text: \"Sim\", onPress: () => props.navigation.navigate('App', { userCd: context.userCd }) }\n\n\n\t\t]\n\t);\n\n\n\n\n    const logoutApp = async (callback) => {\n        context.userId = await logOut();\n        context.userCd = undefined;\n        loginForm.username = \"\";\n        loginForm.password = \"\";\n        callback();\n        setLoginUserId(undefined);\n        await gravarLogLocal(getCurrentDate() + \" - Logout efetuado com sucesso.\");\n        setLoginScreen(true);\n        \n    }\n\n\n\n    if (isLoadingComplete) {\n        if (loginScreen) {\n           \n            return (\n                \n                <View style={styles.background}>\n                    <KeyboardAvoidingView behavior='position' >\n                        <View style={styles.title}>\n                            <Text style={styles.titleText}>SGO</Text>\n                            <Text style={styles.title1}>1.0.2</Text>\n                        </View>\n                        <View style={styles.title}>\n                            <Text style={styles.label}>Usuário</Text>\n                            <TextInput placeholder='' style={styles.textInput}\n                                onChangeText={(e) => setLoginForm({ ...loginForm, username: e })}>\n                            </TextInput>\n                            <Text style={styles.label}>Senha</Text>\n                            <View>\n                                <View style={styles.inputArea}>\n                                    <TextInput \n                                        style={styles.inputSenha}\n                                        placeholder='Digite a sua Senha'\n                                        placeholderTextColor='#222'\n                                        autoCorrect={false}\n                                        onChangeText={(e) => setLoginForm({ ...loginForm, password: e })}\n                                        secureTextEntry={hidePass}\n                                    />\n                                    <TouchableOpacity style={styles.icon} onPress={ () => setHidePass(!hidePass) }>\n                                        { hidePass ? \n                                        <Ionicons name=\"eye\" color=\"gray\" size={25} />\n                                        :\n                                        <Ionicons name=\"eye-off\" color=\"gray\" size={25} />                     \n                                    }\n                                    </TouchableOpacity>\n                                </View>\n                            </View>                            \n                        </View>\n                    </KeyboardAvoidingView>\n                    <View style={{ width: 200, marginTop: 20 }}>\n                        <ButtonP title=\"Login\" onPress={loginApp} />\n                    </View>\n                    <View style={{ width: 200, marginTop: 20 }}>\n                        <ButtonP title=\"Voltar\" onPress={() => setLoginScreen(false)}/> \n                    </View>\n                    <Message message={message} callback={() => setMessage(undefined)} />\n                </View>\n            );\n        } else {            \n            return (\n                <View style={styles.mainView}>\n                   <View style={styles.containerLogo}>\n                        <Image\n                            source={require('./src/assets/icon_CPIA.png')}\n                        />\n                        <View>\n                            {loginUserId ? <ButtonP title=\"Logout\" onPress={logoutApp} /> : <ButtonP title=\"Login\" onPress={() => setLoginScreen(true)} />}\n                        </View>\n                    </View>\n                    <View style={styles.container}>\n                        <Text style={styles.sgoTitle}>SGO</Text>\n                        <Text style={styles.title1}>1.0.2</Text>\n                        <ButtonG title=\"Formulário de Terceiros\"\n                            onPress={() => props.navigation.navigate('FormularioTerceiros', { userCd: context.userCd })} />\n                        <ButtonG title=\"Tomada de dados da Operação\"\n                            onPress={() => props.navigation.navigate('DadosOperacao', { userCd: context.userCd })} />\n                        <ButtonG title=\"Tomada de dados da Mecânica\"\n                            onPress={() => props.navigation.navigate('DadosMecanica', { userCd: context.userCd })} />\n                        <ButtonG title=\"Tomada de dados da Via\"\n                            onPress={() => props.navigation.navigate('DadosVia', { userCd: context.userCd })} />\n                        \n                        <Message message={message} callback={() => setMessage(undefined)} />\n                    </View>\n                </View>\n            );\n        }\n    } else {\n        return (\n            <View style={styles.loadingContainer}>\n                <ActivityIndicator size=\"large\" color=\"#0174DF\" />\n                <Text style={styles.loadingText}>Carregando</Text>\n                <AppLoading startAsync={startAsync} onFinish={() => { setLoadingComplete(true) }} onError={console.warn} />\n            </View>\n        );\n    }\n}\n\n\n\nconst AppNavigator = createStackNavigator({\n    App: {\n        screen: App,\n        navigationOptions: ({ navigation }) => ({\n            header: null\n        })\n    },\n    FormularioTerceiros: {\n        screen: FormularioTerceiros,\n        navigationOptions: ({ navigation }) => ({\n            title: '     Dados de Terceiros',\n\n            headerLeft:\n            \n            (\n                <Button\n                  onPress={() => exibirConfirmacao()}\n                  title=\"VOLTAR\"\n                  color=\"#0174DF\"\n               />\n              ),  \n\n            headerRight: <Text style={styles.headerText}>{navigation.state.params.userCd ? navigation.state.params.userCd : ''}</Text>,\n            headerStyle: {\n                backgroundColor: '#0174DF',\n            },\n            headerTintColor: 'white',\n            headerTitleStyle: {\n                fontWeight: 'bold',\n            }\n        })\n    },\n    DadosOperacao: {\n\n        screen: DadosOperacao,\n        navigationOptions: ({ navigation }) => ({\n            title: '      Dados da Operação',\n\n            headerLeft:\n            \n            (\n                <Button\n                  onPress={() => exibirConfirmacao()}\n                  title=\"VOLTAR\"\n                  color=\"#0174DF\"\n               />\n              ),  \n\n\n            headerRight: <Text style={styles.headerText}>{navigation.state.params.userCd ? navigation.state.params.userCd : ''}</Text>,\n            headerStyle: {\n                backgroundColor: '#0174DF',\n            },\n            headerTintColor: 'white',\n            headerTitleStyle: {\n                fontWeight: 'bold',\n            }\n\n        }\n        )\n\n    },\n    DadosVia: {\n        screen: DadosVia,\n        navigationOptions: ({ navigation }) => ({\n            title: '      Dados da Via',\n            headerLeft:\n            \n            (\n                <Button\n                  onPress={() => exibirConfirmacao()}\n                  title=\"VOLTAR\"\n                  color=\"#0174DF\"\n               />\n              ),       \n     \n\n            headerRight: <Text style={styles.headerText}>{navigation.state.params.userCd ? navigation.state.params.userCd : ''}</Text>,\n            headerStyle: {\n                backgroundColor: '#0174DF',\n            },\n            headerTintColor: '#fff',\n            headerTitleStyle: {\n                fontWeight: 'bold',\n            },\n        })\n    },\n    DadosMecanica: {\n        screen: DadosMecanica,\n        navigationOptions: ({ navigation }) => ({\n            title: '    Dados da Mecânica',\n            headerLeft:\n            \n            (\n                <Button\n                  onPress={() => exibirConfirmacao()}\n                  title=\"VOLTAR\"\n                  color=\"#0174DF\"\n               />\n              ),  \n            headerRight: <Text style={styles.headerText}>{navigation.state.params.userCd ? navigation.state.params.userCd : ''}</Text>,\n            headerStyle: {\n                backgroundColor: '#0174DF',\n            },\n            headerTintColor: '#fff',\n            headerTitleStyle: {\n                fontWeight: 'bold',\n            },\n        })\n    }\n});\n\n\n   \n\nexport default createAppContainer(AppNavigator);"]},"metadata":{},"sourceType":"module"}