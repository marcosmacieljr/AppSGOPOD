{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { styles } from \"../styles/styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function Message(props) {\n  var _useState = useState(undefined),\n      _useState2 = _slicedToArray(_useState, 2),\n      message = _useState2[0],\n      setMessage = _useState2[1];\n\n  var _useState3 = useState(new Animated.Value(1)),\n      _useState4 = _slicedToArray(_useState3, 1),\n      fadeAnim = _useState4[0];\n\n  useEffect(function () {\n    setMessage(props.message);\n\n    if (props.message) {\n      Animated.timing(fadeAnim, {\n        toValue: 0,\n        duration: 5 * 1000,\n        useNativeDriver: true\n      }).start(function (_ref) {\n        var finished = _ref.finished;\n\n        if (finished) {\n          setMessage(undefined);\n          fadeAnim.setValue(1);\n          props.callback();\n        }\n      });\n    }\n  }, [props.message]);\n  return _jsx(Animated.View, {\n    style: {\n      opacity: fadeAnim\n    },\n    children: _jsx(View, {\n      children: message ? _jsx(Text, {\n        style: styles.messageText,\n        children: message\n      }) : _jsx(Text, {})\n    })\n  });\n}","map":{"version":3,"sources":["C:/RepositorioTech/AppSGO-main/components/AnimatedMessage.js"],"names":["React","useState","useEffect","styles","Message","props","undefined","message","setMessage","Animated","Value","fadeAnim","timing","toValue","duration","useNativeDriver","start","finished","setValue","callback","opacity","messageText"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;AAEA,SAASC,MAAT;;AAEA,OAAO,SAASC,OAAT,CAAkBC,KAAlB,EAAyB;AAC/B,kBAA8BJ,QAAQ,CAACK,SAAD,CAAtC;AAAA;AAAA,MAAOC,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAAmBP,QAAQ,CAAC,IAAIQ,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAD,CAA3B;AAAA;AAAA,MAAOC,QAAP;;AAEAT,EAAAA,SAAS,CAAC,YAAM;AACfM,IAAAA,UAAU,CAACH,KAAK,CAACE,OAAP,CAAV;;AACA,QAAIF,KAAK,CAACE,OAAV,EAAmB;AAClBE,MAAAA,QAAQ,CAACG,MAAT,CAAgBD,QAAhB,EAA0B;AACzBE,QAAAA,OAAO,EAAE,CADgB;AAEzBC,QAAAA,QAAQ,EAAE,IAAI,IAFW;AAGzBC,QAAAA,eAAe,EAAE;AAHQ,OAA1B,EAIGC,KAJH,CAIS,gBAAkB;AAAA,YAAfC,QAAe,QAAfA,QAAe;;AAAC,YAAIA,QAAJ,EAAc;AACzCT,UAAAA,UAAU,CAACF,SAAD,CAAV;AACAK,UAAAA,QAAQ,CAACO,QAAT,CAAkB,CAAlB;AACAb,UAAAA,KAAK,CAACc,QAAN;AACA;AAAC,OARF;AASA;AACD,GAbQ,EAaN,CAACd,KAAK,CAACE,OAAP,CAbM,CAAT;AAeA,SACC,KAAC,QAAD,CAAU,IAAV;AAAe,IAAA,KAAK,EAAE;AAACa,MAAAA,OAAO,EAAET;AAAV,KAAtB;AAAA,cACI,KAAC,IAAD;AAAA,gBACSJ,OAAD,GAAY,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEJ,MAAM,CAACkB,WAApB;AAAA,kBAAkCd;AAAlC,QAAZ,GAAgE,KAAC,IAAD;AADxE;AADJ,IADD;AAOA","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Animated, Text, View } from 'react-native';\nimport { styles } from '../styles/styles';\n\nexport function Message (props) {\n\tconst [message, setMessage] = useState(undefined);\n\tconst [fadeAnim] = useState(new Animated.Value(1));\n\n\tuseEffect(() => {\n\t\tsetMessage(props.message);\n\t\tif (props.message) {\n\t\t\tAnimated.timing(fadeAnim, {\n\t\t\t\ttoValue: 0, \n\t\t\t\tduration: 5 * 1000,\n\t\t\t\tuseNativeDriver: true\n\t\t\t}).start(({ finished }) => {if (finished) {\n\t\t\t\tsetMessage(undefined);\n\t\t\t\tfadeAnim.setValue(1);\n\t\t\t\tprops.callback();\n\t\t\t}});\n\t\t}\n\t}, [props.message]);\n\n\treturn (\n\t\t<Animated.View style={{opacity: fadeAnim}}>\n    \t\t<View>\n        \t    {(message) ? <Text style={styles.messageText}>{message}</Text> : <Text/>}\n        \t</View>\n        </Animated.View>\n    );\n}"]},"metadata":{},"sourceType":"module"}