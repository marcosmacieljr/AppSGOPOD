{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { executeQuery } from \"../db/sqliteConnection\";\nexport var selectUsers = function selectUsers() {\n  var toReturn;\n  return _regeneratorRuntime.async(function selectUsers$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          toReturn = [];\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(executeQuery('select * from Users;', []).then(function (items) {\n            toReturn = items;\n          }));\n\n        case 3:\n          return _context.abrupt(\"return\", toReturn);\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var newUser = function newUser(userId, userCd) {\n  var toReturn, persist;\n  return _regeneratorRuntime.async(function newUser$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          toReturn = false;\n          _context2.prev = 1;\n          _context2.next = 4;\n          return _regeneratorRuntime.awrap(executeQuery('DELETE FROM Users;'));\n\n        case 4:\n          _context2.next = 6;\n          return _regeneratorRuntime.awrap(executeQuery('INSERT INTO Users (userId, userCd) VALUES (?,?);', [userId, userCd]));\n\n        case 6:\n          persist = _context2.sent;\n          toReturn = userId;\n          _context2.next = 13;\n          break;\n\n        case 10:\n          _context2.prev = 10;\n          _context2.t0 = _context2[\"catch\"](1);\n          console.log(_context2.t0);\n\n        case 13:\n          return _context2.abrupt(\"return\", toReturn);\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[1, 10]], Promise);\n};\nexport var deleteUser = function deleteUser() {\n  return _regeneratorRuntime.async(function deleteUser$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(executeQuery('DELETE FROM Users;'));\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["C:/Repositorio/SgoApp/APP/db/login.js"],"names":["executeQuery","selectUsers","toReturn","then","items","newUser","userId","userCd","persist","console","log","deleteUser"],"mappings":";AAAA,SAASA,YAAT;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AACtBC,UAAAA,QADsB,GACX,EADW;AAAA;AAAA,2CAEpBF,YAAY,CAAC,sBAAD,EAAyB,EAAzB,CAAZ,CAAyCG,IAAzC,CACL,UAAAC,KAAK,EAAI;AACRF,YAAAA,QAAQ,GAAGE,KAAX;AACA,WAHI,CAFoB;;AAAA;AAAA,2CAOnBF,QAPmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB;AAUP,OAAO,IAAMG,OAAO,GAAG,SAAVA,OAAU,CAAOC,MAAP,EAAeC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAClBL,UAAAA,QADkB,GACP,KADO;AAAA;AAAA;AAAA,2CAIfF,YAAY,CAAC,oBAAD,CAJG;;AAAA;AAAA;AAAA,2CAMCA,YAAY,CAAC,kDAAD,EAAqD,CAACM,MAAD,EAASC,MAAT,CAArD,CANb;;AAAA;AAMfC,UAAAA,OANe;AAQrBN,UAAAA,QAAQ,GAAGI,MAAX;AARqB;AAAA;;AAAA;AAAA;AAAA;AAWrBG,UAAAA,OAAO,CAACC,GAAR;;AAXqB;AAAA,4CAafR,QAbe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB;AAgBP,OAAO,IAAMS,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACnBX,YAAY,CAAC,oBAAD,CADO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB","sourcesContent":["import { executeQuery } from '../db/sqliteConnection';\r\n\r\nexport const selectUsers = async () => {\r\n\tlet toReturn = [];\r\n\tawait executeQuery('select * from Users;', []).then(\r\n\t\titems => {\r\n\t\t\ttoReturn = items;\r\n\t\t}\r\n\t);\r\n\treturn toReturn;\r\n}\r\n\r\nexport const newUser = async (userId, userCd) => {\r\n\tlet toReturn = false;\r\n\t\r\n\ttry {\r\n\t\tawait executeQuery('DELETE FROM Users;');\r\n\t\t\r\n\t\tconst persist = await executeQuery('INSERT INTO Users (userId, userCd) VALUES (?,?);', [userId, userCd]);\r\n\t\r\n\t\ttoReturn = userId;\r\n\t} catch (error) {\r\n\t\t\r\n\t\tconsole.log(error);\r\n    }\r\n\treturn toReturn;\r\n}\r\n\r\nexport const deleteUser = async () => {\r\n\tawait executeQuery('DELETE FROM Users;');\r\n}"]},"metadata":{},"sourceType":"module"}