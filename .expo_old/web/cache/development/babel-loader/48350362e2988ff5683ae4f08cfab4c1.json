{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Repositorio\\\\SgoApp\\\\APP\\\\components\\\\AnimatedMessage.js\";\nimport React, { useState, useEffect } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { styles } from \"../styles/styles\";\nexport function Message(props) {\n  var _useState = useState(undefined),\n      _useState2 = _slicedToArray(_useState, 2),\n      message = _useState2[0],\n      setMessage = _useState2[1];\n\n  var _useState3 = useState(new Animated.Value(1)),\n      _useState4 = _slicedToArray(_useState3, 1),\n      fadeAnim = _useState4[0];\n\n  useEffect(function () {\n    setMessage(props.message);\n\n    if (props.message) {\n      Animated.timing(fadeAnim, {\n        toValue: 0,\n        duration: 5 * 1000\n      }).start(function (_ref) {\n        var finished = _ref.finished;\n\n        if (finished) {\n          setMessage(undefined);\n          fadeAnim.setValue(1);\n          props.callback();\n        }\n      });\n    }\n  }, [props.message]);\n  return React.createElement(Animated.View, {\n    style: {\n      opacity: fadeAnim\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, message ? React.createElement(Text, {\n    style: styles.messageText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 27\n    }\n  }, message) : React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 79\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Repositorio/SgoApp/APP/components/AnimatedMessage.js"],"names":["React","useState","useEffect","styles","Message","props","undefined","message","setMessage","Animated","Value","fadeAnim","timing","toValue","duration","start","finished","setValue","callback","opacity","messageText"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;AAEA,SAASC,MAAT;AAEA,OAAO,SAASC,OAAT,CAAkBC,KAAlB,EAAyB;AAAA,kBACDJ,QAAQ,CAACK,SAAD,CADP;AAAA;AAAA,MACxBC,OADwB;AAAA,MACfC,UADe;;AAAA,mBAEZP,QAAQ,CAAC,IAAIQ,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAD,CAFI;AAAA;AAAA,MAExBC,QAFwB;;AAI/BT,EAAAA,SAAS,CAAC,YAAM;AACfM,IAAAA,UAAU,CAACH,KAAK,CAACE,OAAP,CAAV;;AACA,QAAIF,KAAK,CAACE,OAAV,EAAmB;AAClBE,MAAAA,QAAQ,CAACG,MAAT,CAAgBD,QAAhB,EAA0B;AAACE,QAAAA,OAAO,EAAE,CAAV;AAAaC,QAAAA,QAAQ,EAAE,IAAI;AAA3B,OAA1B,EAA4DC,KAA5D,CAAkE,gBAAkB;AAAA,YAAfC,QAAe,QAAfA,QAAe;;AAAC,YAAIA,QAAJ,EAAc;AAClGR,UAAAA,UAAU,CAACF,SAAD,CAAV;AACAK,UAAAA,QAAQ,CAACM,QAAT,CAAkB,CAAlB;AACAZ,UAAAA,KAAK,CAACa,QAAN;AACA;AAAC,OAJF;AAKA;AACD,GATQ,EASN,CAACb,KAAK,CAACE,OAAP,CATM,CAAT;AAWA,SACC,oBAAC,QAAD,CAAU,IAAV;AAAe,IAAA,KAAK,EAAE;AAACY,MAAAA,OAAO,EAAER;AAAV,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACSJ,OAAD,GAAY,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACiB,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCb,OAAlC,CAAZ,GAAgE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADxE,CADJ,CADD;AAOA","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Animated, Text, View } from 'react-native';\r\nimport { styles } from '../styles/styles';\r\n\r\nexport function Message (props) {\r\n\tconst [message, setMessage] = useState(undefined);\r\n\tconst [fadeAnim] = useState(new Animated.Value(1));\r\n\r\n\tuseEffect(() => {\r\n\t\tsetMessage(props.message);\r\n\t\tif (props.message) {\r\n\t\t\tAnimated.timing(fadeAnim, {toValue: 0, duration: 5 * 1000}).start(({ finished }) => {if (finished) {\r\n\t\t\t\tsetMessage(undefined);\r\n\t\t\t\tfadeAnim.setValue(1);\r\n\t\t\t\tprops.callback();\r\n\t\t\t}});\r\n\t\t}\r\n\t}, [props.message]);\r\n\r\n\treturn (\r\n\t\t<Animated.View style={{opacity: fadeAnim}}>\r\n    \t\t<View>\r\n        \t    {(message) ? <Text style={styles.messageText}>{message}</Text> : <Text/>}\r\n        \t</View>\r\n        </Animated.View>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}